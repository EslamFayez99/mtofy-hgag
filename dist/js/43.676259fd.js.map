{"version":3,"file":"js/43.676259fd.js","mappings":"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","sources":["webpack://mtofy-hgag/./src/components/home_page/UpperBanner.vue","webpack://mtofy-hgag/./src/components/home_page/UpperBanner.vue?bb5e","webpack://mtofy-hgag/./src/components/home_page/AboutUS.vue","webpack://mtofy-hgag/./src/components/home_page/AboutUS.vue?401f","webpack://mtofy-hgag/./src/components/home_page/PrayTim.vue","webpack://mtofy-hgag/./src/components/home_page/PrayTim.vue?196c","webpack://mtofy-hgag/./src/components/home_page/OurServices.vue","webpack://mtofy-hgag/./src/components/home_page/OurServices.vue?c6df","webpack://mtofy-hgag/./src/components/home_page/AchVement.vue","webpack://mtofy-hgag/./src/components/home_page/AchVement.vue?34a3","webpack://mtofy-hgag/./src/components/home_page/IthraGroup.vue","webpack://mtofy-hgag/./src/components/home_page/IthraGroup.vue?48ca","webpack://mtofy-hgag/./src/components/home_page/HereLord.vue","webpack://mtofy-hgag/./src/components/home_page/HereLord.vue?9a2b","webpack://mtofy-hgag/./src/components/home_page/OurNews.vue","webpack://mtofy-hgag/./src/components/home_page/OurNews.vue?a06d","webpack://mtofy-hgag/./node_modules/ssr-window/ssr-window.esm.js","webpack://mtofy-hgag/./node_modules/dom7/dom7.esm.js","webpack://mtofy-hgag/./node_modules/swiper/shared/dom.js","webpack://mtofy-hgag/./node_modules/swiper/shared/utils.js","webpack://mtofy-hgag/./node_modules/swiper/shared/get-support.js","webpack://mtofy-hgag/./node_modules/swiper/shared/get-device.js","webpack://mtofy-hgag/./node_modules/swiper/shared/get-browser.js","webpack://mtofy-hgag/./node_modules/swiper/core/modules/resize/resize.js","webpack://mtofy-hgag/./node_modules/swiper/core/modules/observer/observer.js","webpack://mtofy-hgag/./node_modules/swiper/core/events-emitter.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateSize.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateSlides.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateAutoHeight.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateSlidesOffset.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateSlidesProgress.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateProgress.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateSlidesClasses.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateActiveIndex.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/updateClickedSlide.js","webpack://mtofy-hgag/./node_modules/swiper/core/update/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/translate/getTranslate.js","webpack://mtofy-hgag/./node_modules/swiper/core/translate/setTranslate.js","webpack://mtofy-hgag/./node_modules/swiper/core/translate/minTranslate.js","webpack://mtofy-hgag/./node_modules/swiper/core/translate/maxTranslate.js","webpack://mtofy-hgag/./node_modules/swiper/core/translate/translateTo.js","webpack://mtofy-hgag/./node_modules/swiper/core/translate/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/transition/setTransition.js","webpack://mtofy-hgag/./node_modules/swiper/core/transition/transitionEmit.js","webpack://mtofy-hgag/./node_modules/swiper/core/transition/transitionStart.js","webpack://mtofy-hgag/./node_modules/swiper/core/transition/transitionEnd.js","webpack://mtofy-hgag/./node_modules/swiper/core/transition/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slideTo.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slideToLoop.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slideNext.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slidePrev.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slideReset.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slideToClosest.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/slideToClickedSlide.js","webpack://mtofy-hgag/./node_modules/swiper/core/slide/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/loop/loopCreate.js","webpack://mtofy-hgag/./node_modules/swiper/core/loop/loopFix.js","webpack://mtofy-hgag/./node_modules/swiper/core/loop/loopDestroy.js","webpack://mtofy-hgag/./node_modules/swiper/core/loop/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/grab-cursor/setGrabCursor.js","webpack://mtofy-hgag/./node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","webpack://mtofy-hgag/./node_modules/swiper/core/grab-cursor/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/onTouchStart.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/onTouchMove.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/onTouchEnd.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/onResize.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/onClick.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/onScroll.js","webpack://mtofy-hgag/./node_modules/swiper/core/events/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/breakpoints/setBreakpoint.js","webpack://mtofy-hgag/./node_modules/swiper/core/breakpoints/getBreakpoint.js","webpack://mtofy-hgag/./node_modules/swiper/core/breakpoints/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/classes/addClasses.js","webpack://mtofy-hgag/./node_modules/swiper/core/classes/removeClasses.js","webpack://mtofy-hgag/./node_modules/swiper/core/classes/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/images/loadImage.js","webpack://mtofy-hgag/./node_modules/swiper/core/images/preloadImages.js","webpack://mtofy-hgag/./node_modules/swiper/core/images/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/check-overflow/index.js","webpack://mtofy-hgag/./node_modules/swiper/core/defaults.js","webpack://mtofy-hgag/./node_modules/swiper/core/moduleExtendParams.js","webpack://mtofy-hgag/./node_modules/swiper/core/core.js","webpack://mtofy-hgag/./node_modules/swiper/shared/create-element-if-not-defined.js","webpack://mtofy-hgag/./node_modules/swiper/modules/navigation/navigation.js","webpack://mtofy-hgag/./node_modules/swiper/shared/classes-to-selector.js","webpack://mtofy-hgag/./node_modules/swiper/modules/pagination/pagination.js","webpack://mtofy-hgag/./node_modules/swiper/modules/autoplay/autoplay.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/utils.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/params-list.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/get-params.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/mount-swiper.js","webpack://mtofy-hgag/./node_modules/swiper/shared/calc-looped-slides.js","webpack://mtofy-hgag/./node_modules/swiper/vue/loop.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/get-changed-params.js","webpack://mtofy-hgag/./node_modules/swiper/vue/get-children.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/update-swiper.js","webpack://mtofy-hgag/./node_modules/swiper/vue/virtual.js","webpack://mtofy-hgag/./node_modules/swiper/components-shared/update-on-virtual-data.js","webpack://mtofy-hgag/./node_modules/swiper/vue/swiper.js","webpack://mtofy-hgag/./node_modules/swiper/vue/swiper-slide.js","webpack://mtofy-hgag/./src/components/home_page/SaidUS.vue","webpack://mtofy-hgag/./src/components/home_page/SaidUS.vue?00bc","webpack://mtofy-hgag/./src/components/home_page/OurPartners.vue","webpack://mtofy-hgag/./src/components/home_page/OurPartners.vue?53f6","webpack://mtofy-hgag/./src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"banner\">\n    <div class=\"parent\">\n      <img class=\"bg\" src=\"@/assets/images/banner.svg\" alt=\"\" />\n      <v-container class=\"cont\">\n        <v-row>\n          <v-col cols=\"12\" class=\"d-flex align-center justify-space-around\">\n            <div class=\"text\">\n              <h1\n                style=\"\n                  font-size: 50px;\n                  font-weight: 700;\n                  width: 800px;\n                  letter-spacing: normal;\n                  color: var(--whiteColor);\n                  line-height: normal;\n                \"\n              >\n                شركة مطوفي حجاج الدول الأفريقية غير العربية\n              </h1>\n              <p\n                class=\"py-5\"\n                style=\"\n                  font-size: 16px;\n                  color: var(--whiteColor);\n                  width: 700px;\n                  line-height: normal;\n                \"\n              >\n                تأسس هذا الكيان رسمياً عام 1404هـ كمؤسسة مقتصرة على مجموعة مغلقة\n                ومحددة من المساهمين، مختصة بتقديم خدمات الحج لحجاج بيت الله.\n              </p>\n              <v-btn\n                elevation=\"0\"\n                class=\"btn\"\n                style=\"\n                  font-size: 15px;\n                  font-weight: 700;\n                  letter-spacing: normal;\n                  background-color: var(--mainColor);\n                  width: 180px;\n                  height: 52px;\n                  border-radius: 31px;\n                  margin-top: 20px;\n                \"\n                >اكتشف المزيد</v-btn\n              >\n            </div>\n            <img\n              class=\"img\"\n              style=\"width: 420px\"\n              src=\"@/assets/images/title-home.svg\"\n              alt=\"\"\n            />\n          </v-col>\n        </v-row>\n      </v-container>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.banner {\n  .parent {\n    position: relative;\n    .bg {\n      width: 100%;\n      height: 100%;\n      background-size: cover;\n    }\n    .cont {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\n\n//  Media Queries\n@media (max-width: 1356px) {\n  .banner {\n    .parent {\n      .img {\n        width: 350px !important;\n      }\n      .text {\n        h1 {\n          font-size: 40px !important;\n          width: 600px !important;\n        }\n        p {\n          width: 550px !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 1200px) {\n  .banner {\n    .parent {\n      .img {\n        width: 300px !important;\n      }\n    }\n  }\n}\n@media (max-width: 990px) {\n  .banner {\n    .parent {\n      .img {\n        width: 250px !important;\n      }\n      .text {\n        h1 {\n          font-size: 30px !important;\n          width: 500px !important;\n        }\n        p {\n          width: 350px !important;\n          font-size: 13px !important;\n        }\n        .btn {\n          font-size: 13px !important;\n          width: 150px !important;\n          height: 45px !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 800px) {\n  .banner {\n    .parent {\n      .text {\n        text-align: center;\n        padding: 50px;\n        h1 {\n          font-size: 30px !important;\n          width: 100% !important;\n        }\n        p {\n          width: 100% !important;\n          font-size: 13px !important;\n        }\n        .btn {\n          margin: 0 !important;\n        }\n      }\n      .img {\n        display: none;\n      }\n    }\n  }\n}\n\n@media (max-width: 675px) {\n  .banner {\n    .parent {\n      .bg {\n        width: fit-content;\n        height: 400px;\n      }\n      .text {\n        // padding-top: 80px !important;\n        h1 {\n          font-size: 25px !important;\n        }\n        p {\n          font-size: 12px !important;\n        }\n        .btn {\n          font-weight: 500 !important;\n          width: 140px !important;\n          height: 40px !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 510px) {\n  .banner {\n    .parent {\n      .text {\n        padding: 0;\n        h1 {\n          font-size: 20px !important;\n          font-weight: 600 !important;\n        }\n        p {\n          font-weight: 300 !important;\n        }\n        .btn {\n          font-weight: 500 !important;\n          font-size: 10px !important;\n          width: 100px !important;\n          height: 33px !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 480px) {\n  .banner {\n    .parent {\n      .bg {\n        width: 100%;\n        height: 100%;\n      }\n      .text {\n        padding: 0;\n        h1 {\n          font-size: 16px !important;\n          font-weight: 500 !important;\n        }\n        p {\n          padding: 5px !important;\n          font-size: 10px !important;\n          font-weight: 300 !important;\n        }\n        .btn {\n          font-weight: 500 !important;\n          font-size: 10px !important;\n          width: 100px !important;\n          height: 33px !important;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./UpperBanner.vue?vue&type=template&id=3ab6c366&scoped=true\"\nconst script = {}\n\nimport \"./UpperBanner.vue?vue&type=style&index=0&id=3ab6c366&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ab6c366\"]])\n\nexport default __exports__","<template>\n  <div class=\"about pt-12\">\n    <v-container>\n      <v-row class=\"d-flex align-center\">\n        <v-col class=\"img\" cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <img\n            src=\"@/assets/images/عن-الشركة-1.svg\"\n            style=\"width: 700px\"\n            alt=\"\"\n          />\n        </v-col>\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <div class=\"text\">\n            <h3\n              style=\"font-size: 32px; font-weight: 700; width: 600px\"\n              class=\"pb-8\"\n            >\n              شركة مطوفي حجاج الدول الأفريقية غير العربية\n            </h3>\n            <p class=\"pb-12\" style=\"width: 500px\">\n              تأسس هذا الكيان رسمياً عام 1404هـ كمؤسسة مقتصرة على مجموعة مغلقة\n              ومحددة من المساهمين، مختصة بتقديم خدمات الحج لحجاج بيت الله الحرام\n              القادمين حصراً من الدول الأفريقية غير العربية ، تماشياً مع رؤية\n              المملكة 2030 م وتوجيهات القيادة الرشيدة- حفظها الله التي أطلقت\n              برنامج خدمة ضيوف الرحمن والتي تهدف إلى استقبال (٣٠) مليون حاج\n              ومعتمر بحلول عام 2030 م.\n            </p>\n            <v-btn\n              elevation=\"0\"\n              style=\"\n                width: 145px;\n                height: 48px;\n                border-radius: 24px;\n                background-color: var(--mainColor);\n              \"\n              ><router-link class=\"text-white\" to=\"/about-company\"\n                >اقرأ المزيد</router-link\n              ></v-btn\n            >\n          </div>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n// Media Query\n@media (max-width: 1700px) {\n  .about {\n    .img {\n      img {\n        width: 100% !important;\n      }\n    }\n  }\n}\n@media (max-width: 1200px) {\n  .about {\n    .text {\n      h3 {\n        font-size: 25px !important;\n        width: 450px !important;\n      }\n      p {\n        width: 100% !important;\n      }\n    }\n  }\n}\n@media (max-width: 970px) {\n  .about {\n    .img {\n      img {\n        width: 600px !important;\n      }\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .text {\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      p {\n        padding: 0 20px;\n      }\n      h3 {\n        width: 100% !important;\n      }\n    }\n  }\n}\n@media (max-width: 555px) {\n  .about {\n    .img {\n      img {\n        width: 100% !important;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./AboutUS.vue?vue&type=template&id=ec3ef77a&scoped=true\"\nconst script = {}\n\nimport \"./AboutUS.vue?vue&type=style&index=0&id=ec3ef77a&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ec3ef77a\"]])\n\nexport default __exports__","<template>\n  <div class=\"pray-tim\">\n    <v-container>\n      <!-- <img src=\"@/assets/images/مواقيت-الصلاة.svg\" class=\"w-100\" alt=\"\" /> -->\n    </v-container>\n  </div>\n</template>\n","import { render } from \"./PrayTim.vue?vue&type=template&id=23d37434\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"our-services\">\n    <v-container>\n      <v-row class=\"d-flex align-center\">\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <div class=\"text\">\n            <h2\n              style=\"font-size: 53px; font-weight: 700; width: 500px\"\n              class=\"mb-8\"\n            >\n              خدماتنا لضيوف الرحمن\n            </h2>\n            <h3\n              class=\"pb-5\"\n              style=\"font-size: 24px; font-weight: 700; color: var(--mainColor)\"\n            >\n              استقبال الحجيج\n            </h3>\n            <p style=\"font-size: 16px; width: 500px\">\n              تكوين فرق عمل احترافية متخصصة ذات معايير وآليات موحدة تلبي مقاييس\n              التوصيف الكمي والنوعي وتقدم باقات متعددة تناسب المستويات المختلفة.\n            </p>\n            <v-btn\n              class=\"mt-5\"\n              elevation=\"0\"\n              style=\"\n                width: 145px;\n                height: 48px;\n                border-radius: 24px;\n                background-color: var(--mainColor);\n              \"\n              ><router-link class=\"text-white\" to=\"/our-services\"\n                >اقرأ المزيد</router-link\n              ></v-btn\n            >\n          </div>\n        </v-col>\n        <v-col class=\"img\" cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <img src=\"@/assets/images/خدماتنا.svg\" style=\"width: 700px\" alt=\"\" />\n        </v-col>\n      </v-row>\n      <v-row class=\"pt-12\">\n        <v-col cols=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n          <router-link class=\"text-white\" to=\"/receiv-pilgrims\">\n            <v-card\n              elevation=\"0\"\n              class=\"card-img text-center d-flex flex-column align-center\"\n            >\n              <img\n                src=\"@/assets/images/التفويج.svg\"\n                style=\"width: 450px\"\n                alt=\"\"\n              />\n              <v-card-title\n                class=\"title pb-5\"\n                style=\"\n                  font-size: 24px;\n                  font-weight: 700;\n                  color: var(--mainColor);\n                \"\n                >التفويج</v-card-title\n              >\n              <v-card-text class=\"text\" style=\"font-size: 16px; width: 500px\"\n                >تكوين فرق عمل احترافية متخصصة ذات معايير وآليات موحدة تلبي\n                مقاييس التوصيف الكمي والنوعي وتقدم باقات متعددة تناسب المستويات\n                المختلفة.</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n        <v-col cols=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n          <router-link class=\"text-white\" to=\"/receiv-pilgrims\">\n            <v-card\n              elevation=\"0\"\n              class=\"card-img text-center d-flex flex-column align-center\"\n            >\n              <img\n                src=\"@/assets/images/مخيمات.svg\"\n                style=\"width: 450px\"\n                alt=\"\"\n              />\n              <v-card-title\n                class=\"title pb-5\"\n                style=\"\n                  font-size: 24px;\n                  font-weight: 700;\n                  color: var(--mainColor);\n                \"\n                >تجهيز مخيمات الحجاج</v-card-title\n              >\n              <v-card-text class=\"text\" style=\"font-size: 16px; width: 500px\"\n                >تكوين فرق عمل احترافية متخصصة ذات معايير وآليات موحدة تلبي\n                مقاييس التوصيف الكمي والنوعي وتقدم باقات متعددة تناسب المستويات\n                المختلفة.</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n        <v-col cols=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n          <router-link class=\"text-white\" to=\"/receiv-pilgrims\">\n            <v-card\n              elevation=\"0\"\n              class=\"card-img text-center d-flex flex-column align-center\"\n            >\n              <img\n                src=\"@/assets/images/الجودة.svg\"\n                style=\"width: 450px\"\n                alt=\"\"\n              />\n              <v-card-title\n                class=\"title pb-5\"\n                style=\"\n                  font-size: 24px;\n                  font-weight: 700;\n                  color: var(--mainColor);\n                \"\n                >مراقبة الجودة\n              </v-card-title>\n              <v-card-text class=\"text\" style=\"font-size: 16px; width: 500px\"\n                >تكوين فرق عمل احترافية متخصصة ذات معايير وآليات موحدة تلبي\n                مقاييس التوصيف الكمي والنوعي وتقدم باقات متعددة تناسب المستويات\n                المختلفة.</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n// Media Query\n@media (max-width: 1700px) {\n  .our-services {\n    .img {\n      img {\n        width: 100% !important;\n      }\n    }\n    .card-img {\n      img {\n        width: 100% !important;\n      }\n      .text {\n        width: 100% !important;\n      }\n    }\n  }\n}\n@media (max-width: 1200px) {\n  .our-services {\n    .text {\n      h2 {\n        font-size: 30px !important;\n      }\n      p {\n        width: 100% !important;\n      }\n    }\n  }\n}\n@media (max-width: 960px) {\n  .our-services {\n    .img {\n      img {\n        width: 600px !important;\n      }\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .text {\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      p {\n        padding: 0 20px;\n      }\n      h2 {\n        width: 100% !important;\n      }\n    }\n    .card-img {\n      img {\n        width: 400px !important;\n      }\n      .text {\n        width: 500px !important;\n      }\n    }\n  }\n}\n@media (max-width: 500px) {\n  .our-services {\n    .img {\n      img {\n        width: 100% !important;\n      }\n    }\n    .card-img {\n      img {\n        width: 100% !important;\n      }\n      .title {\n        font-size: 20px !important;\n      }\n      .text {\n        width: 100% !important;\n        font-size: 14px !important;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./OurServices.vue?vue&type=template&id=03d7d797&scoped=true\"\nconst script = {}\n\nimport \"./OurServices.vue?vue&type=style&index=0&id=03d7d797&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-03d7d797\"]])\n\nexport default __exports__","<template>\n  <div class=\"achvement py-15\">\n    <div class=\"parent d-flex align-center\">\n      <v-container>\n        <v-row class=\"d-flex align-center\">\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n            <div class=\"img\">\n              <img\n                src=\"@/assets/images/المنجزات-2.svg\"\n                style=\"width: 500px\"\n                alt=\"\"\n              />\n            </div>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n            <div class=\"text pr-\">\n              <h1 style=\"font-size: 50px; font-weight: 700\">\n                المنجزات والتطوير\n              </h1>\n              <h3\n                class=\"pt-8\"\n                style=\"font-size: 30px; color: var(--mainColor); width: 700px\"\n              >\n                لجنة العلاقات العامة والإعلام\n              </h3>\n              <p class=\"py-5\" style=\"font-size: 16px; width: 600px\">\n                تكوين فرق عمل احترافية متخصصة ذات معايير وآليات موحدة تلبي\n                مقاييس التوصيف الكمي والنوعي وتقدم باقات متعددة تناسب المستويات\n                المختلفة.\n              </p>\n              <v-btn\n                elevation=\"0\"\n                class=\"btn\"\n                style=\"\n                  font-size: 16px;\n                  font-weight: 700;\n                  letter-spacing: normal;\n                  background-color: var(--mainColor);\n                  width: 145px;\n                  height: 48px;\n                  border-radius: 31px;\n                  margin-top: 20px;\n                \"\n              >\n                <router-link class=\"text-white\" to=\"/health-news\"\n                  >اقرأ المزيد\n                </router-link></v-btn\n              >\n            </div>\n          </v-col>\n        </v-row>\n      </v-container>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.parent {\n  background-image: url(../../assets/images/المنجزات-1.svg);\n  width: 100%;\n  height: 740px;\n  background-size: cover;\n}\n// Media Query\n@media (max-width: 1278px) {\n  .achvement {\n    .parent {\n      .img {\n        img {\n          width: 100% !important;\n        }\n      }\n    }\n    .text {\n      padding-right: 30px;\n      h1 {\n        font-size: 45px !important;\n      }\n      p {\n        width: 100% !important;\n      }\n    }\n  }\n}\n@media (max-width: 960px) {\n  .achvement {\n    margin: 50px 0 !important;\n    .parent {\n      height: fit-content;\n      .img {\n        img {\n          width: 500px !important;\n        }\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .text {\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 50px 0;\n        p {\n          padding: 0 80px;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 555px) {\n  .achvement {\n    .parent {\n      .img {\n        img {\n          width: 100% !important;\n        }\n      }\n      .text {\n        h1 {\n          font-size: 35px !important;\n        }\n        h3 {\n          font-size: 23px !important;\n          width: 100% !important;\n        }\n        p {\n          padding: 0;\n        }\n        .btn {\n          font-size: 14px !important;\n          font-weight: 500 !important;\n          width: 130px !important;\n          height: 40px !important;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./AchVement.vue?vue&type=template&id=7c7b00ca&scoped=true\"\nconst script = {}\n\nimport \"./AchVement.vue?vue&type=style&index=0&id=7c7b00ca&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c7b00ca\"]])\n\nexport default __exports__","<template>\n  <div class=\"ithra-group\">\n    <v-container>\n      <v-row class=\"content d-flex align-center\">\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <v-card class=\"info\" elevation=\"0\" color=\"transparent\">\n            <v-card-title\n              class=\"main-title pb-15\"\n              style=\"font-size: 60px; font-weight: 700; color: var(--mainColor)\"\n              >مجموعة إثراء</v-card-title\n            >\n            <v-card-text class=\"title\" style=\"font-size: 18px; font-weight: 700\"\n              >شركة مطوفي حجاج الدول الأفريقية غير العربية</v-card-text\n            >\n            <v-card-text\n              class=\"text pb-8\"\n              style=\"font-size: 16px; font-weight: 400\"\n              >تأسس هذا الكيان رسمياً عام 1404هـ كمؤسسة مقتصرة على مجموعة مغلقة\n              ومحددة من المساهمين، مختصة بتقديم خدمات الحج لحجاج بيت الله الحرام\n              القادمين حصراً من الدول الأفريقية غير العربية ، تماشياً مع رؤية\n              المملكة 2030 م.</v-card-text\n            >\n          </v-card>\n          <v-card elevation=\"0\" class=\"btn-card d-flex align-center\">\n            <v-card-title style=\"font-size: 14px; font-weight: 400\"\n              >زر الموقع الإلكتروني :</v-card-title\n            >\n            <span\n              class=\"btn d-flex align-center justify-center\"\n              style=\"\n                gap: 5px;\n                font-size: 14px;\n                font-weight: 700;\n                width: 340px;\n                height: 44px;\n                background-color: #fdf9f5;\n                color: var(--mainColor);\n              \"\n            >\n              https://africa-sa.com/?page_id=9456\n              <svg\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M10 0C4.48333 0 0 4.48333 0 10C0 15.5167 4.48333 20 10 20C10.625 20 11.2333 19.9417 11.8333 19.8333L11.15 17.7833C11.05 17.8833 10.9417 17.9667 10.8333 18.0417V16.825L9.28333 12.1833C9.2 11.9417 9.16667 11.6917 9.16667 11.45V13.1417C8.375 13.175 7.6 13.2417 6.86667 13.3667C6.71667 12.5833 6.61667 11.7333 6.575 10.8167H9.16667V11.45C9.16667 10.8583 9.4 10.2833 9.84167 9.84167C10.2667 9.40833 10.8417 9.16667 11.4583 9.16667C11.7083 9.16667 11.95 9.20833 12.1917 9.28333L16.7833 10.8167H18.2917C18.275 10.9833 18.2583 11.1417 18.225 11.3L19.8333 11.8333C19.9417 11.2333 20 10.625 20 10C20 4.48333 15.5167 0 10 0ZM9.16667 14.8083V18.0417C8.45 17.5583 7.76667 16.4917 7.28333 14.9833C7.89167 14.8917 8.51667 14.8333 9.16667 14.8083ZM3 5.49167C3.66667 5.80833 4.41667 6.075 5.23333 6.29167C5.05833 7.18333 4.95 8.14167 4.90833 9.15H1.70833C1.84167 7.81667 2.30833 6.575 3 5.49167ZM1.70833 10.8167H4.90833C4.95 11.8417 5.05833 12.8083 5.23333 13.7083C4.41667 13.925 3.66667 14.1917 3 14.5083C2.28155 13.3982 1.8387 12.1325 1.70833 10.8167ZM6.61667 17.6083C5.667 17.1862 4.80488 16.5898 4.075 15.85C4.55 15.6417 5.075 15.4667 5.63333 15.325C5.9 16.1833 6.23333 16.9583 6.61667 17.6083ZM5.63333 4.675C5.075 4.53333 4.55 4.35833 4.075 4.15C4.8 3.41667 5.65833 2.81667 6.61667 2.39167C6.23333 3.04167 5.9 3.81667 5.63333 4.675ZM9.16667 9.15H6.575C6.61667 8.25 6.71667 7.40833 6.86667 6.63333C7.6 6.75833 8.375 6.825 9.16667 6.85833V9.15ZM9.16667 5.19167C8.51667 5.16667 7.89167 5.10833 7.28333 5.01667C7.76667 3.50833 8.45 2.44167 9.16667 1.95833V5.19167ZM10.8333 1.95833C11.55 2.44167 12.2333 3.50833 12.7167 5.01667C12.1083 5.10833 11.4833 5.16667 10.8333 5.19167V1.95833ZM10.8333 9.15V6.85833C11.625 6.825 12.4 6.75833 13.1333 6.63333C13.2833 7.40833 13.3833 8.25 13.425 9.15H10.8333ZM13.3833 2.39167C14.3417 2.81667 15.2 3.41667 15.925 4.15C15.45 4.35833 14.925 4.53333 14.3667 4.675C14.1 3.81667 13.7667 3.04167 13.3833 2.39167ZM15.0917 9.15C15.05 8.14167 14.9417 7.18333 14.7667 6.29167C15.5833 6.075 16.3333 5.80833 17 5.49167C17.6917 6.575 18.1583 7.81667 18.2917 9.15H15.0917Z\"\n                  fill=\"#A77646\"\n                />\n                <path\n                  d=\"M14.0976 20.0002H14.0834C13.9547 19.9973 13.8301 19.9547 13.7265 19.8781C13.623 19.8016 13.5456 19.6949 13.5051 19.5727L10.8659 11.656C10.8291 11.5459 10.8238 11.4277 10.8504 11.3146C10.8771 11.2016 10.9347 11.0982 11.0168 11.0161C11.0989 10.9339 11.2023 10.8763 11.3153 10.8497C11.4284 10.823 11.5466 10.8284 11.6568 10.8652L19.5734 13.5044C19.6954 13.5452 19.8019 13.6227 19.8782 13.7262C19.9546 13.8297 19.9971 13.9543 20 14.0829C20.0029 14.2115 19.9661 14.3379 19.8945 14.4448C19.8229 14.5517 19.7201 14.6339 19.6001 14.6802L16.0476 16.0469L14.6809 19.5994C14.6356 19.7173 14.5556 19.8188 14.4515 19.8903C14.3473 19.9619 14.224 20.0002 14.0976 20.0002Z\"\n                  fill=\"#A77646\"\n                />\n              </svg>\n            </span>\n          </v-card>\n        </v-col>\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <div class=\"img\">\n            <img style=\"width: 600px\" src=\"@/assets/images/اثراء.svg\" alt=\"\" />\n          </div>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n// Media Query\n@media (min-width: 1700px) {\n  .ithra-group {\n    .info {\n      .text {\n        width: 650px;\n      }\n    }\n  }\n}\n@media (max-width: 1280px) {\n  .ithra-group {\n    .content {\n      .info {\n        .main-title {\n          font-size: 50px !important;\n        }\n        .title {\n          font-size: 16px !important;\n        }\n        .text {\n          font-size: 14px !important;\n        }\n      }\n      .btn-card {\n        .btn {\n          font-weight: 500 !important;\n        }\n      }\n      .img {\n        img {\n          width: 100% !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 960px) {\n  .ithra-group {\n    .content {\n      .info {\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        .main-title {\n          font-size: 40px !important;\n        }\n        .text {\n          padding: 0 120px;\n        }\n      }\n      .btn-card {\n        display: flex;\n        justify-content: center;\n      }\n      .img {\n        display: flex !important;\n        align-items: center !important;\n        justify-content: center !important;\n        img {\n          width: 600px !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 650px) {\n  .ithra-group {\n    .content {\n      .info {\n        .main-title {\n          font-size: 30px !important;\n          padding-bottom: 25px !important;\n        }\n        .title {\n          font-size: 14px !important;\n        }\n        .text {\n          font-size: 12px !important;\n          padding: 0;\n        }\n      }\n      .img {\n        img {\n          width: 100% !important;\n        }\n      }\n    }\n  }\n}\n@media (max-width: 470px) {\n  .ithra-group {\n    .content {\n      .btn-card {\n        .btn {\n          font-size: 10px !important;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./IthraGroup.vue?vue&type=template&id=6f45c73c&scoped=true\"\nconst script = {}\n\nimport \"./IthraGroup.vue?vue&type=style&index=0&id=6f45c73c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6f45c73c\"]])\n\nexport default __exports__","<template>\n  <div class=\"here pb-8\">\n    <v-container>\n      <v-row class=\"d-flex align-center\">\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <div class=\"img\">\n            <img src=\"@/assets/images/here.svg\" class=\"w-100\" alt=\"\" />\n          </div>\n        </v-col>\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <v-row class=\"parent\">\n            <v-col cols=\"6\">\n              <v-card elevation=\"0\" style=\"width: fit-content\">\n                <span\n                  ><svg\n                    width=\"54\"\n                    height=\"53\"\n                    viewBox=\"0 0 54 53\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    style=\"margin-right: 15px\"\n                  >\n                    <path\n                      d=\"M44.575 24.0875C44.575 26.7388 44.0528 29.3643 43.0381 31.8138C42.0235 34.2634 40.5363 36.4891 38.6615 38.3639C36.7867 40.2387 34.5609 41.7259 32.1114 42.7406C29.6618 43.7552 27.0364 44.2774 24.385 44.2774C19.0314 44.2758 13.8975 42.1479 10.1125 38.3618C6.32748 34.5756 4.20117 29.4411 4.20117 24.0875C4.20117 18.7327 6.32833 13.5973 10.1147 9.81097C13.901 6.02461 19.0364 3.89746 24.3912 3.89746C27.0426 3.89746 29.668 4.41969 32.1175 5.43433C34.5671 6.44897 36.7928 7.93616 38.6676 9.81097C40.5425 11.6858 42.0296 13.9115 43.0443 16.3611C44.0589 18.8106 44.575 21.4361 44.575 24.0875Z\"\n                      fill=\"#E7AC6D\"\n                    />\n                    <path\n                      d=\"M7.29735 0.525568C5.48351 0.949673 3.86587 1.97351 2.7063 3.43136C1.54673 4.8892 0.913091 6.69571 0.907959 8.55847C0.907959 13.1135 4.61356 16.8191 9.16246 16.8191C12.6218 16.7822 16.2413 14.6524 17.2015 10.4051C17.417 9.46949 16.1182 8.99551 15.6811 9.85113C15.2604 10.6551 14.6565 11.3489 13.9181 11.8764C13.1798 12.4039 12.3278 12.7504 11.4308 12.8878C10.5339 13.0252 9.61717 12.9498 8.75476 12.6675C7.89235 12.3853 7.10842 11.9042 6.46628 11.263C5.82413 10.6219 5.34178 9.83872 5.05818 8.97676C4.77458 8.1148 4.69768 7.19823 4.8337 6.30106C4.96971 5.4039 5.31483 4.5513 5.84118 3.81214C6.36752 3.07297 7.06033 2.46796 7.86366 2.04597C7.96307 1.99334 8.05037 1.9205 8.11995 1.83212C8.18953 1.74374 8.23985 1.64178 8.26768 1.53279C8.2955 1.42381 8.30022 1.3102 8.28153 1.19928C8.26283 1.08837 8.22113 0.982585 8.15912 0.888741C8.07098 0.747475 7.94187 0.636442 7.78899 0.570454C7.63612 0.504466 7.46676 0.486661 7.30351 0.519412L7.29735 0.525568ZM3.32706 5.44996C3.03592 6.68473 3.06526 7.97343 3.41231 9.19368C3.75936 10.4139 4.41258 11.5252 5.30995 12.4219C6.20732 13.3187 7.31904 13.9711 8.53952 14.3174C9.76 14.6636 11.0487 14.692 12.2833 14.4C11.4215 14.8124 10.172 15.1879 9.16246 15.1879C5.49995 15.1879 2.53916 12.2333 2.53916 8.55847C2.53916 7.55513 2.9208 6.31172 3.32706 5.44996Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M25.3329 24.1566C25.1885 24.164 25.0487 24.2095 24.9276 24.2884C24.8065 24.3673 24.7085 24.4769 24.6435 24.606L22.606 28.6871C22.511 28.8793 22.4952 29.101 22.5619 29.3048C22.6287 29.5085 22.7727 29.6779 22.963 29.7766L37.2376 37.1139C37.3379 37.165 37.4477 37.1949 37.56 37.2017C37.6724 37.2084 37.785 37.192 37.8907 37.1533C37.9964 37.1145 38.093 37.0545 38.1745 36.9767C38.2559 36.899 38.3204 36.8053 38.364 36.7015L40.4015 31.8079C40.408 31.7958 40.4141 31.7834 40.42 31.771L42.4513 26.0648C42.5002 25.9617 42.5271 25.8495 42.5301 25.7354C42.5331 25.6213 42.5122 25.5078 42.4688 25.4022C42.4253 25.2967 42.3603 25.2013 42.2779 25.1224C42.1954 25.0435 42.0973 24.9826 41.99 24.9438C41.8826 24.905 41.7683 24.8891 41.6545 24.8971C41.5406 24.9051 41.4297 24.9368 41.3288 24.9902C41.2279 25.0436 41.1392 25.1175 41.0686 25.2071C40.998 25.2968 40.9469 25.4003 40.9186 25.5109L38.8873 31.2047L37.1945 35.2611L24.428 28.6932L25.7822 25.991L34.0675 29.0072C34.1698 29.0495 34.2797 29.0707 34.3904 29.0694C34.5012 29.0681 34.6105 29.0443 34.7118 28.9995C34.8131 28.9547 34.9042 28.8898 34.9797 28.8088C35.0552 28.7278 35.1134 28.6323 35.151 28.5281C35.1885 28.4239 35.2045 28.3131 35.1979 28.2026C35.1914 28.092 35.1625 27.9839 35.113 27.8849C35.0635 27.7858 34.9945 27.6978 34.91 27.6262C34.8255 27.5546 34.7274 27.5009 34.6215 27.4683L25.653 24.2059C25.5506 24.1683 25.4418 24.1516 25.3329 24.1566Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M42.4822 14.3687C42.3238 14.372 42.1699 14.4212 42.039 14.5102L34.2954 19.8101C34.1376 19.9173 34.0222 20.0762 33.9691 20.2595L31.9317 27.1905C31.8965 27.2949 31.8828 27.4054 31.8913 27.5152C31.8999 27.6251 31.9305 27.7321 31.9814 27.8298C32.0322 27.9275 32.1023 28.014 32.1874 28.084C32.2725 28.154 32.3708 28.2061 32.4765 28.2372C32.5822 28.2683 32.6931 28.2777 32.8026 28.2649C32.912 28.2521 33.0177 28.2174 33.1134 28.1627C33.2091 28.1081 33.2928 28.0348 33.3594 27.947C33.4261 27.8593 33.4743 27.759 33.5013 27.6522L35.4526 20.9981L42.3467 16.2769L45.7446 20.3518L44.1811 46.1679L28.6508 46.0694C28.5433 46.0686 28.4367 46.089 28.337 46.1294C28.2374 46.1698 28.1467 46.2294 28.0701 46.3048C27.9935 46.3803 27.9325 46.4701 27.8906 46.5691C27.8487 46.6681 27.8268 46.7744 27.826 46.8819C27.8251 46.9894 27.8455 47.096 27.8859 47.1957C27.9263 47.2953 27.9859 47.386 28.0614 47.4626C28.1368 47.5392 28.2266 47.6002 28.3256 47.6421C28.4247 47.684 28.531 47.7059 28.6385 47.7068L44.9505 47.8176C45.1594 47.8179 45.3605 47.7385 45.5127 47.5954C45.6649 47.4524 45.7566 47.2566 45.7692 47.0481L47.4004 20.1363C47.4137 19.929 47.3477 19.7244 47.2157 19.5639L43.1346 14.6703C43.056 14.5756 42.9571 14.4999 42.8452 14.4488C42.7333 14.3976 42.6113 14.3723 42.4883 14.3748L42.4822 14.3687Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M44.9381 46.1739C44.7688 46.1772 44.6048 46.2329 44.4685 46.3333C44.3322 46.4337 44.2304 46.5739 44.1771 46.7345C44.1238 46.8952 44.1215 47.0684 44.1707 47.2304C44.2199 47.3923 44.3181 47.5351 44.4518 47.6389C44.4518 47.6389 45.9291 48.8577 47.0556 49.3624C47.9481 49.7749 48.9207 49.8549 49.7455 49.978C50.5703 50.1011 51.192 50.3104 51.3028 50.4273C51.2228 50.3473 51.3829 50.7167 51.4383 51.0675H43.3315C43.2184 51.0577 43.1046 51.0715 42.9971 51.108C42.8897 51.1445 42.791 51.203 42.7073 51.2797C42.6237 51.3564 42.5569 51.4496 42.5112 51.5535C42.4655 51.6574 42.4419 51.7696 42.4419 51.8831C42.4419 51.9966 42.4655 52.1089 42.5112 52.2127C42.5569 52.3166 42.6237 52.4099 42.7073 52.4866C42.791 52.5633 42.8897 52.6217 42.9971 52.6582C43.1046 52.6948 43.2184 52.7086 43.3315 52.6987H52.2877C52.4965 52.6974 52.6969 52.6164 52.848 52.4723C52.999 52.3281 53.0893 52.1316 53.1003 51.9231C53.1003 51.9231 53.1249 51.4861 53.0756 50.969C53.0264 50.4581 53.0264 49.8364 52.4601 49.2701C51.7584 48.5684 50.8412 48.4884 49.9794 48.3653C49.1177 48.2422 48.2559 48.119 47.7327 47.8851C47.0802 47.5897 45.4674 46.3586 45.4674 46.3586C45.3182 46.2366 45.1308 46.1712 44.9381 46.1739Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M39.3491 0.520171C40.3372 0.601878 41.2844 0.951106 42.089 1.53038C42.8937 2.10965 43.5255 2.8971 43.9165 3.80823C44.3075 4.71935 44.443 5.71975 44.3086 6.70208C44.1741 7.6844 43.7747 8.61156 43.1531 9.38407C43.0926 9.48275 43.0118 9.56748 42.9162 9.63265C42.8205 9.69783 42.7121 9.74197 42.5981 9.76216C42.4841 9.78235 42.3671 9.77813 42.2548 9.74979C42.1426 9.72144 42.0376 9.66961 41.9469 9.59772C41.8561 9.52582 41.7817 9.4355 41.7284 9.33272C41.6751 9.22993 41.6443 9.11701 41.6379 9.00142C41.6314 8.88583 41.6496 8.77019 41.6912 8.66213C41.7327 8.55408 41.7967 8.45607 41.879 8.37457C42.3195 7.83436 42.6036 7.18381 42.7006 6.49353C42.7975 5.80325 42.7036 5.0996 42.4289 4.45894C42.1543 3.81828 41.7094 3.26508 41.1426 2.85937C40.5757 2.45365 39.9086 2.21093 39.2136 2.15753C38.5199 2.09775 37.8229 2.22769 37.1973 2.53345C36.5717 2.8392 36.041 3.30927 35.6619 3.89338C35.6074 3.99111 35.5333 4.07661 35.4444 4.14461C35.3555 4.2126 35.2536 4.26164 35.145 4.2887C35.0364 4.31575 34.9233 4.32024 34.8129 4.3019C34.7025 4.28355 34.597 4.24276 34.503 4.18204C34.409 4.12132 34.3284 4.04196 34.2662 3.94887C34.2041 3.85578 34.1617 3.75093 34.1416 3.6408C34.1216 3.53068 34.1244 3.41761 34.1498 3.3086C34.1751 3.19958 34.2226 3.09693 34.2892 3.00699C34.8288 2.17394 35.5846 1.50312 36.4757 1.06621C37.3669 0.629289 38.3601 0.442683 39.3491 0.526326V0.520171Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M19.6328 18.3394C19.4364 18.3489 19.2499 18.4287 19.1075 18.5643C18.9651 18.7 18.8762 18.8823 18.8572 19.0781C18.8572 19.0781 18.7649 20.1245 18.771 21.3987C18.771 22.6667 18.8388 24.1502 19.325 25.2951C19.7867 26.3785 20.7531 27.388 21.6087 28.2251C22.4705 29.0623 23.2276 29.684 23.2276 29.684C23.3103 29.7566 23.4067 29.8119 23.5112 29.8464C23.6157 29.8809 23.7261 29.894 23.8358 29.8849C23.9455 29.8758 24.0522 29.8447 24.1495 29.7934C24.2469 29.7421 24.3329 29.6717 24.4025 29.5865C24.472 29.5012 24.5237 29.4027 24.5543 29.297C24.585 29.1913 24.594 29.0806 24.5809 28.9713C24.5677 28.862 24.5327 28.7565 24.4779 28.6611C24.423 28.5657 24.3495 28.4823 24.2617 28.416C24.2617 28.416 23.5477 27.8374 22.7475 27.0618C21.9473 26.28 21.0794 25.252 20.827 24.655C20.55 24.0086 20.4146 22.5867 20.4023 21.3987C21.0099 22.0868 21.7895 22.6009 22.6613 22.8883C23.3138 23.1099 24.1879 23.6147 24.5818 25.1659C24.6044 25.2736 24.6484 25.3757 24.7113 25.466C24.7742 25.5563 24.8546 25.633 24.9478 25.6915C25.041 25.75 25.1451 25.7892 25.2537 25.8065C25.3624 25.8239 25.4734 25.8193 25.5803 25.7928C25.6871 25.7663 25.7874 25.7185 25.8754 25.6523C25.9633 25.5862 26.037 25.503 26.092 25.4077C26.1471 25.3124 26.1824 25.207 26.1957 25.0977C26.2091 24.9885 26.2004 24.8777 26.1699 24.7719C26.0024 23.9974 25.6421 23.2776 25.1224 22.6794C24.6026 22.0811 23.9404 21.6237 23.1968 21.3495C22.5306 21.1586 21.9368 20.7727 21.4918 20.2415C21.1224 19.8044 20.8147 19.232 20.2853 18.6164C20.2042 18.5243 20.1035 18.4516 19.9906 18.4037C19.8777 18.3557 19.7554 18.3338 19.6328 18.3394ZM34.3567 2.13821C34.2492 2.1374 34.1426 2.15777 34.043 2.19816C33.9433 2.23856 33.8526 2.29818 33.776 2.37363C33.6994 2.44908 33.6385 2.53888 33.5966 2.6379C33.5547 2.73692 33.5327 2.84322 33.5319 2.95073V4.39727L32.7994 5.85612C32.7422 5.97079 32.7126 6.09729 32.7132 6.22545V7.60428L31.2236 9.84487C31.1194 10.0015 31.0724 10.1891 31.0903 10.3763C31.1082 10.5635 31.1901 10.7389 31.3221 10.8728L31.9007 11.4515V13.1011L31.6175 13.2058C31.5141 13.245 31.4198 13.3047 31.3401 13.3814C31.2604 13.458 31.1971 13.5501 31.1539 13.6519C31.1108 13.7537 31.0887 13.8632 31.089 13.9738C31.0894 14.0844 31.1121 14.1937 31.1559 14.2953L34.0059 20.8201L35.5017 20.1676L32.9964 14.4307L39.9336 11.8762C40.0888 11.8176 40.2225 11.7132 40.317 11.5769C40.4116 11.4406 40.4625 11.2788 40.463 11.1129V8.23214L41.6879 9.0939V15.1878H43.3191V8.66302C43.318 8.53224 43.2855 8.40364 43.2245 8.28797C43.1635 8.17231 43.0756 8.07296 42.9683 7.99823L34.8122 2.27978C34.6778 2.18842 34.5193 2.13914 34.3567 2.13821ZM35.1569 4.52038L38.8318 7.08722V10.5404L33.5319 12.4917V11.1067C33.5301 10.8918 33.4439 10.6862 33.2918 10.5343L32.9533 10.1834L34.209 8.29369C34.2982 8.15858 34.3453 8.00007 34.3444 7.83818V6.3978L35.0769 4.95126C35.1342 4.8366 35.1637 4.71009 35.1631 4.58193L35.1569 4.52038Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M11.7846 2.95071C11.5686 2.95556 11.3632 3.04564 11.2133 3.20131C11.0634 3.35698 10.9811 3.56561 10.9844 3.7817V6.47164C10.9702 6.58674 10.9807 6.70354 11.015 6.81431C11.0493 6.92508 11.1068 7.02728 11.1837 7.11416C11.2605 7.20103 11.3549 7.2706 11.4606 7.31824C11.5663 7.36589 11.681 7.39053 11.797 7.39053C11.9129 7.39053 12.0276 7.36589 12.1333 7.31824C12.239 7.2706 12.3334 7.20103 12.4103 7.11416C12.4871 7.02728 12.5446 6.92508 12.5789 6.81431C12.6132 6.70354 12.6237 6.58674 12.6095 6.47164V3.7817C12.6111 3.67264 12.591 3.56434 12.5502 3.46319C12.5094 3.36203 12.4488 3.27004 12.3719 3.19263C12.2951 3.11521 12.2036 3.05393 12.1027 3.01239C12.0018 2.97085 11.8937 2.94987 11.7846 2.95071Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M9.24865 4.8273C9.05145 4.82347 8.8595 4.89096 8.70809 5.01736C8.55668 5.14375 8.45599 5.32056 8.42454 5.51527C8.39309 5.70998 8.43299 5.9095 8.5369 6.07714C8.64081 6.24478 8.80175 6.36928 8.99012 6.42773L11.5446 7.25256C11.6491 7.29686 11.7616 7.31897 11.8751 7.31746C11.9886 7.31596 12.1005 7.29089 12.2037 7.24384C12.307 7.19679 12.3993 7.12878 12.4749 7.04414C12.5505 6.95951 12.6077 6.86008 12.6428 6.75218C12.6779 6.64427 12.6902 6.53025 12.6789 6.41734C12.6676 6.30444 12.6329 6.19511 12.5771 6.0963C12.5213 5.9975 12.4456 5.91137 12.3548 5.84338C12.2639 5.7754 12.1599 5.72704 12.0494 5.70138L9.49487 4.87039C9.41548 4.84351 9.33244 4.82898 9.24865 4.8273Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M11.8154 5.65289C11.6831 5.65135 11.5523 5.6819 11.4344 5.74193C11.3165 5.80197 11.2149 5.88969 11.1383 5.99759L9.55631 8.17664C9.47829 8.26173 9.41915 8.36237 9.38277 8.47194C9.34639 8.58151 9.3336 8.69754 9.34523 8.81241C9.35687 8.92727 9.39266 9.03838 9.45028 9.13843C9.50789 9.23848 9.58601 9.32521 9.67951 9.39294C9.77301 9.46066 9.87978 9.50784 9.99281 9.53138C10.1058 9.55493 10.2226 9.55429 10.3353 9.52953C10.4481 9.50477 10.5543 9.45644 10.6471 9.38771C10.7399 9.31898 10.8171 9.2314 10.8736 9.13074L12.4555 6.95785C12.5447 6.83722 12.5989 6.69442 12.6124 6.54504C12.6259 6.39567 12.5981 6.24545 12.5321 6.1108C12.466 5.97614 12.3643 5.86222 12.2379 5.78147C12.1115 5.70072 11.9653 5.65624 11.8154 5.65289Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M11.754 5.65353C11.6061 5.66117 11.4631 5.70875 11.3402 5.79122C11.2172 5.87369 11.1189 5.98796 11.0558 6.12185C10.9926 6.25575 10.967 6.40426 10.9815 6.55159C10.9961 6.69891 11.0503 6.83954 11.1384 6.95849L12.7142 9.13137C12.7725 9.22859 12.8503 9.31265 12.9428 9.37823C13.0352 9.44381 13.1403 9.48948 13.2513 9.51234C13.3623 9.5352 13.4769 9.53476 13.5877 9.51105C13.6985 9.48733 13.8032 9.44086 13.8952 9.37458C13.9871 9.30829 14.0643 9.22364 14.1218 9.12597C14.1794 9.02831 14.216 8.91977 14.2294 8.80721C14.2428 8.69466 14.2326 8.58055 14.1996 8.47212C14.1666 8.36368 14.1115 8.26328 14.0377 8.17727L12.4557 5.99823C12.3768 5.88681 12.2712 5.79691 12.1486 5.7367C12.0261 5.6765 11.8904 5.6479 11.754 5.65353Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M14.3146 4.82111C14.2435 4.82428 14.1731 4.83669 14.1053 4.85805L11.5446 5.68904C11.4341 5.71469 11.3301 5.76305 11.2392 5.83104C11.1484 5.89902 11.0727 5.98515 11.0169 6.08396C10.9611 6.18276 10.9264 6.29209 10.9151 6.405C10.9038 6.5179 10.9161 6.63193 10.9512 6.73983C10.9863 6.84773 11.0435 6.94716 11.1191 7.0318C11.1947 7.11644 11.287 7.18444 11.3903 7.23149C11.4935 7.27854 11.6054 7.30361 11.7189 7.30512C11.8324 7.30662 11.9449 7.28452 12.0494 7.24022L14.6039 6.40923C14.7904 6.34661 14.9481 6.21894 15.0481 6.04959C15.1482 5.88023 15.1839 5.68051 15.1488 5.48696C15.1137 5.29341 15.01 5.11898 14.8569 4.99558C14.7037 4.87218 14.5112 4.80806 14.3146 4.81496V4.82111ZM31.0821 33.5364V38.2762L18.1987 43.1759C17.3189 43.4811 16.5296 44.0017 15.9027 44.6902C15.2868 45.3973 14.8939 46.2708 14.7734 47.2007C14.6529 48.1307 14.8102 49.0755 15.2256 49.9162C15.6583 50.7623 16.3185 51.4709 17.1319 51.9624C17.9453 52.4539 18.8796 52.7088 19.8299 52.6985H43.3192C43.4663 52.6972 43.6103 52.6563 43.7361 52.5801C43.8619 52.5039 43.9649 52.3952 44.0342 52.2654C44.1035 52.1357 44.1365 51.9897 44.1298 51.8427C44.1232 51.6958 44.0771 51.5534 43.9963 51.4304L40.7339 46.543L39.3797 47.4478L41.7927 51.0673H19.8299C19.1842 51.0754 18.5488 50.9042 17.9946 50.5728C17.4404 50.2413 16.9889 49.7626 16.6906 49.1898C16.413 48.6385 16.3068 48.0167 16.3858 47.4045C16.4648 46.7923 16.7253 46.2178 17.1338 45.7551C17.586 45.2735 18.1508 44.9118 18.7773 44.7025L32.1901 39.5996C32.3441 39.54 32.4765 39.4352 32.5699 39.299C32.6633 39.1628 32.7133 39.0015 32.7133 38.8363V33.5364H31.0821ZM6.61406 26.6054C6.61245 26.8204 6.52633 27.0261 6.3743 27.1781C6.22227 27.3302 6.01653 27.4163 5.80154 27.4179C5.58654 27.4163 5.38081 27.3302 5.22878 27.1781C5.07675 27.0261 4.99062 26.8204 4.98901 26.6054C4.98901 26.3893 5.07442 26.182 5.22662 26.0286C5.37882 25.8753 5.58548 25.7883 5.80154 25.7867C6.01866 25.7867 6.2269 25.8729 6.38043 26.0265C6.53396 26.18 6.61406 26.3882 6.61406 26.6054ZM7.43274 42.0987C7.43113 42.3137 7.34501 42.5195 7.19298 42.6715C7.04095 42.8235 6.83521 42.9096 6.62022 42.9112C6.40415 42.9113 6.19685 42.8258 6.04349 42.6736C5.89013 42.5214 5.80316 42.3148 5.80154 42.0987C5.80154 41.8816 5.88779 41.6734 6.04132 41.5198C6.19486 41.3663 6.40309 41.28 6.62022 41.28C6.83628 41.2817 7.04293 41.3686 7.19514 41.522C7.34734 41.6753 7.43275 41.8827 7.43274 42.0987Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M10.6829 32.3126C10.4679 32.3174 10.2635 32.4067 10.1138 32.561C9.96404 32.7153 9.88105 32.9224 9.88272 33.1374V36.3814C9.87289 36.4944 9.88667 36.6083 9.92319 36.7158C9.95971 36.8232 10.0182 36.9219 10.0949 37.0055C10.1716 37.0892 10.2648 37.156 10.3687 37.2017C10.4726 37.2474 10.5848 37.271 10.6983 37.271C10.8118 37.271 10.9241 37.2474 11.0279 37.2017C11.1318 37.156 11.2251 37.0892 11.3018 37.0055C11.3785 36.9219 11.4369 36.8232 11.4734 36.7158C11.51 36.6083 11.5238 36.4944 11.5139 36.3814V33.1374C11.5148 33.0284 11.4938 32.9202 11.4522 32.8194C11.4107 32.7185 11.3494 32.627 11.272 32.5501C11.1946 32.4733 11.1026 32.4127 11.0014 32.3719C10.9003 32.3311 10.792 32.3109 10.6829 32.3126Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M9.07637 33.9435C8.96331 33.9337 8.84944 33.9475 8.74198 33.984C8.63453 34.0205 8.53585 34.079 8.4522 34.1557C8.36854 34.2324 8.30175 34.3256 8.25606 34.4295C8.21036 34.5334 8.18677 34.6456 8.18677 34.7591C8.18677 34.8726 8.21036 34.9848 8.25606 35.0887C8.30175 35.1926 8.36854 35.2859 8.4522 35.3626C8.53585 35.4393 8.63453 35.4977 8.74198 35.5342C8.84944 35.5708 8.96331 35.5845 9.07637 35.5747H12.3142C12.4272 35.5845 12.5411 35.5708 12.6485 35.5342C12.756 35.4977 12.8547 35.4393 12.9383 35.3626C13.022 35.2859 13.0888 35.1926 13.1345 35.0887C13.1802 34.9848 13.2038 34.8726 13.2038 34.7591C13.2038 34.6456 13.1802 34.5334 13.1345 34.4295C13.0888 34.3256 13.022 34.2324 12.9383 34.1557C12.8547 34.079 12.756 34.0205 12.6485 33.984C12.5411 33.9475 12.4272 33.9337 12.3142 33.9435H9.07637Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M13.9576 29.0501C13.956 29.2651 13.8699 29.4709 13.7179 29.6229C13.5658 29.7749 13.3601 29.861 13.1451 29.8627C12.929 29.8627 12.7217 29.7772 12.5684 29.625C12.415 29.4728 12.328 29.2662 12.3264 29.0501C12.3264 28.833 12.4127 28.6248 12.5662 28.4712C12.7197 28.3177 12.928 28.2314 13.1451 28.2314C13.3612 28.2331 13.5678 28.32 13.72 28.4734C13.8722 28.6268 13.9576 28.8341 13.9576 29.0501Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M25.3638 7.84433C25.1489 7.84918 24.9444 7.93841 24.7947 8.09275C24.645 8.24708 24.562 8.45414 24.5636 8.66917V11.9131C24.5538 12.0262 24.5676 12.14 24.6041 12.2475C24.6406 12.3549 24.6991 12.4536 24.7758 12.5373C24.8525 12.6209 24.9457 12.6877 25.0496 12.7334C25.1535 12.7791 25.2657 12.8027 25.3792 12.8027C25.4927 12.8027 25.605 12.7791 25.7088 12.7334C25.8127 12.6877 25.906 12.6209 25.9827 12.5373C26.0594 12.4536 26.1178 12.3549 26.1544 12.2475C26.1909 12.14 26.2047 12.0262 26.1948 11.9131V8.66917C26.1957 8.5601 26.1747 8.45196 26.1331 8.3511C26.0916 8.25025 26.0303 8.15872 25.9529 8.08188C25.8755 8.00504 25.7835 7.94444 25.6824 7.90365C25.5812 7.86286 25.4729 7.84269 25.3638 7.84433Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M23.757 9.47525C23.644 9.46541 23.5301 9.4792 23.4226 9.51572C23.3152 9.55224 23.2165 9.61071 23.1329 9.6874C23.0492 9.76409 22.9824 9.85734 22.9367 9.96123C22.891 10.0651 22.8674 10.1774 22.8674 10.2908C22.8674 10.4043 22.891 10.5166 22.9367 10.6205C22.9824 10.7244 23.0492 10.8176 23.1329 10.8943C23.2165 10.971 23.3152 11.0295 23.4226 11.066C23.5301 11.1025 23.644 11.1163 23.757 11.1064H26.9948C27.1079 11.1163 27.2218 11.1025 27.3292 11.066C27.4367 11.0295 27.5353 10.971 27.619 10.8943C27.7026 10.8176 27.7694 10.7244 27.8151 10.6205C27.8608 10.5166 27.8844 10.4043 27.8844 10.2908C27.8844 10.1774 27.8608 10.0651 27.8151 9.96123C27.7694 9.85734 27.7026 9.76409 27.619 9.6874C27.5353 9.61071 27.4367 9.55224 27.3292 9.51572C27.2218 9.4792 27.1079 9.46541 26.9948 9.47525H23.757Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                    <path\n                      d=\"M25.3759 2.95003C25.3743 3.16502 25.2882 3.37076 25.1362 3.52279C24.9841 3.67482 24.7784 3.76094 24.5634 3.76255C24.3473 3.76256 24.14 3.67715 23.9867 3.52495C23.8333 3.37274 23.7464 3.16609 23.7447 2.95003C23.7447 2.7329 23.831 2.52467 23.9845 2.37113C24.138 2.2176 24.3463 2.13135 24.5634 2.13135C24.7795 2.13297 24.9861 2.21994 25.1383 2.3733C25.2905 2.52665 25.3759 2.73396 25.3759 2.95003ZM23.7447 14.3685C23.7431 14.5834 23.657 14.7892 23.505 14.9412C23.3529 15.0932 23.1472 15.1794 22.9322 15.181C22.7161 15.181 22.5088 15.0956 22.3555 14.9434C22.2021 14.7912 22.1151 14.5845 22.1135 14.3685C22.1135 14.1513 22.1998 13.9431 22.3533 13.7896C22.5068 13.636 22.7151 13.5498 22.9322 13.5498C23.1483 13.5514 23.3549 13.6384 23.5071 13.7917C23.6593 13.9451 23.7447 14.1524 23.7447 14.3685Z\"\n                      fill=\"#1A1A1A\"\n                    />\n                  </svg>\n                </span>\n                <v-card-text\n                  class=\"text\"\n                  style=\"\n                    font-size: 40px;\n                    letter-spacing: normal;\n                    font-weight: 700;\n                  \"\n                >\n                  +180 الف\n                  <span style=\"font-size: 18px; font-weight: 400\"\n                    >حاج سنويا</span\n                  ></v-card-text\n                >\n              </v-card>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-card elevation=\"0\" style=\"width: fit-content\">\n                <span\n                  ><svg\n                    width=\"56\"\n                    height=\"56\"\n                    viewBox=\"0 0 56 56\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <g clip-path=\"url(#clip0_32_16561)\">\n                      <path\n                        d=\"M46.8199 24.4319C46.8199 27.2808 46.2587 30.1017 45.1685 32.7337C44.0783 35.3657 42.4804 37.7572 40.4659 39.7716C38.4515 41.7861 36.06 43.384 33.428 44.4742C30.796 45.5644 27.9751 46.1255 25.1262 46.1255C22.2774 46.1247 19.4566 45.5627 16.8249 44.4717C14.1933 43.3807 11.8023 41.782 9.78845 39.767C7.77463 37.7519 6.17741 35.3599 5.08801 32.7276C3.9986 30.0953 3.43834 27.2742 3.43921 24.4253C3.44096 18.6729 5.72731 13.1568 9.79547 9.08986C13.8636 5.02295 19.3805 2.73828 25.1328 2.73828C30.8852 2.74004 36.4014 5.02638 40.4683 9.09454C44.5352 13.1627 46.8199 18.6796 46.8199 24.4319Z\"\n                        fill=\"#E7AC6D\"\n                      />\n                      <path\n                        d=\"M9.31897 6.93848V8.69116H36.4823C37.4744 8.69116 38.235 9.45838 38.235 10.4439V29.7234C38.235 30.7089 37.4678 31.4761 36.4823 31.4761H9.31897V33.2288H36.4823C38.407 33.2288 39.9877 31.6481 39.9877 29.7234V10.4439C39.9842 9.51524 39.6138 8.62566 38.9571 7.96903C38.3005 7.31239 37.4109 6.94196 36.4823 6.93848H9.31897Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M39.1147 13.949V15.7017H47.8781V38.4866H34.723C34.4921 38.4893 34.263 38.4458 34.0492 38.3586C33.8353 38.2715 33.641 38.1425 33.4778 37.9792C33.3145 37.8159 33.1855 37.6216 33.0983 37.4078C33.0112 37.1939 32.9677 36.9648 32.9703 36.7339V32.3423H31.2177V36.7273C31.2177 38.652 32.7984 40.2327 34.723 40.2327H48.7445C48.9778 40.2327 49.2016 40.14 49.3665 39.975C49.5315 39.8101 49.6242 39.5863 49.6242 39.353V14.8154C49.6224 14.5833 49.529 14.3612 49.3642 14.1977C49.1994 14.0341 48.9767 13.9424 48.7445 13.9424L39.1147 13.949Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M35.6357 34.1413C35.5082 34.1477 35.3835 34.1818 35.2705 34.2411C35.1574 34.3005 35.0586 34.3838 34.981 34.4853L34.3064 35.3517C34.2307 35.4424 34.1741 35.5474 34.1399 35.6605C34.1057 35.7735 34.0946 35.8923 34.1074 36.0097C34.1201 36.1272 34.1563 36.2408 34.2139 36.344C34.2715 36.4471 34.3492 36.5376 34.4425 36.61C34.5358 36.6824 34.6428 36.7353 34.757 36.7655C34.8711 36.7957 34.9902 36.8026 35.1072 36.7858C35.2241 36.769 35.3364 36.7288 35.4374 36.6676C35.5385 36.6064 35.6262 36.5255 35.6953 36.4298L36.3633 35.57C36.4691 35.4379 36.5345 35.2781 36.5518 35.1097C36.569 34.9414 36.5374 34.7717 36.4606 34.6209C36.3838 34.4701 36.2651 34.3446 36.1188 34.2596C35.9725 34.1745 35.8048 34.1335 35.6357 34.1413ZM9.29915 4.3126C9.06816 4.31781 8.84849 4.41368 8.68761 4.57952C8.52672 4.74535 8.43755 4.96782 8.43934 5.19887V56.0003C8.42878 56.1218 8.44359 56.2442 8.48283 56.3596C8.52207 56.4751 8.58489 56.5811 8.6673 56.671C8.7497 56.7609 8.8499 56.8326 8.96152 56.8817C9.07314 56.9308 9.19374 56.9562 9.31569 56.9562C9.43763 56.9562 9.55824 56.9308 9.66986 56.8817C9.78148 56.8326 9.88167 56.7609 9.96407 56.671C10.0465 56.5811 10.1093 56.4751 10.1485 56.3596C10.1878 56.2442 10.2026 56.1218 10.192 56.0003V5.20548C10.1938 5.08773 10.1719 4.97083 10.1277 4.86169C10.0835 4.75255 10.0178 4.65341 9.93449 4.57014C9.85122 4.48687 9.75208 4.42117 9.64294 4.37693C9.53381 4.33269 9.4169 4.31082 9.29915 4.3126ZM27.58 13.9557C27.4645 13.9566 27.3503 13.9802 27.2439 14.0252C27.1375 14.0702 27.041 14.1357 26.9599 14.218C26.8789 14.3003 26.8148 14.3978 26.7714 14.5048C26.728 14.6119 26.7061 14.7264 26.707 14.8419V17.7256C26.6964 17.8471 26.7112 17.9694 26.7505 18.0849C26.7897 18.2004 26.8525 18.3064 26.9349 18.3963C27.0173 18.4862 27.1175 18.5579 27.2291 18.607C27.3408 18.6561 27.4614 18.6815 27.5833 18.6815C27.7052 18.6815 27.8259 18.6561 27.9375 18.607C28.0491 18.5579 28.1493 18.4862 28.2317 18.3963C28.3141 18.3064 28.3769 18.2004 28.4162 18.0849C28.4554 17.9694 28.4702 17.8471 28.4597 17.7256V14.8419C28.4614 14.7248 28.4398 14.6084 28.3959 14.4997C28.3521 14.391 28.287 14.2922 28.2044 14.209C28.1219 14.1258 28.0235 14.06 27.9151 14.0153C27.8068 13.9707 27.6906 13.9482 27.5734 13.9491L27.58 13.9557Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M24.8484 15.9665C24.6365 15.9624 24.4303 16.0349 24.2676 16.1707C24.1049 16.3065 23.9967 16.4965 23.9629 16.7057C23.9291 16.9149 23.972 17.1293 24.0836 17.3094C24.1953 17.4895 24.3682 17.6233 24.5706 17.6861L27.3154 18.5724C27.4276 18.62 27.5486 18.6437 27.6705 18.6421C27.7924 18.6405 27.9126 18.6135 28.0236 18.563C28.1345 18.5124 28.2337 18.4394 28.315 18.3484C28.3962 18.2575 28.4576 18.1506 28.4953 18.0347C28.533 17.9188 28.5462 17.7962 28.5341 17.6749C28.522 17.5536 28.4847 17.4361 28.4248 17.33C28.3648 17.2238 28.2835 17.1313 28.1859 17.0582C28.0882 16.9852 27.9765 16.9332 27.8577 16.9057L25.113 16.0128C25.0277 15.9839 24.9384 15.9683 24.8484 15.9665Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M27.6064 16.8526C27.4643 16.8509 27.3238 16.8838 27.1971 16.9483C27.0704 17.0128 26.9612 17.107 26.8789 17.223L25.1791 19.5577C25.098 19.6495 25.0369 19.7571 24.9998 19.8739C24.9627 19.9906 24.9504 20.1138 24.9637 20.2356C24.9769 20.3573 25.0155 20.475 25.0768 20.581C25.1382 20.687 25.221 20.779 25.32 20.8512C25.4189 20.9233 25.5319 20.974 25.6516 21C25.7713 21.0259 25.8951 21.0266 26.0151 21.002C26.1351 20.9774 26.2486 20.9279 26.3483 20.8569C26.4481 20.7859 26.532 20.6948 26.5945 20.5895L28.2943 18.2547C28.39 18.1251 28.4484 17.9717 28.4629 17.8112C28.4774 17.6507 28.4475 17.4893 28.3765 17.3446C28.3055 17.1999 28.1962 17.0775 28.0604 16.9908C27.9246 16.904 27.7675 16.8562 27.6064 16.8526Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M27.5403 16.8528C27.3814 16.861 27.2278 16.9121 27.0957 17.0007C26.9636 17.0894 26.858 17.2121 26.7901 17.356C26.7223 17.4999 26.6947 17.6594 26.7103 17.8177C26.726 17.976 26.7842 18.1271 26.8789 18.2549L28.5787 20.5897C28.6412 20.695 28.7251 20.7861 28.8248 20.8571C28.9246 20.9281 29.0381 20.9776 29.1581 21.0022C29.2781 21.0268 29.4019 21.0261 29.5216 21.0002C29.6413 20.9742 29.7542 20.9235 29.8532 20.8514C29.9522 20.7792 30.035 20.6872 30.0964 20.5812C30.1577 20.4752 30.1963 20.3575 30.2095 20.2358C30.2228 20.114 30.2105 19.9908 30.1734 19.8741C30.1363 19.7573 30.0752 19.6496 29.9941 19.5579L28.2943 17.2232C28.2095 17.1035 28.0961 17.0069 27.9644 16.9422C27.8327 16.8775 27.6869 16.8468 27.5403 16.8528Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M30.2918 15.953C30.2151 15.9585 30.1395 15.9741 30.0669 15.9992L27.3155 16.8921C27.1967 16.9197 27.085 16.9717 26.9874 17.0447C26.8898 17.1178 26.8084 17.2103 26.7485 17.3165C26.6885 17.4226 26.6513 17.5401 26.6391 17.6614C26.627 17.7827 26.6402 17.9052 26.6779 18.0212C26.7157 18.1371 26.7771 18.244 26.8583 18.3349C26.9395 18.4258 27.0387 18.4989 27.1497 18.5495C27.2606 18.6 27.3809 18.627 27.5028 18.6286C27.6247 18.6302 27.7456 18.6064 27.8578 18.5588L30.6026 17.666C30.8023 17.5987 30.9712 17.4621 31.0786 17.2809C31.186 17.0996 31.2249 16.8859 31.188 16.6785C31.1512 16.471 31.0411 16.2837 30.8779 16.1506C30.7146 16.0174 30.5024 15.9473 30.2918 15.953Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M22.7518 11.343C20.8029 11.7987 19.0648 12.8988 17.8189 14.4652C16.5729 16.0316 15.8921 17.9727 15.8866 19.9742C15.8866 24.8618 19.8682 28.8434 24.7559 28.8434C28.4729 28.8103 32.3619 26.5285 33.3936 21.9583C33.6251 20.953 32.2296 20.4371 31.76 21.3631C31.1232 22.6091 30.0846 23.6039 28.8123 24.1865C27.54 24.769 26.1083 24.9053 24.749 24.5733C23.3896 24.2413 22.1819 23.4604 21.3214 22.3569C20.4609 21.2535 19.9978 19.892 20.0071 18.4926C20.0071 16.1712 21.2968 14.0481 23.3537 12.97C23.4616 12.9147 23.5567 12.8373 23.6328 12.7428C23.7089 12.6484 23.7643 12.539 23.7955 12.4218C23.8267 12.3046 23.8329 12.1822 23.8137 12.0624C23.7946 11.9427 23.7505 11.8283 23.6844 11.7266C23.587 11.5748 23.4454 11.4565 23.2785 11.3879C23.1117 11.3193 22.9279 11.3036 22.7518 11.343ZM18.4859 16.6341C18.1717 17.9613 18.2022 19.3468 18.5744 20.6589C18.9467 21.971 19.6484 23.166 20.6128 24.1304C21.5772 25.0948 22.7723 25.7965 24.0844 26.1688C25.3964 26.5411 26.7819 26.5716 28.1091 26.2574C27.1832 26.7005 25.8405 27.0973 24.7559 27.0973C20.8206 27.0973 17.6393 23.9227 17.6393 19.9808C17.6393 18.9027 18.0493 17.5601 18.4859 16.6341Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_32_16561\">\n                        <rect width=\"56\" height=\"56\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </svg>\n                </span>\n                <v-card-text\n                  class=\"text\"\n                  style=\"font-size: 40px; font-weight: 700\"\n                >\n                  46\n                  <span style=\"font-size: 18px; font-weight: 400\"\n                    >دولة\n                  </span></v-card-text\n                >\n              </v-card>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-card elevation=\"0\" style=\"width: fit-content\">\n                <span\n                  ><svg\n                    width=\"56\"\n                    height=\"56\"\n                    viewBox=\"0 0 56 56\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <g clip-path=\"url(#clip0_523_92198)\">\n                      <path\n                        d=\"M46.8794 31.4824C46.8794 25.9043 44.6635 20.5547 40.7192 16.6104C36.7749 12.6661 31.4253 10.4502 25.8472 10.4502C20.2691 10.4502 14.9195 12.6661 10.9751 16.6104C7.03083 20.5547 4.81494 25.9043 4.81494 31.4824C4.81494 37.0605 7.03083 42.4102 10.9751 46.3545C14.9195 50.2988 20.2691 52.5147 25.8472 52.5147C31.4253 52.5147 36.7749 50.2988 40.7192 46.3545C44.6635 42.4102 46.8794 37.0605 46.8794 31.4824Z\"\n                        fill=\"#E7AC6D\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M43.9694 17.8576C43.7259 18.4193 43.6346 19.0352 43.7048 19.6434L44.4985 28.9822C44.4987 29.1032 44.5242 29.2228 44.5734 29.3335C44.6226 29.4442 44.6945 29.5435 44.7844 29.6251C44.8744 29.7068 44.9804 29.769 45.0959 29.8078C45.2113 29.8466 45.3336 29.8612 45.4551 29.8506C45.5765 29.84 45.6944 29.8045 45.8012 29.7463C45.9081 29.6882 46.0016 29.6086 46.0758 29.5126C46.1501 29.4167 46.2034 29.3064 46.2324 29.189C46.2615 29.0715 46.2656 28.9493 46.2446 28.8301L45.4509 19.4714V19.4516C45.425 19.1456 45.4703 18.8377 45.5832 18.5521C45.7353 18.2082 45.9602 17.8907 46.7472 17.6923C47.5409 17.4806 48.6256 18.142 48.7711 19.0349L50.9801 32.3024C51.5423 35.6557 50.7354 39.0155 49.2936 42.2167L43.6453 54.7831C43.5881 54.8887 43.5535 55.0048 43.5435 55.1242C43.5336 55.2436 43.5485 55.3638 43.5873 55.4772C43.6262 55.5907 43.6881 55.695 43.7693 55.7836C43.8506 55.8723 43.9493 55.9434 44.0594 55.9925C44.1695 56.0417 44.2887 56.0678 44.4094 56.0693C44.5301 56.0707 44.6499 56.0475 44.7611 56.0011C44.8724 55.9546 44.9729 55.8859 45.0563 55.7993C45.1397 55.7126 45.2042 55.6099 45.2459 55.4974L50.8941 42.931C52.422 39.538 53.3413 35.8276 52.7063 32.018L50.4973 18.7571C50.4188 18.2932 50.2457 17.8505 49.9889 17.4563C49.7321 17.0621 49.397 16.7249 49.0044 16.4656C48.6118 16.2064 48.1701 16.0306 47.7067 15.9492C47.2433 15.8678 46.7681 15.8826 46.3107 15.9925C45.805 16.1046 45.3316 16.3309 44.927 16.6542C44.5223 16.9775 44.197 17.3892 43.976 17.8576H43.9694Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M32.7389 45.8609L31.8857 51.8796C31.8638 51.9953 31.8656 52.1141 31.8912 52.229C31.9167 52.344 31.9654 52.4526 32.0343 52.5484C32.1032 52.6441 32.1909 52.7251 32.2922 52.7864C32.3934 52.8476 32.5061 52.888 32.6234 52.9049C32.7408 52.9219 32.8604 52.9151 32.975 52.885C33.0896 52.8549 33.197 52.8022 33.2905 52.7299C33.3841 52.6576 33.462 52.5672 33.5195 52.4643C33.577 52.3614 33.6129 52.248 33.6251 52.1309L34.4783 46.099C34.7032 44.5051 35.4241 43.0236 36.5485 41.8727L40.7814 37.534C40.8884 37.4275 40.9658 37.2954 41.0063 37.1504L42.6399 31.0656C42.691 30.8597 42.7821 30.6658 42.9082 30.4951C43.0343 30.3245 43.1928 30.1803 43.3746 30.071C43.5564 29.9616 43.7581 29.8892 43.9679 29.8579C44.1778 29.8265 44.3918 29.8369 44.5976 29.8883L45.2458 30.0471C46.0791 30.2587 46.5752 31.1119 46.3437 31.9849L43.8569 41.2576C43.8153 41.3714 43.798 41.4925 43.8061 41.6132C43.8142 41.7339 43.8475 41.8517 43.9039 41.9589C43.9603 42.0662 44.0385 42.1607 44.1336 42.2364C44.2287 42.3121 44.3386 42.3673 44.4564 42.3986C44.5742 42.4298 44.6972 42.4365 44.8177 42.4181C44.9382 42.3997 45.0535 42.3566 45.1563 42.2916C45.2592 42.2266 45.3472 42.1411 45.415 42.0406C45.4828 41.94 45.5288 41.8265 45.55 41.7074L48.0368 32.4413C48.1517 32.0179 48.1817 31.5759 48.125 31.1408C48.0684 30.7058 47.9262 30.2862 47.7068 29.9063C47.4873 29.5264 47.1949 29.1936 46.8463 28.9272C46.4977 28.6608 46.0999 28.466 45.6757 28.3539L45.0275 28.1886C44.165 27.979 43.2547 28.1157 42.4918 28.5695C41.7289 29.0232 41.1742 29.7579 40.9467 30.6159L39.3726 36.4758L35.2918 40.6558C33.9095 42.0712 33.0167 43.9032 32.7389 45.8609ZM9.27271 17.8576C9.6034 18.6182 9.57033 19.2995 9.53726 19.6434L8.74359 28.9822C8.74341 29.1032 8.7179 29.2228 8.66868 29.3335C8.61946 29.4442 8.5476 29.5435 8.45765 29.6251C8.36771 29.7068 8.26166 29.769 8.14621 29.8078C8.03076 29.8466 7.90845 29.8612 7.78702 29.8506C7.6656 29.84 7.54771 29.8045 7.44085 29.7463C7.33398 29.6882 7.24047 29.6086 7.16623 29.5126C7.092 29.4167 7.03867 29.3064 7.00963 29.189C6.98059 29.0715 6.97646 28.9493 6.99752 28.8301L7.79119 19.4714C7.79111 19.4648 7.79111 19.4582 7.79119 19.4516C7.81707 19.1456 7.7718 18.8377 7.65891 18.5521C7.50679 18.2082 7.28192 17.8907 6.49486 17.6923C5.69458 17.4806 4.61651 18.142 4.47101 19.0349L2.26196 32.309C1.69978 35.6557 2.50668 39.0221 3.94189 42.2167L9.59679 54.7831C9.65393 54.8887 9.68857 55.0048 9.69854 55.1242C9.70852 55.2436 9.69362 55.3638 9.65477 55.4772C9.61592 55.5907 9.55395 55.695 9.47273 55.7836C9.39151 55.8723 9.29277 55.9434 9.18265 55.9925C9.07254 56.0417 8.95341 56.0678 8.83268 56.0693C8.71196 56.0707 8.59222 56.0475 8.48093 56.0011C8.36963 55.9546 8.26916 55.8859 8.18577 55.7993C8.10239 55.7126 8.03786 55.6099 7.99622 55.4974L2.34794 42.931C0.820127 39.538 -0.0992062 35.8276 0.535729 32.018L2.74478 18.7571C2.82331 18.2932 2.99636 17.8505 3.25318 17.4563C3.51 17.0621 3.84512 16.7249 4.23771 16.4656C4.63031 16.2064 5.07201 16.0306 5.53539 15.9492C5.99877 15.8678 6.47394 15.8826 6.93138 15.9925C7.43709 16.1046 7.91043 16.3309 8.31512 16.6542C8.71982 16.9775 9.05173 17.3892 9.27271 17.8576Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M20.5031 45.8611L21.3497 51.8798C21.3789 51.9979 21.383 52.1209 21.3615 52.2407C21.3401 52.3605 21.2936 52.4745 21.2252 52.5755C21.1567 52.6764 21.0677 52.762 20.964 52.8269C20.8602 52.8917 20.7439 52.9342 20.6226 52.9518C20.5013 52.9694 20.3776 52.9617 20.2595 52.929C20.1414 52.8964 20.0315 52.8396 19.9368 52.7623C19.8421 52.6851 19.7647 52.589 19.7096 52.4803C19.6545 52.3716 19.6229 52.2526 19.6168 52.1311L18.7637 46.0992C18.5408 44.5061 17.8156 43.0255 16.6935 41.8729L12.4606 37.5342C12.3536 37.4277 12.2761 37.2955 12.2357 37.1506L10.6021 31.0658C10.551 30.8598 10.4598 30.666 10.3338 30.4953C10.2077 30.3246 10.0492 30.1805 9.86738 30.0711C9.68554 29.9618 9.48392 29.8894 9.27406 29.858C9.0642 29.8267 8.85022 29.8371 8.64437 29.8885L7.9962 30.0472C7.79539 30.0999 7.60716 30.1923 7.44264 30.3189C7.27812 30.4455 7.14063 30.6039 7.03829 30.7845C6.93595 30.9651 6.87083 31.1644 6.84679 31.3706C6.82275 31.5768 6.84026 31.7858 6.89829 31.9851L9.38513 41.2578C9.42668 41.3716 9.44395 41.4927 9.43585 41.6134C9.42776 41.7341 9.39447 41.8518 9.33809 41.9591C9.28172 42.0664 9.20349 42.1609 9.10838 42.2366C9.01326 42.3122 8.90333 42.3675 8.78557 42.3987C8.66781 42.43 8.54478 42.4367 8.42429 42.4183C8.3038 42.3998 8.18848 42.3568 8.08565 42.2918C7.98282 42.2268 7.89473 42.1413 7.82696 42.0407C7.75918 41.9402 7.71321 41.8267 7.69196 41.7076L5.20513 32.4415C5.09028 32.018 5.06031 31.5761 5.11696 31.141C5.17361 30.7059 5.31576 30.2864 5.53522 29.9065C5.75468 29.5266 6.04711 29.1938 6.39569 28.9274C6.74427 28.661 7.14211 28.4661 7.5663 28.3541L8.21446 28.1887C9.07699 27.9791 9.98731 28.1159 10.7502 28.5697C11.5131 29.0234 12.0677 29.7581 12.2952 30.616L13.8694 36.476L17.9501 40.656C19.3324 42.0713 20.2253 43.9034 20.5031 45.8611Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M26.5945 6.94482C26.4104 6.95086 26.2328 7.01411 26.0869 7.12566C25.9409 7.2372 25.8339 7.39141 25.781 7.56653L23.3537 15.3974L15.2384 15.318C15.05 15.3144 14.8654 15.371 14.7119 15.4793C14.5583 15.5876 14.4438 15.742 14.3853 15.9198C14.3268 16.0976 14.3273 16.2893 14.3868 16.4667C14.4464 16.6441 14.5617 16.7979 14.7159 16.9054L21.3431 21.6674L18.7504 29.452C18.6915 29.6278 18.6904 29.8177 18.7475 29.9942C18.8045 30.1706 18.9166 30.3245 19.0676 30.4335C19.2186 30.5425 19.4007 30.601 19.5874 30.6005C19.7741 30.6001 19.9558 30.5406 20.1063 30.4308L26.621 25.5431L33.1357 30.4374C33.2863 30.5514 33.47 30.614 33.6594 30.616C33.8488 30.618 34.0338 30.5593 34.1869 30.4486C34.34 30.3379 34.4529 30.1811 34.509 30.0015C34.5651 29.8219 34.5613 29.6292 34.4981 29.452L31.9055 21.6674L38.5194 16.9054C38.6731 16.7982 38.7882 16.645 38.8478 16.4683C38.9075 16.2915 38.9085 16.1004 38.8509 15.923C38.7932 15.7456 38.6799 15.5912 38.5274 15.4823C38.3749 15.3734 38.1913 15.3159 38.0035 15.318L29.8882 15.3974L27.4609 7.56653C27.4045 7.38518 27.29 7.22703 27.1348 7.11603C26.9797 7.00504 26.7923 6.94726 26.6011 6.95144L26.5945 6.94482ZM26.621 10.7809L28.4067 16.535C28.4614 16.7154 28.5733 16.8734 28.7259 16.9855C28.8785 17.0975 29.0635 17.1576 29.2533 17.1567L35.2521 17.0906L30.3578 20.6158C30.2046 20.7254 30.091 20.8811 30.0338 21.0597C29.9766 21.2384 29.9789 21.4306 30.0404 21.6079L31.9518 27.3487L27.1501 23.7508C26.9976 23.6368 26.8119 23.5752 26.621 23.5752C26.4301 23.5752 26.2443 23.6368 26.0918 23.7508L21.2968 27.3487L23.2082 21.6079C23.2689 21.4299 23.2702 21.2373 23.2118 21.0585C23.1534 20.8798 23.0385 20.7245 22.8841 20.6158L17.9898 17.0972L23.9886 17.1567C24.1776 17.158 24.362 17.0989 24.5144 16.9881C24.6669 16.8774 24.7794 16.7208 24.8352 16.5416L26.621 10.7809Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_523_92198\">\n                        <rect width=\"56\" height=\"56\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </svg>\n                </span>\n                <v-card-text\n                  class=\"text\"\n                  style=\"font-size: 40px; font-weight: 700\"\n                >\n                  +50 الف\n                  <span style=\"font-size: 18px; font-weight: 400\"\n                    >زائر للموقع</span\n                  ></v-card-text\n                >\n              </v-card>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-card elevation=\"0\" style=\"width: fit-content\">\n                <span\n                  ><svg\n                    width=\"56\"\n                    height=\"56\"\n                    viewBox=\"0 0 56 56\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <g clip-path=\"url(#clip0_31_16506)\">\n                      <path\n                        d=\"M41.7206 29.1211C41.7206 34.7606 39.4803 40.1692 35.4926 44.1569C31.5048 48.1446 26.0963 50.3849 20.4568 50.3849C14.8174 50.3849 9.40884 48.1446 5.42112 44.1569C1.43339 40.1692 -0.806885 34.7606 -0.806885 29.1211C-0.806885 23.4817 1.43339 18.0731 5.42112 14.0854C9.40884 10.0977 14.8174 7.85742 20.4568 7.85742C26.0963 7.85742 31.5048 10.0977 35.4926 14.0854C39.4803 18.0731 41.7206 23.4817 41.7206 29.1211Z\"\n                        fill=\"#E7AC6D\"\n                      />\n                      <path\n                        d=\"M26.7599 20.2124V21.9651H46.0329V50.0081H20.1725C19.8842 50.0099 19.5985 49.9542 19.332 49.8443C19.0656 49.7344 18.8237 49.5725 18.6205 49.3681C18.4173 49.1637 18.2568 48.9208 18.1486 48.6536C18.0403 48.3865 17.9863 48.1005 17.9899 47.8123V46.5027H16.2372V47.8123C16.2372 49.9882 18.0097 51.7608 20.1791 51.7608H46.9059C47.1392 51.7608 47.3629 51.6681 47.5279 51.5031C47.6929 51.3382 47.7855 51.1144 47.7855 50.8811V21.0854C47.7838 20.8533 47.6903 20.6312 47.5256 20.4677C47.3608 20.3042 47.1381 20.2124 46.9059 20.2124H26.7599Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M10.1061 11.4424C9.87392 11.4441 9.65187 11.5376 9.48833 11.7024C9.32479 11.8671 9.23303 12.0899 9.23303 12.322V43.8704C9.23303 44.1026 9.32479 44.3253 9.48833 44.4901C9.65187 44.6549 9.87392 44.7483 10.1061 44.75H21.0587C22.1054 44.7483 23.1087 44.3317 23.8488 43.5916C24.5889 42.8515 25.0055 41.8482 25.0072 40.8015V15.3909C25.0037 14.3454 24.5864 13.3438 23.8465 12.6051C23.1065 11.8664 22.1042 11.4507 21.0587 11.449L10.1061 11.4424ZM10.9857 13.2017H21.0587C22.2889 13.2017 23.2545 14.1607 23.2545 15.3909V40.8015C23.2581 41.0909 23.2037 41.378 23.0946 41.646C22.9855 41.914 22.8239 42.1575 22.6193 42.3621C22.4147 42.5667 22.1712 42.7284 21.9032 42.8374C21.6352 42.9465 21.3481 43.0009 21.0587 42.9974H10.9857V13.2017ZM20.9595 45.9869C20.7322 45.9939 20.5165 46.0887 20.3576 46.2514L19.4978 47.1112C19.4016 47.1886 19.3228 47.2855 19.2665 47.3954C19.2102 47.5053 19.1776 47.6258 19.171 47.7491C19.1643 47.8725 19.1837 47.9958 19.2279 48.1111C19.2721 48.2264 19.34 48.3312 19.4273 48.4185C19.5147 48.5058 19.6194 48.5738 19.7347 48.618C19.8501 48.6621 19.9734 48.6815 20.0967 48.6749C20.22 48.6682 20.3406 48.6357 20.4505 48.5794C20.5604 48.5231 20.6572 48.4442 20.7346 48.348L21.5944 47.4882C21.7182 47.3644 21.8021 47.2065 21.8356 47.0347C21.8691 46.8629 21.8506 46.685 21.7824 46.5238C21.7142 46.3626 21.5995 46.2254 21.4529 46.1297C21.3063 46.0341 21.1345 45.9843 20.9595 45.9869Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 49.1283C46.8042 49.1177 46.6819 49.1326 46.5664 49.1718C46.451 49.211 46.3449 49.2739 46.255 49.3563C46.1652 49.4387 46.0934 49.5389 46.0443 49.6505C45.9952 49.7621 45.9698 49.8827 45.9698 50.0047C45.9698 50.1266 45.9952 50.2472 46.0443 50.3588C46.0934 50.4704 46.1652 50.5706 46.255 50.653C46.3449 50.7354 46.451 50.7983 46.5664 50.8375C46.6819 50.8767 46.8042 50.8916 46.9257 50.881H49.5316C49.6531 50.8916 49.7754 50.8767 49.8909 50.8375C50.0063 50.7983 50.1124 50.7354 50.2022 50.653C50.2921 50.5706 50.3639 50.4704 50.413 50.3588C50.4621 50.2472 50.4874 50.1266 50.4874 50.0047C50.4874 49.8827 50.4621 49.7621 50.413 49.6505C50.3639 49.5389 50.2921 49.4387 50.2022 49.3563C50.1124 49.2739 50.0063 49.211 49.8909 49.1718C49.7754 49.1326 49.6531 49.1177 49.5316 49.1283H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 50.0081C53.0437 49.7759 52.9519 49.5532 52.7884 49.3884C52.6248 49.2236 52.4028 49.1302 52.1706 49.1284C51.9385 49.1302 51.7164 49.2236 51.5529 49.3884C51.3894 49.5532 51.2976 49.7759 51.2976 50.0081C51.2993 50.2391 51.3919 50.4601 51.5552 50.6235C51.7186 50.7868 51.9396 50.8794 52.1706 50.8811C52.4028 50.8811 52.6255 50.7893 52.7903 50.6258C52.9551 50.4623 53.0419 50.2402 53.0437 50.0081Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 45.6229C46.8042 45.6124 46.6819 45.6272 46.5664 45.6664C46.451 45.7057 46.3449 45.7685 46.255 45.8509C46.1652 45.9333 46.0934 46.0335 46.0443 46.1451C45.9952 46.2567 45.9698 46.3773 45.9698 46.4993C45.9698 46.6212 45.9952 46.7418 46.0443 46.8535C46.0934 46.9651 46.1652 47.0653 46.255 47.1477C46.3449 47.2301 46.451 47.2929 46.5664 47.3321C46.6819 47.3714 46.8042 47.3862 46.9257 47.3756H49.5316C49.6531 47.3862 49.7754 47.3714 49.8909 47.3321C50.0063 47.2929 50.1124 47.2301 50.2022 47.1477C50.2921 47.0653 50.3639 46.9651 50.413 46.8535C50.4621 46.7418 50.4874 46.6212 50.4874 46.4993C50.4874 46.3773 50.4621 46.2567 50.413 46.1451C50.3639 46.0335 50.2921 45.9333 50.2022 45.8509C50.1124 45.7685 50.0063 45.7057 49.8909 45.6664C49.7754 45.6272 49.6531 45.6124 49.5316 45.6229H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 46.5027C53.0437 46.2705 52.9519 46.0478 52.7884 45.883C52.6248 45.7182 52.4028 45.6248 52.1706 45.623C51.9385 45.6248 51.7164 45.7182 51.5529 45.883C51.3894 46.0478 51.2976 46.2705 51.2976 46.5027C51.2993 46.7337 51.3919 46.9548 51.5552 47.1181C51.7186 47.2815 51.9396 47.374 52.1706 47.3757C52.4028 47.3757 52.6255 47.284 52.7903 47.1204C52.9551 46.9569 53.0419 46.7348 53.0437 46.5027Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 42.1176C46.8042 42.107 46.6819 42.1218 46.5664 42.1611C46.451 42.2003 46.3449 42.2631 46.255 42.3455C46.1652 42.4279 46.0934 42.5281 46.0443 42.6397C45.9952 42.7514 45.9698 42.872 45.9698 42.9939C45.9698 43.1159 45.9952 43.2365 46.0443 43.3481C46.0934 43.4597 46.1652 43.5599 46.255 43.6423C46.3449 43.7247 46.451 43.7875 46.5664 43.8268C46.6819 43.866 46.8042 43.8808 46.9257 43.8703H49.5316C49.6531 43.8808 49.7754 43.866 49.8909 43.8268C50.0063 43.7875 50.1124 43.7247 50.2022 43.6423C50.2921 43.5599 50.3639 43.4597 50.413 43.3481C50.4621 43.2365 50.4874 43.1159 50.4874 42.9939C50.4874 42.872 50.4621 42.7514 50.413 42.6397C50.3639 42.5281 50.2921 42.4279 50.2022 42.3455C50.1124 42.2631 50.0063 42.2003 49.8909 42.1611C49.7754 42.1218 49.6531 42.107 49.5316 42.1176H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 42.9973C53.0437 42.7652 52.9519 42.5424 52.7884 42.3776C52.6248 42.2129 52.4028 42.1194 52.1706 42.1177C51.9385 42.1194 51.7164 42.2129 51.5529 42.3776C51.3894 42.5424 51.2976 42.7652 51.2976 42.9973C51.2993 43.2283 51.3919 43.4494 51.5552 43.6127C51.7186 43.7761 51.9396 43.8686 52.1706 43.8704C52.4028 43.8704 52.6255 43.7786 52.7903 43.6151C52.9551 43.4515 53.0419 43.2295 53.0437 42.9973Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 38.6122C46.8042 38.6016 46.6819 38.6164 46.5664 38.6557C46.451 38.6949 46.3449 38.7577 46.255 38.8402C46.1652 38.9226 46.0934 39.0227 46.0443 39.1344C45.9952 39.246 45.9698 39.3666 45.9698 39.4885C45.9698 39.6105 45.9952 39.7311 46.0443 39.8427C46.0934 39.9543 46.1652 40.0545 46.255 40.1369C46.3449 40.2193 46.451 40.2821 46.5664 40.3214C46.6819 40.3606 46.8042 40.3754 46.9257 40.3649H49.5316C49.6531 40.3754 49.7754 40.3606 49.8909 40.3214C50.0063 40.2821 50.1124 40.2193 50.2022 40.1369C50.2921 40.0545 50.3639 39.9543 50.413 39.8427C50.4621 39.7311 50.4874 39.6105 50.4874 39.4885C50.4874 39.3666 50.4621 39.246 50.413 39.1344C50.3639 39.0227 50.2921 38.9226 50.2022 38.8402C50.1124 38.7577 50.0063 38.6949 49.8909 38.6557C49.7754 38.6164 49.6531 38.6016 49.5316 38.6122H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 39.492C53.0437 39.2598 52.9519 39.0371 52.7884 38.8723C52.6248 38.7075 52.4028 38.6141 52.1706 38.6123C51.9385 38.6141 51.7164 38.7075 51.5529 38.8723C51.3894 39.0371 51.2976 39.2598 51.2976 39.492C51.2993 39.723 51.3919 39.944 51.5552 40.1074C51.7186 40.2707 51.9396 40.3633 52.1706 40.365C52.4028 40.365 52.6255 40.2732 52.7903 40.1097C52.9551 39.9462 53.0419 39.7241 53.0437 39.492Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 35.1068C46.8042 35.0963 46.6819 35.1111 46.5664 35.1503C46.451 35.1896 46.3449 35.2524 46.255 35.3348C46.1652 35.4172 46.0934 35.5174 46.0443 35.629C45.9952 35.7406 45.9698 35.8612 45.9698 35.9832C45.9698 36.1051 45.9952 36.2257 46.0443 36.3373C46.0934 36.449 46.1652 36.5491 46.255 36.6316C46.3449 36.714 46.451 36.7768 46.5664 36.816C46.6819 36.8553 46.8042 36.8701 46.9257 36.8595H49.5316C49.6531 36.8701 49.7754 36.8553 49.8909 36.816C50.0063 36.7768 50.1124 36.714 50.2022 36.6316C50.2921 36.5491 50.3639 36.449 50.413 36.3373C50.4621 36.2257 50.4874 36.1051 50.4874 35.9832C50.4874 35.8612 50.4621 35.7406 50.413 35.629C50.3639 35.5174 50.2921 35.4172 50.2022 35.3348C50.1124 35.2524 50.0063 35.1896 49.8909 35.1503C49.7754 35.1111 49.6531 35.0963 49.5316 35.1068H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 35.9866C53.0437 35.7544 52.9519 35.5317 52.7884 35.3669C52.6248 35.2021 52.4028 35.1087 52.1706 35.1069C51.9385 35.1087 51.7164 35.2021 51.5529 35.3669C51.3894 35.5317 51.2976 35.7544 51.2976 35.9866C51.2993 36.2176 51.3919 36.4386 51.5552 36.602C51.7186 36.7654 51.9396 36.8579 52.1706 36.8596C52.4028 36.8596 52.6255 36.7679 52.7903 36.6043C52.9551 36.4408 53.0419 36.2187 53.0437 35.9866Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 31.6015C46.8042 31.5909 46.6819 31.6057 46.5664 31.6449C46.451 31.6842 46.3449 31.747 46.255 31.8294C46.1652 31.9118 46.0934 32.012 46.0443 32.1236C45.9952 32.2352 45.9698 32.3559 45.9698 32.4778C45.9698 32.5997 45.9952 32.7203 46.0443 32.832C46.0934 32.9436 46.1652 33.0438 46.255 33.1262C46.3449 33.2086 46.451 33.2714 46.5664 33.3106C46.6819 33.3499 46.8042 33.3647 46.9257 33.3541H49.5316C49.6531 33.3647 49.7754 33.3499 49.8909 33.3106C50.0063 33.2714 50.1124 33.2086 50.2022 33.1262C50.2921 33.0438 50.3639 32.9436 50.413 32.832C50.4621 32.7203 50.4874 32.5997 50.4874 32.4778C50.4874 32.3559 50.4621 32.2352 50.413 32.1236C50.3639 32.012 50.2921 31.9118 50.2022 31.8294C50.1124 31.747 50.0063 31.6842 49.8909 31.6449C49.7754 31.6057 49.6531 31.5909 49.5316 31.6015H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 32.4812C53.0437 32.2491 52.9519 32.0263 52.7884 31.8615C52.6248 31.6968 52.4028 31.6033 52.1706 31.6016C51.9385 31.6033 51.7164 31.6968 51.5529 31.8615C51.3894 32.0263 51.2976 32.2491 51.2976 32.4812C51.2993 32.7122 51.3919 32.9333 51.5552 33.0966C51.7186 33.26 51.9396 33.3525 52.1706 33.3543C52.4028 33.3543 52.6255 33.2625 52.7903 33.0989C52.9551 32.9354 53.0419 32.7134 53.0437 32.4812Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 28.0961C46.8042 28.0855 46.6819 28.1003 46.5664 28.1396C46.451 28.1788 46.3449 28.2416 46.255 28.324C46.1652 28.4064 46.0934 28.5066 46.0443 28.6183C45.9952 28.7299 45.9698 28.8505 45.9698 28.9724C45.9698 29.0944 45.9952 29.215 46.0443 29.3266C46.0934 29.4382 46.1652 29.5384 46.255 29.6208C46.3449 29.7032 46.451 29.766 46.5664 29.8053C46.6819 29.8445 46.8042 29.8593 46.9257 29.8488H49.5316C49.6531 29.8593 49.7754 29.8445 49.8909 29.8053C50.0063 29.766 50.1124 29.7032 50.2022 29.6208C50.2921 29.5384 50.3639 29.4382 50.413 29.3266C50.4621 29.215 50.4874 29.0944 50.4874 28.9724C50.4874 28.8505 50.4621 28.7299 50.413 28.6183C50.3639 28.5066 50.2921 28.4064 50.2022 28.324C50.1124 28.2416 50.0063 28.1788 49.8909 28.1396C49.7754 28.1003 49.6531 28.0855 49.5316 28.0961H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 28.9758C53.0437 28.7437 52.9519 28.5209 52.7884 28.3562C52.6248 28.1914 52.4028 28.0979 52.1706 28.0962C51.9385 28.0979 51.7164 28.1914 51.5529 28.3562C51.3894 28.5209 51.2976 28.7437 51.2976 28.9758C51.2993 29.2069 51.3919 29.4279 51.5552 29.5913C51.7186 29.7546 51.9396 29.8471 52.1706 29.8489C52.4028 29.8489 52.6255 29.7571 52.7903 29.5936C52.9551 29.43 53.0419 29.208 53.0437 28.9758Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 24.5907C46.8042 24.5801 46.6819 24.595 46.5664 24.6342C46.451 24.6734 46.3449 24.7363 46.255 24.8187C46.1652 24.9011 46.0934 25.0013 46.0443 25.1129C45.9952 25.2245 45.9698 25.3451 45.9698 25.4671C45.9698 25.589 45.9952 25.7096 46.0443 25.8212C46.0934 25.9328 46.1652 26.033 46.255 26.1154C46.3449 26.1978 46.451 26.2607 46.5664 26.2999C46.6819 26.3392 46.8042 26.354 46.9257 26.3434H49.5316C49.6531 26.354 49.7754 26.3392 49.8909 26.2999C50.0063 26.2607 50.1124 26.1978 50.2022 26.1154C50.2921 26.033 50.3639 25.9328 50.413 25.8212C50.4621 25.7096 50.4874 25.589 50.4874 25.4671C50.4874 25.3451 50.4621 25.2245 50.413 25.1129C50.3639 25.0013 50.2921 24.9011 50.2022 24.8187C50.1124 24.7363 50.0063 24.6734 49.8909 24.6342C49.7754 24.595 49.6531 24.5801 49.5316 24.5907H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 25.4705C53.0437 25.2383 52.9519 25.0156 52.7884 24.8508C52.6248 24.686 52.4028 24.5926 52.1706 24.5908C51.9385 24.5926 51.7164 24.686 51.5529 24.8508C51.3894 25.0156 51.2976 25.2383 51.2976 25.4705C51.2993 25.7015 51.3919 25.9225 51.5552 26.0859C51.7186 26.2492 51.9396 26.3418 52.1706 26.3435C52.4028 26.3435 52.6255 26.2517 52.7903 26.0882C52.9551 25.9247 53.0419 25.7026 53.0437 25.4705Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M46.9257 21.0853C46.8042 21.0748 46.6819 21.0896 46.5664 21.1288C46.451 21.1681 46.3449 21.2309 46.255 21.3133C46.1652 21.3957 46.0934 21.4959 46.0443 21.6075C45.9952 21.7191 45.9698 21.8397 45.9698 21.9617C45.9698 22.0836 45.9952 22.2042 46.0443 22.3159C46.0934 22.4275 46.1652 22.5277 46.255 22.6101C46.3449 22.6925 46.451 22.7553 46.5664 22.7945C46.6819 22.8338 46.8042 22.8486 46.9257 22.838H49.5316C49.6531 22.8486 49.7754 22.8338 49.8909 22.7945C50.0063 22.7553 50.1124 22.6925 50.2022 22.6101C50.2921 22.5277 50.3639 22.4275 50.413 22.3159C50.4621 22.2042 50.4874 22.0836 50.4874 21.9617C50.4874 21.8397 50.4621 21.7191 50.413 21.6075C50.3639 21.4959 50.2921 21.3957 50.2022 21.3133C50.1124 21.2309 50.0063 21.1681 49.8909 21.1288C49.7754 21.0896 49.6531 21.0748 49.5316 21.0853H46.9257Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M53.0437 21.9651C53.0437 21.7329 52.9519 21.5102 52.7884 21.3454C52.6248 21.1806 52.4028 21.0872 52.1706 21.0854C51.9385 21.0872 51.7164 21.1806 51.5529 21.3454C51.3894 21.5102 51.2976 21.7329 51.2976 21.9651C51.2993 22.1961 51.3919 22.4172 51.5552 22.5805C51.7186 22.7439 51.9396 22.8364 52.1706 22.8381C52.4028 22.8381 52.6255 22.7464 52.7903 22.5828C52.9551 22.4193 53.0419 22.1973 53.0437 21.9651Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 41.2445C7.37209 41.234 7.24974 41.2488 7.13429 41.288C7.01883 41.3272 6.9128 41.3901 6.82292 41.4725C6.73303 41.5549 6.66127 41.6551 6.61217 41.7667C6.56307 41.8783 6.53772 41.9989 6.53772 42.1209C6.53772 42.2428 6.56307 42.3634 6.61217 42.475C6.66127 42.5867 6.73303 42.6868 6.82292 42.7693C6.9128 42.8517 7.01883 42.9145 7.13429 42.9537C7.24974 42.993 7.37209 43.0078 7.49357 42.9972H10.0995C10.2209 43.0078 10.3433 42.993 10.4587 42.9537C10.5742 42.9145 10.6802 42.8517 10.7701 42.7693C10.86 42.6868 10.9318 42.5867 10.9809 42.475C11.03 42.3634 11.0553 42.2428 11.0553 42.1209C11.0553 41.9989 11.03 41.8783 10.9809 41.7667C10.9318 41.6551 10.86 41.5549 10.7701 41.4725C10.6802 41.3901 10.5742 41.3272 10.4587 41.288C10.3433 41.2488 10.2209 41.234 10.0995 41.2445H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 42.1177C3.97013 41.8855 4.06358 41.6635 4.22835 41.4999C4.39313 41.3364 4.61588 41.2446 4.84803 41.2446C5.08019 41.2446 5.30294 41.3364 5.46771 41.4999C5.63249 41.6635 5.72594 41.8855 5.72768 42.1177C5.72768 42.351 5.63501 42.5747 5.47004 42.7397C5.30507 42.9046 5.08133 42.9973 4.84803 42.9973C4.61588 42.9956 4.39384 42.9021 4.2303 42.7373C4.06676 42.5726 3.96838 42.3498 3.96838 42.1177Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 37.7391C7.37209 37.7286 7.24974 37.7434 7.13429 37.7826C7.01883 37.8219 6.9128 37.8847 6.82292 37.9671C6.73303 38.0495 6.66127 38.1497 6.61217 38.2613C6.56307 38.3729 6.53772 38.4936 6.53772 38.6155C6.53772 38.7374 6.56307 38.858 6.61217 38.9697C6.66127 39.0813 6.73303 39.1815 6.82292 39.2639C6.9128 39.3463 7.01883 39.4091 7.13429 39.4483C7.24974 39.4876 7.37209 39.5024 7.49357 39.4918H10.0995C10.2209 39.5024 10.3433 39.4876 10.4587 39.4483C10.5742 39.4091 10.6802 39.3463 10.7701 39.2639C10.86 39.1815 10.9318 39.0813 10.9809 38.9697C11.03 38.858 11.0553 38.7374 11.0553 38.6155C11.0553 38.4936 11.03 38.3729 10.9809 38.2613C10.9318 38.1497 10.86 38.0495 10.7701 37.9671C10.6802 37.8847 10.5742 37.8219 10.4587 37.7826C10.3433 37.7434 10.2209 37.7286 10.0995 37.7391H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 38.6123C3.97013 38.3801 4.06358 38.1581 4.22835 37.9946C4.39313 37.831 4.61588 37.7393 4.84803 37.7393C5.08019 37.7393 5.30294 37.831 5.46771 37.9946C5.63249 38.1581 5.72594 38.3801 5.72768 38.6123C5.72768 38.8456 5.63501 39.0693 5.47004 39.2343C5.30507 39.3993 5.08133 39.4919 4.84803 39.4919C4.61588 39.4902 4.39384 39.3968 4.2303 39.232C4.06676 39.0672 3.96838 38.8445 3.96838 38.6123Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 34.2338C7.37209 34.2232 7.24974 34.238 7.13429 34.2773C7.01883 34.3165 6.9128 34.3793 6.82292 34.4617C6.73303 34.5441 6.66127 34.6443 6.61217 34.756C6.56307 34.8676 6.53772 34.9882 6.53772 35.1101C6.53772 35.2321 6.56307 35.3527 6.61217 35.4643C6.66127 35.5759 6.73303 35.6761 6.82292 35.7585C6.9128 35.8409 7.01883 35.9037 7.13429 35.943C7.24974 35.9822 7.37209 35.997 7.49357 35.9865H10.0995C10.2209 35.997 10.3433 35.9822 10.4587 35.943C10.5742 35.9037 10.6802 35.8409 10.7701 35.7585C10.86 35.6761 10.9318 35.5759 10.9809 35.4643C11.03 35.3527 11.0553 35.2321 11.0553 35.1101C11.0553 34.9882 11.03 34.8676 10.9809 34.756C10.9318 34.6443 10.86 34.5441 10.7701 34.4617C10.6802 34.3793 10.5742 34.3165 10.4587 34.2773C10.3433 34.238 10.2209 34.2232 10.0995 34.2338H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 35.1069C3.97013 34.8748 4.06358 34.6527 4.22835 34.4892C4.39313 34.3256 4.61588 34.2339 4.84803 34.2339C5.08019 34.2339 5.30294 34.3256 5.46771 34.4892C5.63249 34.6527 5.72594 34.8748 5.72768 35.1069C5.72768 35.3402 5.63501 35.564 5.47004 35.7289C5.30507 35.8939 5.08133 35.9866 4.84803 35.9866C4.61588 35.9848 4.39384 35.8914 4.2303 35.7266C4.06676 35.5618 3.96838 35.3391 3.96838 35.1069Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 30.7284C7.37209 30.7178 7.24974 30.7326 7.13429 30.7719C7.01883 30.8111 6.9128 30.874 6.82292 30.9564C6.73303 31.0388 6.66127 31.139 6.61217 31.2506C6.56307 31.3622 6.53772 31.4828 6.53772 31.6047C6.53772 31.7267 6.56307 31.8473 6.61217 31.9589C6.66127 32.0705 6.73303 32.1707 6.82292 32.2531C6.9128 32.3355 7.01883 32.3984 7.13429 32.4376C7.24974 32.4768 7.37209 32.4917 7.49357 32.4811H10.0995C10.2209 32.4917 10.3433 32.4768 10.4587 32.4376C10.5742 32.3984 10.6802 32.3355 10.7701 32.2531C10.86 32.1707 10.9318 32.0705 10.9809 31.9589C11.03 31.8473 11.0553 31.7267 11.0553 31.6047C11.0553 31.4828 11.03 31.3622 10.9809 31.2506C10.9318 31.139 10.86 31.0388 10.7701 30.9564C10.6802 30.874 10.5742 30.8111 10.4587 30.7719C10.3433 30.7326 10.2209 30.7178 10.0995 30.7284H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 31.6016C3.97013 31.3694 4.06358 31.1474 4.22835 30.9838C4.39313 30.8203 4.61588 30.7285 4.84803 30.7285C5.08019 30.7285 5.30294 30.8203 5.46771 30.9838C5.63249 31.1474 5.72594 31.3694 5.72768 31.6016C5.72768 31.8348 5.63501 32.0586 5.47004 32.2236C5.30507 32.3885 5.08133 32.4812 4.84803 32.4812C4.61588 32.4795 4.39384 32.386 4.2303 32.2212C4.06676 32.0565 3.96838 31.8337 3.96838 31.6016Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 27.223C7.37209 27.2125 7.24974 27.2273 7.13429 27.2665C7.01883 27.3058 6.9128 27.3686 6.82292 27.451C6.73303 27.5334 6.66127 27.6336 6.61217 27.7452C6.56307 27.8568 6.53772 27.9774 6.53772 28.0994C6.53772 28.2213 6.56307 28.3419 6.61217 28.4535C6.66127 28.5652 6.73303 28.6654 6.82292 28.7478C6.9128 28.8302 7.01883 28.893 7.13429 28.9322C7.24974 28.9715 7.37209 28.9863 7.49357 28.9757H10.0995C10.2209 28.9863 10.3433 28.9715 10.4587 28.9322C10.5742 28.893 10.6802 28.8302 10.7701 28.7478C10.86 28.6654 10.9318 28.5652 10.9809 28.4535C11.03 28.3419 11.0553 28.2213 11.0553 28.0994C11.0553 27.9774 11.03 27.8568 10.9809 27.7452C10.9318 27.6336 10.86 27.5334 10.7701 27.451C10.6802 27.3686 10.5742 27.3058 10.4587 27.2665C10.3433 27.2273 10.2209 27.2125 10.0995 27.223H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 28.0962C3.97013 27.864 4.06358 27.642 4.22835 27.4784C4.39313 27.3149 4.61588 27.2231 4.84803 27.2231C5.08019 27.2231 5.30294 27.3149 5.46771 27.4784C5.63249 27.642 5.72594 27.864 5.72768 28.0962C5.72768 28.3295 5.63501 28.5532 5.47004 28.7182C5.30507 28.8832 5.08133 28.9758 4.84803 28.9758C4.61588 28.9741 4.39384 28.8806 4.2303 28.7159C4.06676 28.5511 3.96838 28.3283 3.96838 28.0962Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 23.7177C7.37209 23.7071 7.24974 23.7219 7.13429 23.7612C7.01883 23.8004 6.9128 23.8632 6.82292 23.9456C6.73303 24.028 6.66127 24.1282 6.61217 24.2398C6.56307 24.3515 6.53772 24.4721 6.53772 24.594C6.53772 24.7159 6.56307 24.8366 6.61217 24.9482C6.66127 25.0598 6.73303 25.16 6.82292 25.2424C6.9128 25.3248 7.01883 25.3876 7.13429 25.4269C7.24974 25.4661 7.37209 25.4809 7.49357 25.4703H10.0995C10.2209 25.4809 10.3433 25.4661 10.4587 25.4269C10.5742 25.3876 10.6802 25.3248 10.7701 25.2424C10.86 25.16 10.9318 25.0598 10.9809 24.9482C11.03 24.8366 11.0553 24.7159 11.0553 24.594C11.0553 24.4721 11.03 24.3515 10.9809 24.2398C10.9318 24.1282 10.86 24.028 10.7701 23.9456C10.6802 23.8632 10.5742 23.8004 10.4587 23.7612C10.3433 23.7219 10.2209 23.7071 10.0995 23.7177H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 24.5908C3.97013 24.3587 4.06358 24.1366 4.22835 23.9731C4.39313 23.8095 4.61588 23.7178 4.84803 23.7178C5.08019 23.7178 5.30294 23.8095 5.46771 23.9731C5.63249 24.1366 5.72594 24.3587 5.72768 24.5908C5.72768 24.8241 5.63501 25.0478 5.47004 25.2128C5.30507 25.3778 5.08133 25.4705 4.84803 25.4705C4.61588 25.4687 4.39384 25.3753 4.2303 25.2105C4.06676 25.0457 3.96838 24.823 3.96838 24.5908Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 20.2123C7.37209 20.2017 7.24974 20.2165 7.13429 20.2558C7.01883 20.295 6.9128 20.3578 6.82292 20.4402C6.73303 20.5227 6.66127 20.6228 6.61217 20.7345C6.56307 20.8461 6.53772 20.9667 6.53772 21.0886C6.53772 21.2106 6.56307 21.3312 6.61217 21.4428C6.66127 21.5544 6.73303 21.6546 6.82292 21.737C6.9128 21.8194 7.01883 21.8822 7.13429 21.9215C7.24974 21.9607 7.37209 21.9755 7.49357 21.965H10.0995C10.2209 21.9755 10.3433 21.9607 10.4587 21.9215C10.5742 21.8822 10.6802 21.8194 10.7701 21.737C10.86 21.6546 10.9318 21.5544 10.9809 21.4428C11.03 21.3312 11.0553 21.2106 11.0553 21.0886C11.0553 20.9667 11.03 20.8461 10.9809 20.7345C10.9318 20.6228 10.86 20.5227 10.7701 20.4402C10.6802 20.3578 10.5742 20.295 10.4587 20.2558C10.3433 20.2165 10.2209 20.2017 10.0995 20.2123H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 21.0854C3.97013 20.8533 4.06358 20.6312 4.22835 20.4677C4.39313 20.3042 4.61588 20.2124 4.84803 20.2124C5.08019 20.2124 5.30294 20.3042 5.46771 20.4677C5.63249 20.6312 5.72594 20.8533 5.72768 21.0854C5.72768 21.3187 5.63501 21.5425 5.47004 21.7074C5.30507 21.8724 5.08133 21.9651 4.84803 21.9651C4.61588 21.9633 4.39384 21.8699 4.2303 21.7051C4.06676 21.5403 3.96838 21.3176 3.96838 21.0854Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.49357 16.7069C7.37209 16.6964 7.24974 16.7112 7.13429 16.7504C7.01883 16.7896 6.9128 16.8525 6.82292 16.9349C6.73303 17.0173 6.66127 17.1175 6.61217 17.2291C6.56307 17.3407 6.53772 17.4613 6.53772 17.5833C6.53772 17.7052 6.56307 17.8258 6.61217 17.9374C6.66127 18.0491 6.73303 18.1492 6.82292 18.2317C6.9128 18.3141 7.01883 18.3769 7.13429 18.4161C7.24974 18.4554 7.37209 18.4702 7.49357 18.4596H10.0995C10.2209 18.4702 10.3433 18.4554 10.4587 18.4161C10.5742 18.3769 10.6802 18.3141 10.7701 18.2317C10.86 18.1492 10.9318 18.0491 10.9809 17.9374C11.03 17.8258 11.0553 17.7052 11.0553 17.5833C11.0553 17.4613 11.03 17.3407 10.9809 17.2291C10.9318 17.1175 10.86 17.0173 10.7701 16.9349C10.6802 16.8525 10.5742 16.7896 10.4587 16.7504C10.3433 16.7112 10.2209 16.6964 10.0995 16.7069H7.49357Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 17.5801C3.97013 17.3479 4.06358 17.1259 4.22835 16.9623C4.39313 16.7988 4.61588 16.707 4.84803 16.707C5.08019 16.707 5.30294 16.7988 5.46771 16.9623C5.63249 17.1259 5.72594 17.3479 5.72768 17.5801C5.72768 17.8134 5.63501 18.0371 5.47004 18.2021C5.30507 18.367 5.08133 18.4597 4.84803 18.4597C4.61588 18.458 4.39384 18.3645 4.2303 18.1997C4.06676 18.035 3.96838 17.8122 3.96838 17.5801Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M7.40761 13.2015C7.18682 13.2283 6.98436 13.3377 6.84098 13.5077C6.6976 13.6778 6.62395 13.8958 6.63485 14.1179C6.64574 14.34 6.74038 14.5498 6.89971 14.705C7.05904 14.8602 7.27124 14.9492 7.49359 14.9542H10.0995C10.221 14.9648 10.3433 14.95 10.4588 14.9107C10.5742 14.8715 10.6802 14.8087 10.7701 14.7263C10.86 14.6439 10.9318 14.5437 10.9809 14.4321C11.03 14.3204 11.0553 14.1998 11.0553 14.0779C11.0553 13.956 11.03 13.8353 10.9809 13.7237C10.9318 13.6121 10.86 13.5119 10.7701 13.4295C10.6802 13.3471 10.5742 13.2843 10.4588 13.245C10.3433 13.2058 10.221 13.191 10.0995 13.2015H7.49359C7.46494 13.2001 7.43625 13.2001 7.40761 13.2015Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M3.96838 14.0813C3.96838 13.848 4.06106 13.6243 4.22603 13.4593C4.39099 13.2943 4.61474 13.2017 4.84803 13.2017C5.08133 13.2017 5.30507 13.2943 5.47004 13.4593C5.63501 13.6243 5.72768 13.848 5.72768 14.0813C5.72594 14.3135 5.63249 14.5355 5.46771 14.699C5.30294 14.8626 5.08019 14.9544 4.84803 14.9543C4.61703 14.9526 4.39597 14.8601 4.23262 14.6967C4.06926 14.5334 3.97011 14.3123 3.96838 14.0813ZM17.1168 18.4531C16.8847 18.4549 16.6626 18.5483 16.4991 18.7131C16.3356 18.8779 16.2438 19.1006 16.2438 19.3328V35.1069C16.2438 35.3391 16.3356 35.5618 16.4991 35.7266C16.6626 35.8914 16.8847 35.9848 17.1168 35.9866H21.5019C22.4873 35.9866 23.2546 36.7538 23.2546 37.7393C23.244 37.8608 23.2588 37.9831 23.298 38.0986C23.3373 38.214 23.4001 38.3201 23.4825 38.4099C23.5649 38.4998 23.6651 38.5716 23.7767 38.6207C23.8883 38.6698 24.009 38.6951 24.1309 38.6951C24.2528 38.6951 24.3734 38.6698 24.4851 38.6207C24.5967 38.5716 24.6969 38.4998 24.7793 38.4099C24.8617 38.3201 24.9245 38.214 24.9638 38.0986C25.003 37.9831 25.0178 37.8608 25.0072 37.7393C25.0038 36.8107 24.6333 35.9211 23.9767 35.2645C23.3201 34.6078 22.4305 34.2374 21.5019 34.2339H17.9965V20.2124H21.5019C22.4873 20.2124 23.2546 20.9796 23.2546 21.9651C23.244 22.0866 23.2588 22.2089 23.298 22.3244C23.3373 22.4398 23.4001 22.5459 23.4825 22.6358C23.5649 22.7256 23.6651 22.7974 23.7767 22.8465C23.8883 22.8956 24.009 22.9209 24.1309 22.9209C24.2528 22.9209 24.3734 22.8956 24.4851 22.8465C24.5967 22.7974 24.6969 22.7256 24.7793 22.6358C24.8617 22.5459 24.9245 22.4398 24.9638 22.3244C25.003 22.2089 25.0178 22.0866 25.0072 21.9651C25.0038 21.0365 24.6333 20.1469 23.9767 19.4903C23.3201 18.8336 22.4305 18.4632 21.5019 18.4597L17.1168 18.4531Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                      <path\n                        d=\"M32.6397 26.8064C31.0656 26.7535 29.756 27.3421 28.5325 28.0961H24.1276C24.0061 28.0856 23.8838 28.1004 23.7683 28.1396C23.6529 28.1789 23.5468 28.2417 23.4569 28.3241C23.3671 28.4065 23.2953 28.5067 23.2462 28.6183C23.1971 28.7299 23.1718 28.8505 23.1718 28.9725C23.1718 29.0944 23.1971 29.215 23.2462 29.3266C23.2953 29.4383 23.3671 29.5385 23.4569 29.6209C23.5468 29.7033 23.6529 29.7661 23.7683 29.8053C23.8838 29.8446 24.0061 29.8594 24.1276 29.8488H28.5325C28.7101 29.8472 28.883 29.7919 29.0285 29.6901C30.0495 28.9211 31.3027 28.5244 32.5802 28.5657C34.2337 28.612 36.2774 30.1531 37.8779 31.9653C38.6848 32.8648 39.3793 33.8172 39.8952 34.6108C40.3515 35.3053 40.6029 35.8013 40.7153 36.0461C40.6095 36.2445 40.4309 36.5619 40.1862 36.9257C39.7034 37.6532 38.9825 38.5924 38.1293 39.525C36.4295 41.3967 34.1477 43.1428 32.5273 43.2949C31.2692 43.4191 30.0117 43.0544 29.0153 42.2764C28.9228 42.1933 28.8138 42.1307 28.6954 42.0928C28.577 42.0549 28.4519 42.0425 28.3283 42.0565C28.2048 42.0705 28.0856 42.1105 27.9787 42.1739C27.8717 42.2373 27.7794 42.3227 27.7079 42.4244C27.6363 42.526 27.5872 42.6417 27.5636 42.7638C27.54 42.8859 27.5426 43.0116 27.5711 43.1326C27.5997 43.2536 27.6535 43.3671 27.7292 43.4658C27.8048 43.5645 27.9005 43.646 28.01 43.705C29.3592 44.6508 30.9069 45.2129 32.6926 45.041C35.2522 44.7963 37.5935 42.7129 39.4256 40.7089C40.234 39.8275 40.9768 38.888 41.6479 37.898C41.9124 37.4879 42.1241 37.1373 42.2762 36.8331C42.3525 36.6888 42.4167 36.5384 42.468 36.3834C42.5143 36.2246 42.6399 36.0725 42.468 35.6294C42.2894 35.1399 41.9256 34.505 41.3635 33.6452C40.8013 32.7854 40.0605 31.7801 39.1941 30.8012C37.448 28.8303 35.2125 26.8924 32.6397 26.8064Z\"\n                        fill=\"#1A1A1A\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_31_16506\">\n                        <rect width=\"56\" height=\"56\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </svg>\n                </span>\n                <v-card-text\n                  class=\"text\"\n                  style=\"font-size: 40px; font-weight: 700\"\n                >\n                  400\n                  <span style=\"font-size: 18px; font-weight: 400\"\n                    >مخيم</span\n                  ></v-card-text\n                >\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"12\">\n          <div class=\"cont\">\n            <v-card elevation=\"0\" color=\"transparent\" class=\"info\">\n              <v-card-title\n                class=\"title py-8\"\n                style=\"\n                  font-size: 40px;\n                  letter-spacing: normal;\n                  font-weight: 700;\n                \"\n                >الدول التي نخدمها</v-card-title\n              >\n              <v-card-text\n                class=\"text-card pb-8\"\n                style=\"font-size: 14px; font-weight: 400\"\n                >شركة مطوفي حجاج الدول الأفريقية غير العربية في 46\n                دولة</v-card-text\n              >\n              <v-btn\n                elevation=\"0\"\n                class=\"btn\"\n                style=\"\n                  font-size: 14px;\n                  width: 140px;\n                  height: 45px;\n                  letter-spacing: normal;\n                  background-color: var(--mainColor);\n                  border-radius: 24px;\n                \"\n              >\n                <router-link class=\"text-white\" to=\"/country-serve\"\n                  >عرض الدول</router-link\n                >\n              </v-btn>\n            </v-card>\n          </div>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n.cont {\n  background-image: url(../../assets/images/خدمة-الدول.svg);\n  width: 1170px;\n  height: 436px;\n  margin: auto;\n  .info {\n    padding: 150px;\n  }\n}\n@media (max-width: 1280px) {\n  .here {\n    .v-card-text.text {\n      font-size: 30px !important;\n    }\n    .cont {\n      width: 950px;\n      border-radius: 30px;\n      .info {\n        padding: 37px;\n        padding-top: 130px;\n      }\n    }\n  }\n}\n@media (max-width: 1105px) {\n  .here {\n    .cont {\n      width: 100%;\n      .info {\n        padding: 37px;\n        padding-top: 130px;\n      }\n    }\n  }\n}\n@media (max-width: 960px) {\n  .here {\n    .v-col.v-col-6 {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n}\n@media (max-width: 767px) {\n  .here {\n    .v-card-text.text {\n      font-size: 20px !important;\n    }\n    .cont {\n      .info {\n        .title {\n          font-size: 25px !important;\n          padding-bottom: 10px !important;\n        }\n        .text-card {\n          width: 300px;\n          font-weight: 600 !important;\n        }\n        .btn {\n          font-size: 12px !important;\n          width: 110px !important;\n          height: 38px !important;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./HereLord.vue?vue&type=template&id=28459b90&scoped=true\"\nconst script = {}\n\nimport \"./HereLord.vue?vue&type=style&index=0&id=28459b90&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28459b90\"]])\n\nexport default __exports__","<template>\n  <div class=\"our-news py-12\">\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <div class=\"title d-flex align-center justify-space-between\">\n            <v-card-title\n              style=\"font-size: 50px; font-weight: 700; letter-spacing: normal\"\n              >أخبارنا</v-card-title\n            >\n            <v-btn\n              elevation=\"0\"\n              style=\"\n                font-size: 14px;\n                width: 130px;\n                height: 45px;\n                letter-spacing: normal;\n                background-color: var(--mainColor, black);\n                border-radius: 24px;\n              \"\n            >\n              <router-link class=\"text-white\" to=\"/health-news\"\n                >اقرأ المزيد</router-link\n              >\n            </v-btn>\n          </div>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"12\" sm=\"6\" md=\"4\" lg=\"3\">\n          <router-link to=\"/health-news\">\n            <v-card\n              class=\"card\"\n              style=\"border-radius: 45px; box-shadow: 1px 1px 3px 3px #cecece1a\"\n            >\n              <img class=\"w-100\" src=\"@/assets/images/اخبارنا-1.svg\" alt=\"\" />\n              <v-card-text\n                style=\"font-size: 14px; font-weight: 400; color: #999999\"\n                >مجتمع المؤسسة 23 يوليو، 2019</v-card-text\n              >\n              <v-card-text style=\"font-size: 16px; font-weight: 700\"\n                >لجنة الصحة الوقائية تقيم ورشة عمل لاعضاء مكاتب الخدمة\n                الميدانية</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n        <v-col cols=\"12\" sm=\"6\" md=\"4\" lg=\"3\">\n          <router-link to=\"/health-news\">\n            <v-card\n              class=\"car\"\n              style=\"border-radius: 45px; box-shadow: 1px 1px 3px 3px #cecece1a\"\n            >\n              <img class=\"w-100\" src=\"@/assets/images/اخبارنا-3.svg\" alt=\"\" />\n              <v-card-text\n                style=\"font-size: 14px; font-weight: 400; color: #999999\"\n                >مجتمع المؤسسة 23 يوليو، 2019</v-card-text\n              >\n              <v-card-text style=\"font-size: 16px; font-weight: 700\"\n                >لجنة الصحة الوقائية تقيم ورشة عمل لاعضاء مكاتب الخدمة\n                الميدانية</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n        <v-col cols=\"12\" sm=\"6\" md=\"4\" lg=\"3\">\n          <router-link to=\"/health-news\">\n            <v-card\n              class=\"car\"\n              style=\"border-radius: 45px; box-shadow: 1px 1px 3px 3px #cecece1a\"\n            >\n              <img class=\"w-100\" src=\"@/assets/images/اخبارنا-2.svg\" alt=\"\" />\n              <v-card-text\n                style=\"font-size: 14px; font-weight: 400; color: #999999\"\n                >مجتمع المؤسسة 23 يوليو، 2019</v-card-text\n              >\n              <v-card-text style=\"font-size: 16px; font-weight: 700\"\n                >لجنة الصحة الوقائية تقيم ورشة عمل لاعضاء مكاتب الخدمة\n                الميدانية</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n        <v-col cols=\"12\" sm=\"6\" md=\"4\" lg=\"3\">\n          <router-link to=\"/health-news\">\n            <v-card\n              class=\"car\"\n              style=\"border-radius: 45px; box-shadow: 1px 1px 3px 3px #cecece1a\"\n            >\n              <img class=\"w-100\" src=\"@/assets/images/اخبارنا-3.svg\" alt=\"\" />\n              <v-card-text\n                style=\"font-size: 14px; font-weight: 400; color: #999999\"\n                >مجتمع المؤسسة 23 يوليو، 2019</v-card-text\n              >\n              <v-card-text style=\"font-size: 16px; font-weight: 700\"\n                >لجنة الصحة الوقائية تقيم ورشة عمل لاعضاء مكاتب الخدمة\n                الميدانية</v-card-text\n              >\n            </v-card>\n          </router-link>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n@media (max-width: 600px) {\n  .card {\n    text-align: center;\n    .v-card-text {\n      padding-left: 50px;\n      padding-right: 50px;\n    }\n  }\n}\n</style>\n","import { render } from \"./OurNews.vue?vue&type=template&id=74fc053c&scoped=true\"\nconst script = {}\n\nimport \"./OurNews.vue?vue&type=style&index=0&id=74fc053c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74fc053c\"]])\n\nexport default __exports__","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","/**\n * Dom7 4.0.6\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2023, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 2, 2023\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  const proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get() {\n      return proto;\n    },\n\n    set(value) {\n      proto.__proto__ = value;\n    }\n\n  });\n}\n\nclass Dom7 extends Array {\n  constructor(items) {\n    if (typeof items === 'number') {\n      super(items);\n    } else {\n      super(...(items || []));\n      makeReactive(this);\n    }\n  }\n\n}\n\nfunction arrayFlat(arr = []) {\n  const res = [];\n  arr.forEach(el => {\n    if (Array.isArray(el)) {\n      res.push(...arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  const uniqueArray = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group) => group.toUpperCase());\n}\n\n// eslint-disable-next-line\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  const a = [];\n  const res = context.querySelectorAll(selector);\n\n  for (let i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  const window = getWindow();\n  const document = getDocument();\n  let arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    const html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      let toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      const tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\n// eslint-disable-next-line\n\nfunction addClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.add(...classNames);\n  });\n  return this;\n}\n\nfunction removeClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.remove(...classNames);\n  });\n  return this;\n}\n\nfunction toggleClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    classNames.forEach(className => {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  return arrayFilter(this, el => {\n    return classNames.filter(className => el.classList.contains(className)).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  let el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    const dataKey = el.getAttribute(`data-${key}`);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      const attr = el.attributes[i];\n\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    const el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      const values = [];\n\n      for (let i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n  }\n\n  return this;\n}\n\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      const parents = $(target).parents(); // eslint-disable-line\n\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  const events = eventType.split(' ');\n  let j;\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  const events = eventType.split(' ');\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger(...args) {\n  const window = getWindow();\n  const events = args[0].split(' ');\n  const eventData = args[1];\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n\n      if (window.CustomEvent) {\n        const evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionStart(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionstart', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionstart', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  const window = getWindow();\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  const window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  const window = getWindow();\n  let i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (const prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach((el, index) => {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  const result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  const window = getWindow();\n  const document = getDocument();\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  let child = this[0];\n  let i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    const returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append(...els) {\n  let newChild;\n  const document = getDocument();\n\n  for (let k = 0; k < els.length; k += 1) {\n    newChild = els[k];\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  const document = getDocument();\n  let i;\n  let j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  const before = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  const after = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n\n    el = next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n\n    el = prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n\n      parent = parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  const foundElements = [];\n\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].children;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add(...els) {\n  const dom = this;\n  let i;\n  let j;\n\n  for (i = 0; i < els.length; i += 1) {\n    const toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\n// eslint-disable-next-line\n\nfunction scrollTo(...args) {\n  const window = getWindow();\n  let [left, top, duration, easing, callback] = args;\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n\n    let scrollLeft; // eslint-disable-line\n\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      let done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\n// eslint-disable-next-line\n\nfunction animate(initialProps, initialParams) {\n  const window = getWindow();\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n\n    stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n\n    done(complete) {\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      const elements = []; // Define & Cache Initials & Units\n\n      a.elements.each((el, index) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(prop => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(element => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(prop => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const {\n              initialValue,\n              finalValue,\n              unit\n            } = el[prop];\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            const currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler(...args) {\n    if (typeof args[0] === 'undefined') {\n      for (let i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on(name, ...args);\n  }\n\n  return eventHandler;\n}\n\nconst click = shortcut('click');\nconst blur = shortcut('blur');\nconst focus = shortcut('focus');\nconst focusin = shortcut('focusin');\nconst focusout = shortcut('focusout');\nconst keyup = shortcut('keyup');\nconst keydown = shortcut('keydown');\nconst keypress = shortcut('keypress');\nconst submit = shortcut('submit');\nconst change = shortcut('change');\nconst mousedown = shortcut('mousedown');\nconst mousemove = shortcut('mousemove');\nconst mouseup = shortcut('mouseup');\nconst mouseenter = shortcut('mouseenter');\nconst mouseleave = shortcut('mouseleave');\nconst mouseout = shortcut('mouseout');\nconst mouseover = shortcut('mouseover');\nconst touchstart = shortcut('touchstart');\nconst touchend = shortcut('touchend');\nconst touchmove = shortcut('touchmove');\nconst resize = shortcut('resize');\nconst scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, transitionStart, trigger, val, value, width };\n","import { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, styles, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove } from 'dom7';\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove\n};\nObject.keys(Methods).forEach(methodName => {\n  Object.defineProperty($.fn, methodName, {\n    value: Methods[methodName],\n    writable: true\n  });\n});\nexport default $;","import { getWindow } from 'ssr-window';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {// no getter for object\n    }\n\n    try {\n      delete object[key];\n    } catch (e) {// something got wrong\n    }\n  });\n}\n\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\n\nfunction now() {\n  return Date.now();\n}\n\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n\n  if (!style) {\n    style = el.style;\n  }\n\n  return style;\n}\n\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    } // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n\n\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n\n  return curTransform || 0;\n}\n\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\n\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\n\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n\n  return to;\n}\n\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\n\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n\n  const animate = () => {\n    time = new Date().getTime();\n\n    if (startTime === null) {\n      startTime = time;\n    }\n\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n\n  animate();\n}\n\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n    passiveListener: function checkPassiveListener() {\n      let supportsPassive = false;\n\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          }\n\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {// No support\n      }\n\n      return supportsPassive;\n    }(),\n    gestures: function checkGestures() {\n      return 'ongesturestart' in window;\n    }()\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n\n  return support;\n}\n\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\n\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n\n  return deviceCached;\n}\n\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n\n  return {\n    isSafari: isSafari(),\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n\n  return browser;\n}\n\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n};","export default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  } // Subtract paddings\n\n\n  width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n  height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n  const {\n    $wrapperEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginBottom: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: '',\n    marginTop: ''\n  }); // reset cssMode offsets\n\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n  }\n\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  } // Calc slides\n\n\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n\n      const slideStyles = getComputedStyle(slide[0]);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide[0];\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (params.setWrapperSize) {\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).css({\n      [key]: `${spaceBetween}px`\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);\n\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.$el.removeClass(backFaceHiddenClass);\n    }\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n    }\n\n    return swiper.slides.eq(index)[0];\n  }; // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || $([])).each(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}","export default function updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","export default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    $wrapperEl,\n    activeIndex,\n    realIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n  let activeSlide;\n\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  } // Active classes\n\n\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    }\n  } // Next Slide\n\n\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  } // Prev Slide\n\n\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    }\n\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    }\n  }\n\n  swiper.emitSlidesClasses();\n}","export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    $wrapperEl\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    $wrapperEl,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n\n    swiper.emit(`slideChangeTransition${step}`);\n\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index !== 'number' && typeof index !== 'string') {\n    throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex]; // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  } // Update progress\n\n\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._swiperImmediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n\n    swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n    swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n  }\n\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let newIndex = index;\n\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    animating,\n    enabled,\n    params\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    $wrapperEl\n  } = swiper; // Remove duplicated slides\n\n  const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\n  $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  let slides = $selector.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $selector.append(blankNode);\n      }\n\n      slides = $selector.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n\n  if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    const slide = $(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n\n  for (let i = 0; i < swiper.loopedSlides; i += 1) {\n    const index = i - Math.floor(i / slides.length) * slides.length;\n    appendSlides.push(slides.eq(index)[0]);\n    prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\n  }\n\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}","export default function loopFix() {\n  const swiper = this;\n  swiper.emit('beforeLoopFix');\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    slides\n  } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n\n  if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js'; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\n\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    $targetEl = $(eventPath[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n\n    if ($targetEl.is(data.focusableElements)) {\n      preventDefault = false;\n\n      if ($targetEl[0].nodeName === 'SELECT') {\n        data.isTouched = false;\n      }\n    }\n\n    if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n      e.preventDefault();\n    }\n  }\n\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && e.type !== 'touchmove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n\n  if (!swiper.allowTouchMove) {\n    if (!$(e.target).is(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n\n  if (!data.startMoving) {\n    return;\n  }\n\n  swiper.allowClick = false;\n\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop && !params.cssMode) {\n      swiper.loopFix();\n    }\n\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n\n    data.allowMomentumBounce = false; // Grab Cursor\n\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n\n    swiper.emit('sliderFirstMove', e);\n  }\n\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n\n  if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  } // Directions locks\n\n\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  } // Threshold\n\n\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  } // Update progress\n\n\n  swiper.updateProgress(data.currentTranslate); // Update translate\n\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nlet dummyEventAttached = false;\n\nfunction dummyEventListener() {}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    touchEvents,\n    el,\n    wrapperEl,\n    device,\n    support\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method; // Touch Events\n\n  if (!support.touch) {\n    el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n    document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n    document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n    el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n      passive: false,\n      capture\n    } : capture);\n    el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n    if (touchEvents.cancel) {\n      el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    }\n  } // Prevent Links Clicks\n\n\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  } // Resize handler\n\n\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    support\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  if (support.touch && !dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nexport default {\n  attachEvents,\n  detachEvents\n};","import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    $el,\n    device,\n    support\n  } = swiper; // prettier-ignore\n\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'pointer-events': !support.touch\n  }, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    $el,\n    classNames\n  } = swiper;\n  $el.removeClass(classNames.join(' '));\n  swiper.emitContainerClasses();\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n  const window = getWindow();\n  let image;\n\n  function onReady() {\n    if (callback) callback();\n  }\n\n  const isPicture = $(imageEl).parent('picture')[0];\n\n  if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n\n      if (sizes) {\n        image.sizes = sizes;\n      }\n\n      if (srcset) {\n        image.srcset = srcset;\n      }\n\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}","export default function preloadImages() {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n  }\n}","import loadImage from './loadImage.js';\nimport preloadImages from './preloadImages.js';\nexport default {\n  loadImage,\n  preloadImages\n};","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\n\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopedSlidesLimit: true,\n  loopFillGroupWithBlank: false,\n  loopPreventsSlide: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport $ from '../shared/dom.js';\nimport { extend, now, deleteProps } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport images from './images/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images\n};\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && $(params.el).length > 1) {\n      const swipers = [];\n      $(params.el).each(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      }); // eslint-disable-next-line no-constructor-return\n\n      return swipers;\n    } // Swiper Instance\n\n\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    }); // Extend defaults with modules params\n\n    const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params); // add event listeners\n\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    } // Save Dom lib\n\n\n    swiper.$ = $; // Extend Swiper\n\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEvents: function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3]\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2]\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper'); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n    // eslint-disable-next-line no-constructor-return\n\n\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.each(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n\n    if (swiper.rtl) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n\n    swiper.update();\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true; // Find el\n\n    const $el = $(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n        res.children = options => $el.children(options);\n\n        return res;\n      }\n\n      if (!$el.children) {\n        return $($el).children(getWrapperSelector());\n      }\n\n      return $el.children(getWrapperSelector());\n    }; // Find Wrapper\n\n\n    let $wrapperEl = getWrapper();\n\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = getDocument();\n      const wrapper = document.createElement('div');\n      $wrapperEl = $(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n    });\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Create loop\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Update size\n\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    } // Attach events\n\n\n    swiper.attachEvents(); // Init Flag\n\n    swiper.initialized = true; // Emit\n\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      $el,\n      $wrapperEl,\n      slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n\n      if (slides && slides.length) {\n        slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      deleteProps(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n\n    Swiper.installModule(module);\n    return Swiper;\n  }\n\n}\n\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","import { getDocument } from 'ssr-window';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  const document = getDocument();\n\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n        if (!element) {\n          element = document.createElement('div');\n          element.className = checkProps[key];\n          swiper.$el.append(element);\n        }\n\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n\n  return params;\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport $ from '../../shared/dom.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    $nextEl: null,\n    prevEl: null,\n    $prevEl: null\n  };\n\n  function getEl(el) {\n    let $el;\n\n    if (el) {\n      $el = $(el);\n\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n        $el = swiper.$el.find(el);\n      }\n    }\n\n    return $el;\n  }\n\n  function toggleEl($el, disabled) {\n    const params = swiper.params.navigation;\n\n    if ($el && $el.length > 0) {\n      $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  }\n\n  function update() {\n    // Update Navigation Buttons\n    if (swiper.params.loop) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    const $nextEl = getEl(params.nextEl);\n    const $prevEl = getEl(params.prevEl);\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', onNextClick);\n    }\n\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', onPrevClick);\n    }\n\n    Object.assign(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0]\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl) {\n      $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n\n    if ($prevEl) {\n      $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n  });\n  on('click', (_s, e) => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    const targetEl = e.target;\n\n    if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n\n      if ($nextEl) {\n        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n      } else if ($prevEl) {\n        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n\n      if ($nextEl) {\n        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if ($prevEl) {\n        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);\n    init();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);\n    destroy();\n  };\n\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import $ from '../../shared/dom.js';\nimport classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    $el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n  }\n\n  function setSideBullets($bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n  }\n\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el; // Current/Total\n\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n        current -= slidesLength - swiper.loopedSlides * 2;\n      }\n\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    } // Types\n\n\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n\n      if (params.dynamicBullets) {\n        bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\n\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n\n      bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n      if ($el.length > 1) {\n        bullets.each(bullet => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n\n            if (bulletIndex === firstIndex) {\n              setSideBullets($bullet, 'prev');\n            }\n\n            if (bulletIndex === lastIndex) {\n              setSideBullets($bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          } else {\n            setSideBullets($firstDisplayedBullet, 'prev');\n            setSideBullets($lastDisplayedBullet, 'next');\n          }\n        }\n      }\n\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n\n    if (params.type === 'fraction') {\n      $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n      $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n    }\n\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n\n      $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      emit('paginationRender', $el[0]);\n    } else {\n      emit('paginationUpdate', $el[0]);\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  }\n\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n    }\n\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type !== 'custom') {\n      emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  }\n\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n      $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n      if ($el.length > 1) {\n        $el = $el.filter(el => {\n          if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n          return true;\n        });\n      }\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      dynamicBulletIndex = 0;\n\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Object.assign(swiper.pagination, {\n      $el,\n      el: $el[0]\n    });\n\n    if (!swiper.enabled) {\n      $el.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const $el = swiper.pagination.$el;\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n    if (params.clickable) {\n      $el.off('click', classesToSelector(params.bulletClass));\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (swiper.params.loop) {\n      update();\n    } else if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    if (!swiper.params.loop) {\n      update();\n    }\n  });\n  on('slidesLengthChange', () => {\n    if (swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('snapGridLengthChange', () => {\n    if (!swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.pagination;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const {\n      $el\n    } = swiper.pagination;\n\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n\n      $el.toggleClass(swiper.params.pagination.hiddenClass);\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    init();\n    render();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { nextTick } from '../../shared/utils.js';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  let timeout;\n  swiper.autoplay = {\n    running: false,\n    paused: false\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n\n  function run() {\n    if (!swiper.size) {\n      swiper.autoplay.running = false;\n      swiper.autoplay.paused = false;\n      return;\n    }\n\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n\n    clearTimeout(timeout);\n    timeout = nextTick(() => {\n      let autoplayResult;\n\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          emit('autoplay');\n        } else {\n          stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.isEnd) {\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n        emit('autoplay');\n      } else {\n        stop();\n      }\n\n      if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n        run();\n      }\n    }, delay);\n  }\n\n  function start() {\n    if (typeof timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    emit('autoplayStart');\n    run();\n    return true;\n  }\n\n  function stop() {\n    if (!swiper.autoplay.running) return false;\n    if (typeof timeout === 'undefined') return false;\n\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = undefined;\n    }\n\n    swiper.autoplay.running = false;\n    emit('autoplayStop');\n    return true;\n  }\n\n  function pause(speed) {\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (timeout) clearTimeout(timeout);\n    swiper.autoplay.paused = true;\n\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      run();\n    } else {\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n      });\n    }\n  }\n\n  function onVisibilityChange() {\n    const document = getDocument();\n\n    if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n      pause();\n    }\n\n    if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n      run();\n      swiper.autoplay.paused = false;\n    }\n  }\n\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n    if (e.target !== swiper.$wrapperEl[0]) return;\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n    swiper.autoplay.paused = false;\n\n    if (!swiper.autoplay.running) {\n      stop();\n    } else {\n      run();\n    }\n  }\n\n  function onMouseEnter() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n    } else {\n      emit('autoplayPause');\n      pause();\n    }\n\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n  }\n\n  function onMouseLeave() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      return;\n    }\n\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n    run();\n  }\n\n  function attachMouseEvents() {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.$el.on('mouseenter', onMouseEnter);\n      swiper.$el.on('mouseleave', onMouseLeave);\n    }\n  }\n\n  function detachMouseEvents() {\n    swiper.$el.off('mouseenter', onMouseEnter);\n    swiper.$el.off('mouseleave', onMouseLeave);\n  }\n\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      start();\n      const document = getDocument();\n      document.addEventListener('visibilitychange', onVisibilityChange);\n      attachMouseEvents();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.autoplay.running) {\n      if (internal || !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.pause(speed);\n      } else {\n        stop();\n      }\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.autoplay.running) {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n    }\n  });\n  on('touchEnd', () => {\n    if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n      run();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n\n    if (swiper.autoplay.running) {\n      stop();\n    }\n\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  });\n  Object.assign(swiper.autoplay, {\n    pause,\n    run,\n    start,\n    stop\n  });\n}","function isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\n\nfunction extend(target, src) {\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  Object.keys(src).filter(key => noExtend.indexOf(key) < 0).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      if (src[key].__swiper__) target[key] = src[key];else extend(target[key], src[key]);\n    } else {\n      target[key] = src[key];\n    }\n  });\n}\n\nfunction needsNavigation(params = {}) {\n  return params.navigation && typeof params.navigation.nextEl === 'undefined' && typeof params.navigation.prevEl === 'undefined';\n}\n\nfunction needsPagination(params = {}) {\n  return params.pagination && typeof params.pagination.el === 'undefined';\n}\n\nfunction needsScrollbar(params = {}) {\n  return params.scrollbar && typeof params.scrollbar.el === 'undefined';\n}\n\nfunction uniqueClasses(classNames = '') {\n  const classes = classNames.split(' ').map(c => c.trim()).filter(c => !!c);\n  const unique = [];\n  classes.forEach(c => {\n    if (unique.indexOf(c) < 0) unique.push(c);\n  });\n  return unique.join(' ');\n}\n\nexport { isObject, extend, needsNavigation, needsPagination, needsScrollbar, uniqueClasses };","/* underscore in name -> watch for changes */\nconst paramsList = ['modules', 'init', '_direction', 'touchEventsTarget', 'initialSlide', '_speed', 'cssMode', 'updateOnWindowResize', 'resizeObserver', 'nested', 'focusableElements', '_enabled', '_width', '_height', 'preventInteractionOnTransition', 'userAgent', 'url', '_edgeSwipeDetection', '_edgeSwipeThreshold', '_freeMode', '_autoHeight', 'setWrapperSize', 'virtualTranslate', '_effect', 'breakpoints', '_spaceBetween', '_slidesPerView', 'maxBackfaceHiddenSlides', '_grid', '_slidesPerGroup', '_slidesPerGroupSkip', '_slidesPerGroupAuto', '_centeredSlides', '_centeredSlidesBounds', '_slidesOffsetBefore', '_slidesOffsetAfter', 'normalizeSlideIndex', '_centerInsufficientSlides', '_watchOverflow', 'roundLengths', 'touchRatio', 'touchAngle', 'simulateTouch', '_shortSwipes', '_longSwipes', 'longSwipesRatio', 'longSwipesMs', '_followFinger', 'allowTouchMove', '_threshold', 'touchMoveStopPropagation', 'touchStartPreventDefault', 'touchStartForcePreventDefault', 'touchReleaseOnEdges', 'uniqueNavElements', '_resistance', '_resistanceRatio', '_watchSlidesProgress', '_grabCursor', 'preventClicks', 'preventClicksPropagation', '_slideToClickedSlide', '_preloadImages', 'updateOnImagesReady', '_loop', '_loopAdditionalSlides', '_loopedSlides', '_loopedSlidesLimit', '_loopFillGroupWithBlank', 'loopPreventsSlide', '_rewind', '_allowSlidePrev', '_allowSlideNext', '_swipeHandler', '_noSwiping', 'noSwipingClass', 'noSwipingSelector', 'passiveListeners', 'containerModifierClass', 'slideClass', 'slideBlankClass', 'slideActiveClass', 'slideDuplicateActiveClass', 'slideVisibleClass', 'slideDuplicateClass', 'slideNextClass', 'slideDuplicateNextClass', 'slidePrevClass', 'slideDuplicatePrevClass', 'wrapperClass', 'runCallbacksOnInit', 'observer', 'observeParents', 'observeSlideChildren', // modules\n'a11y', '_autoplay', '_controller', 'coverflowEffect', 'cubeEffect', 'fadeEffect', 'flipEffect', 'creativeEffect', 'cardsEffect', 'hashNavigation', 'history', 'keyboard', 'lazy', 'mousewheel', '_navigation', '_pagination', 'parallax', '_scrollbar', '_thumbs', 'virtual', 'zoom'];\nexport { paramsList };","import Swiper from 'swiper';\nimport { isObject, extend } from './utils.js';\nimport { paramsList } from './params-list.js';\n\nfunction getParams(obj = {}, splitEvents = true) {\n  const params = {\n    on: {}\n  };\n  const events = {};\n  const passedParams = {};\n  extend(params, Swiper.defaults);\n  extend(params, Swiper.extendedDefaults);\n  params._emitClasses = true;\n  params.init = false;\n  const rest = {};\n  const allowedParams = paramsList.map(key => key.replace(/_/, ''));\n  const plainObj = Object.assign({}, obj);\n  Object.keys(plainObj).forEach(key => {\n    if (typeof obj[key] === 'undefined') return;\n\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      if (splitEvents) {\n        events[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      } else {\n        params.on[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      }\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  ['navigation', 'pagination', 'scrollbar'].forEach(key => {\n    if (params[key] === true) params[key] = {};\n    if (params[key] === false) delete params[key];\n  });\n  return {\n    params,\n    passedParams,\n    rest,\n    events\n  };\n}\n\nexport { getParams };","import { needsNavigation, needsPagination, needsScrollbar } from './utils.js';\n\nfunction mountSwiper({\n  el,\n  nextEl,\n  prevEl,\n  paginationEl,\n  scrollbarEl,\n  swiper\n}, swiperParams) {\n  if (needsNavigation(swiperParams) && nextEl && prevEl) {\n    swiper.params.navigation.nextEl = nextEl;\n    swiper.originalParams.navigation.nextEl = nextEl;\n    swiper.params.navigation.prevEl = prevEl;\n    swiper.originalParams.navigation.prevEl = prevEl;\n  }\n\n  if (needsPagination(swiperParams) && paginationEl) {\n    swiper.params.pagination.el = paginationEl;\n    swiper.originalParams.pagination.el = paginationEl;\n  }\n\n  if (needsScrollbar(swiperParams) && scrollbarEl) {\n    swiper.params.scrollbar.el = scrollbarEl;\n    swiper.originalParams.scrollbar.el = scrollbarEl;\n  }\n\n  swiper.init(el);\n}\n\nexport { mountSwiper };","import Swiper from 'swiper';\nexport const calcLoopedSlides = (slides, swiperParams) => {\n  let slidesPerViewParams = swiperParams.slidesPerView;\n\n  if (swiperParams.breakpoints) {\n    const breakpoint = Swiper.prototype.getBreakpoint(swiperParams.breakpoints);\n    const breakpointOnlyParams = breakpoint in swiperParams.breakpoints ? swiperParams.breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams && breakpointOnlyParams.slidesPerView) {\n      slidesPerViewParams = breakpointOnlyParams.slidesPerView;\n    }\n  }\n\n  let loopedSlides = Math.ceil(parseFloat(swiperParams.loopedSlides || slidesPerViewParams, 10));\n  loopedSlides += swiperParams.loopAdditionalSlides;\n\n  if (loopedSlides > slides.length && swiperParams.loopedSlidesLimit) {\n    loopedSlides = slides.length;\n  }\n\n  return loopedSlides;\n};","import { h } from 'vue';\nimport { calcLoopedSlides } from '../shared/calc-looped-slides.js';\n\nfunction renderLoop(swiperRef, slides, swiperParams) {\n  const modifiedSlides = slides.map((child, index) => {\n    if (!child.props) child.props = {};\n    child.props.swiperRef = swiperRef;\n    child.props['data-swiper-slide-index'] = index;\n    return child;\n  });\n\n  function duplicateSlide(child, index, position) {\n    if (!child.props) child.props = {};\n    return h(child.type, { ...child.props,\n      key: `${child.key}-duplicate-${index}-${position}`,\n      class: `${child.props.className || ''} ${swiperParams.slideDuplicateClass} ${child.props.class || ''}`\n    }, child.children);\n  }\n\n  if (swiperParams.loopFillGroupWithBlank) {\n    const blankSlidesNum = swiperParams.slidesPerGroup - modifiedSlides.length % swiperParams.slidesPerGroup;\n\n    if (blankSlidesNum !== swiperParams.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankSlide = h('div', {\n          class: `${swiperParams.slideClass} ${swiperParams.slideBlankClass}`\n        });\n        modifiedSlides.push(blankSlide);\n      }\n    }\n  }\n\n  if (swiperParams.slidesPerView === 'auto' && !swiperParams.loopedSlides) {\n    swiperParams.loopedSlides = modifiedSlides.length;\n  }\n\n  const loopedSlides = calcLoopedSlides(modifiedSlides, swiperParams);\n  const prependSlides = [];\n  const appendSlides = [];\n\n  for (let i = 0; i < loopedSlides; i += 1) {\n    const index = i - Math.floor(i / modifiedSlides.length) * modifiedSlides.length;\n    appendSlides.push(duplicateSlide(modifiedSlides[index], i, 'append'));\n    prependSlides.unshift(duplicateSlide(modifiedSlides[modifiedSlides.length - index - 1], i, 'prepend'));\n  }\n\n  if (swiperRef.value) {\n    swiperRef.value.loopedSlides = loopedSlides;\n  }\n\n  return [...prependSlides, ...modifiedSlides, ...appendSlides];\n}\n\nexport { calcLoopedSlides, renderLoop };","import { paramsList } from './params-list.js';\nimport { isObject } from './utils.js';\n\nfunction getChangedParams(swiperParams, oldParams, children, oldChildren, getKey) {\n  const keys = [];\n  if (!oldParams) return keys;\n\n  const addKey = key => {\n    if (keys.indexOf(key) < 0) keys.push(key);\n  };\n\n  if (children && oldChildren) {\n    const oldChildrenKeys = oldChildren.map(getKey);\n    const childrenKeys = children.map(getKey);\n    if (oldChildrenKeys.join('') !== childrenKeys.join('')) addKey('children');\n    if (oldChildren.length !== children.length) addKey('children');\n  }\n\n  const watchParams = paramsList.filter(key => key[0] === '_').map(key => key.replace(/_/, ''));\n  watchParams.forEach(key => {\n    if (key in swiperParams && key in oldParams) {\n      if (isObject(swiperParams[key]) && isObject(oldParams[key])) {\n        const newKeys = Object.keys(swiperParams[key]);\n        const oldKeys = Object.keys(oldParams[key]);\n\n        if (newKeys.length !== oldKeys.length) {\n          addKey(key);\n        } else {\n          newKeys.forEach(newKey => {\n            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {\n              addKey(key);\n            }\n          });\n          oldKeys.forEach(oldKey => {\n            if (swiperParams[key][oldKey] !== oldParams[key][oldKey]) addKey(key);\n          });\n        }\n      } else if (swiperParams[key] !== oldParams[key]) {\n        addKey(key);\n      }\n    }\n  });\n  return keys;\n}\n\nexport { getChangedParams };","function getChildren(originalSlots, slidesRef, oldSlidesRef) {\n  if (originalSlots === void 0) {\n    originalSlots = {};\n  }\n\n  const slides = [];\n  const slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n\n  const getSlidesFromElements = (els, slotName) => {\n    if (!Array.isArray(els)) {\n      return;\n    }\n\n    els.forEach(vnode => {\n      const isFragment = typeof vnode.type === 'symbol';\n      if (slotName === 'default') slotName = 'container-end';\n\n      if (isFragment && vnode.children) {\n        getSlidesFromElements(vnode.children, 'default');\n      } else if (vnode.type && (vnode.type.name === 'SwiperSlide' || vnode.type.name === 'AsyncComponentWrapper')) {\n        slides.push(vnode);\n      } else if (slots[slotName]) {\n        slots[slotName].push(vnode);\n      }\n    });\n  };\n\n  Object.keys(originalSlots).forEach(slotName => {\n    if (typeof originalSlots[slotName] !== 'function') return;\n    const els = originalSlots[slotName]();\n    getSlidesFromElements(els, slotName);\n  });\n  oldSlidesRef.value = slidesRef.value;\n  slidesRef.value = slides;\n  return {\n    slides,\n    slots\n  };\n}\n\nexport { getChildren };","import { isObject, extend } from './utils.js';\n\nfunction updateSwiper({\n  swiper,\n  slides,\n  passedParams,\n  changedParams,\n  nextEl,\n  prevEl,\n  scrollbarEl,\n  paginationEl\n}) {\n  const updateParams = changedParams.filter(key => key !== 'children' && key !== 'direction');\n  const {\n    params: currentParams,\n    pagination,\n    navigation,\n    scrollbar,\n    virtual,\n    thumbs\n  } = swiper;\n  let needThumbsInit;\n  let needControllerInit;\n  let needPaginationInit;\n  let needScrollbarInit;\n  let needNavigationInit;\n\n  if (changedParams.includes('thumbs') && passedParams.thumbs && passedParams.thumbs.swiper && currentParams.thumbs && !currentParams.thumbs.swiper) {\n    needThumbsInit = true;\n  }\n\n  if (changedParams.includes('controller') && passedParams.controller && passedParams.controller.control && currentParams.controller && !currentParams.controller.control) {\n    needControllerInit = true;\n  }\n\n  if (changedParams.includes('pagination') && passedParams.pagination && (passedParams.pagination.el || paginationEl) && (currentParams.pagination || currentParams.pagination === false) && pagination && !pagination.el) {\n    needPaginationInit = true;\n  }\n\n  if (changedParams.includes('scrollbar') && passedParams.scrollbar && (passedParams.scrollbar.el || scrollbarEl) && (currentParams.scrollbar || currentParams.scrollbar === false) && scrollbar && !scrollbar.el) {\n    needScrollbarInit = true;\n  }\n\n  if (changedParams.includes('navigation') && passedParams.navigation && (passedParams.navigation.prevEl || prevEl) && (passedParams.navigation.nextEl || nextEl) && (currentParams.navigation || currentParams.navigation === false) && navigation && !navigation.prevEl && !navigation.nextEl) {\n    needNavigationInit = true;\n  }\n\n  const destroyModule = mod => {\n    if (!swiper[mod]) return;\n    swiper[mod].destroy();\n\n    if (mod === 'navigation') {\n      currentParams[mod].prevEl = undefined;\n      currentParams[mod].nextEl = undefined;\n      swiper[mod].prevEl = undefined;\n      swiper[mod].nextEl = undefined;\n    } else {\n      currentParams[mod].el = undefined;\n      swiper[mod].el = undefined;\n    }\n  };\n\n  updateParams.forEach(key => {\n    if (isObject(currentParams[key]) && isObject(passedParams[key])) {\n      extend(currentParams[key], passedParams[key]);\n    } else {\n      const newValue = passedParams[key];\n\n      if ((newValue === true || newValue === false) && (key === 'navigation' || key === 'pagination' || key === 'scrollbar')) {\n        if (newValue === false) {\n          destroyModule(key);\n        }\n      } else {\n        currentParams[key] = passedParams[key];\n      }\n    }\n  });\n\n  if (updateParams.includes('controller') && !needControllerInit && swiper.controller && swiper.controller.control && currentParams.controller && currentParams.controller.control) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n\n  if (changedParams.includes('children') && slides && virtual && currentParams.virtual.enabled) {\n    virtual.slides = slides;\n    virtual.update(true);\n  } else if (changedParams.includes('children') && swiper.lazy && swiper.params.lazy.enabled) {\n    swiper.lazy.load();\n  }\n\n  if (needThumbsInit) {\n    const initialized = thumbs.init();\n    if (initialized) thumbs.update(true);\n  }\n\n  if (needControllerInit) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n\n  if (needPaginationInit) {\n    if (paginationEl) currentParams.pagination.el = paginationEl;\n    pagination.init();\n    pagination.render();\n    pagination.update();\n  }\n\n  if (needScrollbarInit) {\n    if (scrollbarEl) currentParams.scrollbar.el = scrollbarEl;\n    scrollbar.init();\n    scrollbar.updateSize();\n    scrollbar.setTranslate();\n  }\n\n  if (needNavigationInit) {\n    if (nextEl) currentParams.navigation.nextEl = nextEl;\n    if (prevEl) currentParams.navigation.prevEl = prevEl;\n    navigation.init();\n    navigation.update();\n  }\n\n  if (changedParams.includes('allowSlideNext')) {\n    swiper.allowSlideNext = passedParams.allowSlideNext;\n  }\n\n  if (changedParams.includes('allowSlidePrev')) {\n    swiper.allowSlidePrev = passedParams.allowSlidePrev;\n  }\n\n  if (changedParams.includes('direction')) {\n    swiper.changeDirection(passedParams.direction, false);\n  }\n\n  swiper.update();\n}\n\nexport { updateSwiper };","import { h } from 'vue';\n\nfunction renderVirtual(swiperRef, slides, virtualData) {\n  if (!virtualData) return null;\n  const style = swiperRef.value.isHorizontal() ? {\n    [swiperRef.value.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  return slides.filter((slide, index) => index >= virtualData.from && index <= virtualData.to).map(slide => {\n    if (!slide.props) slide.props = {};\n    if (!slide.props.style) slide.props.style = {};\n    slide.props.swiperRef = swiperRef;\n    slide.props.style = style;\n    return h(slide.type, { ...slide.props\n    }, slide.children);\n  });\n}\n\nexport { renderVirtual };","export const updateOnVirtualData = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled) return;\n  swiper.updateSlides();\n  swiper.updateProgress();\n  swiper.updateSlidesClasses();\n\n  if (swiper.lazy && swiper.params.lazy.enabled) {\n    swiper.lazy.load();\n  }\n\n  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {\n    swiper.parallax.setTranslate();\n  }\n};","import { h, ref, onMounted, onUpdated, onBeforeUnmount, watch, nextTick, provide } from 'vue';\nimport SwiperCore from 'swiper';\nimport { getParams } from '../components-shared/get-params.js';\nimport { mountSwiper } from '../components-shared/mount-swiper.js';\nimport { needsScrollbar, needsNavigation, needsPagination, uniqueClasses, extend } from '../components-shared/utils.js';\nimport { renderLoop, calcLoopedSlides } from './loop.js';\nimport { getChangedParams } from '../components-shared/get-changed-params.js';\nimport { getChildren } from './get-children.js';\nimport { updateSwiper } from '../components-shared/update-swiper.js';\nimport { renderVirtual } from './virtual.js';\nimport { updateOnVirtualData } from '../components-shared/update-on-virtual-data.js';\nconst Swiper = {\n  name: 'Swiper',\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    wrapperTag: {\n      type: String,\n      default: 'div'\n    },\n    modules: {\n      type: Array,\n      default: undefined\n    },\n    init: {\n      type: Boolean,\n      default: undefined\n    },\n    direction: {\n      type: String,\n      default: undefined\n    },\n    touchEventsTarget: {\n      type: String,\n      default: undefined\n    },\n    initialSlide: {\n      type: Number,\n      default: undefined\n    },\n    speed: {\n      type: Number,\n      default: undefined\n    },\n    cssMode: {\n      type: Boolean,\n      default: undefined\n    },\n    updateOnWindowResize: {\n      type: Boolean,\n      default: undefined\n    },\n    resizeObserver: {\n      type: Boolean,\n      default: undefined\n    },\n    nested: {\n      type: Boolean,\n      default: undefined\n    },\n    focusableElements: {\n      type: String,\n      default: undefined\n    },\n    width: {\n      type: Number,\n      default: undefined\n    },\n    height: {\n      type: Number,\n      default: undefined\n    },\n    preventInteractionOnTransition: {\n      type: Boolean,\n      default: undefined\n    },\n    userAgent: {\n      type: String,\n      default: undefined\n    },\n    url: {\n      type: String,\n      default: undefined\n    },\n    edgeSwipeDetection: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    edgeSwipeThreshold: {\n      type: Number,\n      default: undefined\n    },\n    autoHeight: {\n      type: Boolean,\n      default: undefined\n    },\n    setWrapperSize: {\n      type: Boolean,\n      default: undefined\n    },\n    virtualTranslate: {\n      type: Boolean,\n      default: undefined\n    },\n    effect: {\n      type: String,\n      default: undefined\n    },\n    breakpoints: {\n      type: Object,\n      default: undefined\n    },\n    spaceBetween: {\n      type: Number,\n      default: undefined\n    },\n    slidesPerView: {\n      type: [Number, String],\n      default: undefined\n    },\n    maxBackfaceHiddenSlides: {\n      type: Number,\n      default: undefined\n    },\n    slidesPerGroup: {\n      type: Number,\n      default: undefined\n    },\n    slidesPerGroupSkip: {\n      type: Number,\n      default: undefined\n    },\n    slidesPerGroupAuto: {\n      type: Boolean,\n      default: undefined\n    },\n    centeredSlides: {\n      type: Boolean,\n      default: undefined\n    },\n    centeredSlidesBounds: {\n      type: Boolean,\n      default: undefined\n    },\n    slidesOffsetBefore: {\n      type: Number,\n      default: undefined\n    },\n    slidesOffsetAfter: {\n      type: Number,\n      default: undefined\n    },\n    normalizeSlideIndex: {\n      type: Boolean,\n      default: undefined\n    },\n    centerInsufficientSlides: {\n      type: Boolean,\n      default: undefined\n    },\n    watchOverflow: {\n      type: Boolean,\n      default: undefined\n    },\n    roundLengths: {\n      type: Boolean,\n      default: undefined\n    },\n    touchRatio: {\n      type: Number,\n      default: undefined\n    },\n    touchAngle: {\n      type: Number,\n      default: undefined\n    },\n    simulateTouch: {\n      type: Boolean,\n      default: undefined\n    },\n    shortSwipes: {\n      type: Boolean,\n      default: undefined\n    },\n    longSwipes: {\n      type: Boolean,\n      default: undefined\n    },\n    longSwipesRatio: {\n      type: Number,\n      default: undefined\n    },\n    longSwipesMs: {\n      type: Number,\n      default: undefined\n    },\n    followFinger: {\n      type: Boolean,\n      default: undefined\n    },\n    allowTouchMove: {\n      type: Boolean,\n      default: undefined\n    },\n    threshold: {\n      type: Number,\n      default: undefined\n    },\n    touchMoveStopPropagation: {\n      type: Boolean,\n      default: undefined\n    },\n    touchStartPreventDefault: {\n      type: Boolean,\n      default: undefined\n    },\n    touchStartForcePreventDefault: {\n      type: Boolean,\n      default: undefined\n    },\n    touchReleaseOnEdges: {\n      type: Boolean,\n      default: undefined\n    },\n    uniqueNavElements: {\n      type: Boolean,\n      default: undefined\n    },\n    resistance: {\n      type: Boolean,\n      default: undefined\n    },\n    resistanceRatio: {\n      type: Number,\n      default: undefined\n    },\n    watchSlidesProgress: {\n      type: Boolean,\n      default: undefined\n    },\n    grabCursor: {\n      type: Boolean,\n      default: undefined\n    },\n    preventClicks: {\n      type: Boolean,\n      default: undefined\n    },\n    preventClicksPropagation: {\n      type: Boolean,\n      default: undefined\n    },\n    slideToClickedSlide: {\n      type: Boolean,\n      default: undefined\n    },\n    preloadImages: {\n      type: Boolean,\n      default: undefined\n    },\n    updateOnImagesReady: {\n      type: Boolean,\n      default: undefined\n    },\n    loop: {\n      type: Boolean,\n      default: undefined\n    },\n    loopAdditionalSlides: {\n      type: Number,\n      default: undefined\n    },\n    loopedSlides: {\n      type: Number,\n      default: undefined\n    },\n    loopedSlidesLimit: {\n      type: Boolean,\n      default: true\n    },\n    loopFillGroupWithBlank: {\n      type: Boolean,\n      default: undefined\n    },\n    loopPreventsSlide: {\n      type: Boolean,\n      default: undefined\n    },\n    rewind: {\n      type: Boolean,\n      default: undefined\n    },\n    allowSlidePrev: {\n      type: Boolean,\n      default: undefined\n    },\n    allowSlideNext: {\n      type: Boolean,\n      default: undefined\n    },\n    swipeHandler: {\n      type: Boolean,\n      default: undefined\n    },\n    noSwiping: {\n      type: Boolean,\n      default: undefined\n    },\n    noSwipingClass: {\n      type: String,\n      default: undefined\n    },\n    noSwipingSelector: {\n      type: String,\n      default: undefined\n    },\n    passiveListeners: {\n      type: Boolean,\n      default: undefined\n    },\n    containerModifierClass: {\n      type: String,\n      default: undefined\n    },\n    slideClass: {\n      type: String,\n      default: undefined\n    },\n    slideBlankClass: {\n      type: String,\n      default: undefined\n    },\n    slideActiveClass: {\n      type: String,\n      default: undefined\n    },\n    slideDuplicateActiveClass: {\n      type: String,\n      default: undefined\n    },\n    slideVisibleClass: {\n      type: String,\n      default: undefined\n    },\n    slideDuplicateClass: {\n      type: String,\n      default: undefined\n    },\n    slideNextClass: {\n      type: String,\n      default: undefined\n    },\n    slideDuplicateNextClass: {\n      type: String,\n      default: undefined\n    },\n    slidePrevClass: {\n      type: String,\n      default: undefined\n    },\n    slideDuplicatePrevClass: {\n      type: String,\n      default: undefined\n    },\n    wrapperClass: {\n      type: String,\n      default: undefined\n    },\n    runCallbacksOnInit: {\n      type: Boolean,\n      default: undefined\n    },\n    observer: {\n      type: Boolean,\n      default: undefined\n    },\n    observeParents: {\n      type: Boolean,\n      default: undefined\n    },\n    observeSlideChildren: {\n      type: Boolean,\n      default: undefined\n    },\n    a11y: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    autoplay: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    controller: {\n      type: Object,\n      default: undefined\n    },\n    coverflowEffect: {\n      type: Object,\n      default: undefined\n    },\n    cubeEffect: {\n      type: Object,\n      default: undefined\n    },\n    fadeEffect: {\n      type: Object,\n      default: undefined\n    },\n    flipEffect: {\n      type: Object,\n      default: undefined\n    },\n    creativeEffect: {\n      type: Object,\n      default: undefined\n    },\n    cardsEffect: {\n      type: Object,\n      default: undefined\n    },\n    hashNavigation: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    history: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    keyboard: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    lazy: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    mousewheel: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    navigation: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    pagination: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    parallax: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    scrollbar: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    thumbs: {\n      type: Object,\n      default: undefined\n    },\n    virtual: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    zoom: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    grid: {\n      type: [Object],\n      default: undefined\n    },\n    freeMode: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    enabled: {\n      type: Boolean,\n      default: undefined\n    }\n  },\n  emits: ['_beforeBreakpoint', '_containerClasses', '_slideClass', '_slideClasses', '_swiper', '_freeModeNoMomentumRelease', 'activeIndexChange', 'afterInit', 'autoplay', 'autoplayStart', 'autoplayStop', 'autoplayPause', 'autoplayResume', 'beforeDestroy', 'beforeInit', 'beforeLoopFix', 'beforeResize', 'beforeSlideChangeStart', 'beforeTransitionStart', 'breakpoint', 'changeDirection', 'click', 'disable', 'doubleTap', 'doubleClick', 'destroy', 'enable', 'fromEdge', 'hashChange', 'hashSet', 'imagesReady', 'init', 'keyPress', 'lazyImageLoad', 'lazyImageReady', 'lock', 'loopFix', 'momentumBounce', 'navigationHide', 'navigationShow', 'navigationPrev', 'navigationNext', 'observerUpdate', 'orientationchange', 'paginationHide', 'paginationRender', 'paginationShow', 'paginationUpdate', 'progress', 'reachBeginning', 'reachEnd', 'realIndexChange', 'resize', 'scroll', 'scrollbarDragEnd', 'scrollbarDragMove', 'scrollbarDragStart', 'setTransition', 'setTranslate', 'slideChange', 'slideChangeTransitionEnd', 'slideChangeTransitionStart', 'slideNextTransitionEnd', 'slideNextTransitionStart', 'slidePrevTransitionEnd', 'slidePrevTransitionStart', 'slideResetTransitionStart', 'slideResetTransitionEnd', 'sliderMove', 'sliderFirstMove', 'slidesLengthChange', 'slidesGridLengthChange', 'snapGridLengthChange', 'snapIndexChange', 'swiper', 'tap', 'toEdge', 'touchEnd', 'touchMove', 'touchMoveOpposite', 'touchStart', 'transitionEnd', 'transitionStart', 'unlock', 'update', 'virtualUpdate', 'zoomChange'],\n\n  setup(props, _ref) {\n    let {\n      slots: originalSlots,\n      emit\n    } = _ref;\n    const {\n      tag: Tag,\n      wrapperTag: WrapperTag\n    } = props;\n    const containerClasses = ref('swiper');\n    const virtualData = ref(null);\n    const breakpointChanged = ref(false);\n    const initializedRef = ref(false);\n    const swiperElRef = ref(null);\n    const swiperRef = ref(null);\n    const oldPassedParamsRef = ref(null);\n    const slidesRef = {\n      value: []\n    };\n    const oldSlidesRef = {\n      value: []\n    };\n    const nextElRef = ref(null);\n    const prevElRef = ref(null);\n    const paginationElRef = ref(null);\n    const scrollbarElRef = ref(null);\n    const {\n      params: swiperParams,\n      passedParams\n    } = getParams(props, false);\n    getChildren(originalSlots, slidesRef, oldSlidesRef);\n    oldPassedParamsRef.value = passedParams;\n    oldSlidesRef.value = slidesRef.value;\n\n    const onBeforeBreakpoint = () => {\n      getChildren(originalSlots, slidesRef, oldSlidesRef);\n      breakpointChanged.value = true;\n    };\n\n    swiperParams.onAny = function (event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      emit(event, ...args);\n    };\n\n    Object.assign(swiperParams.on, {\n      _beforeBreakpoint: onBeforeBreakpoint,\n\n      _containerClasses(swiper, classes) {\n        containerClasses.value = classes;\n      }\n\n    }); // init Swiper\n\n    swiperRef.value = new SwiperCore(swiperParams);\n\n    swiperRef.value.loopCreate = () => {};\n\n    swiperRef.value.loopDestroy = () => {};\n\n    if (swiperParams.loop) {\n      swiperRef.value.loopedSlides = calcLoopedSlides(slidesRef.value, swiperParams);\n    }\n\n    if (swiperRef.value.virtual && swiperRef.value.params.virtual.enabled) {\n      swiperRef.value.virtual.slides = slidesRef.value;\n      const extendWith = {\n        cache: false,\n        slides: slidesRef.value,\n        renderExternal: data => {\n          virtualData.value = data;\n        },\n        renderExternalUpdate: false\n      };\n      extend(swiperRef.value.params.virtual, extendWith);\n      extend(swiperRef.value.originalParams.virtual, extendWith);\n    }\n\n    onUpdated(() => {\n      // set initialized flag\n      if (!initializedRef.value && swiperRef.value) {\n        swiperRef.value.emitSlidesClasses();\n        initializedRef.value = true;\n      } // watch for params change\n\n\n      const {\n        passedParams: newPassedParams\n      } = getParams(props, false);\n      const changedParams = getChangedParams(newPassedParams, oldPassedParamsRef.value, slidesRef.value, oldSlidesRef.value, c => c.props && c.props.key);\n      oldPassedParamsRef.value = newPassedParams;\n\n      if ((changedParams.length || breakpointChanged.value) && swiperRef.value && !swiperRef.value.destroyed) {\n        updateSwiper({\n          swiper: swiperRef.value,\n          slides: slidesRef.value,\n          passedParams: newPassedParams,\n          changedParams,\n          nextEl: nextElRef.value,\n          prevEl: prevElRef.value,\n          scrollbarEl: scrollbarElRef.value,\n          paginationEl: paginationElRef.value\n        });\n      }\n\n      breakpointChanged.value = false;\n    });\n    provide('swiper', swiperRef); // update on virtual update\n\n    watch(virtualData, () => {\n      nextTick(() => {\n        updateOnVirtualData(swiperRef.value);\n      });\n    }); // mount swiper\n\n    onMounted(() => {\n      if (!swiperElRef.value) return;\n      mountSwiper({\n        el: swiperElRef.value,\n        nextEl: nextElRef.value,\n        prevEl: prevElRef.value,\n        paginationEl: paginationElRef.value,\n        scrollbarEl: scrollbarElRef.value,\n        swiper: swiperRef.value\n      }, swiperParams);\n      emit('swiper', swiperRef.value);\n    });\n    onBeforeUnmount(() => {\n      if (swiperRef.value && !swiperRef.value.destroyed) {\n        swiperRef.value.destroy(true, false);\n      }\n    }); // bypass swiper instance to slides\n\n    function renderSlides(slides) {\n      if (swiperParams.virtual) {\n        return renderVirtual(swiperRef, slides, virtualData.value);\n      }\n\n      if (!swiperParams.loop || swiperRef.value && swiperRef.value.destroyed) {\n        slides.forEach(slide => {\n          if (!slide.props) slide.props = {};\n          slide.props.swiperRef = swiperRef;\n        });\n        return slides;\n      }\n\n      return renderLoop(swiperRef, slides, swiperParams);\n    }\n\n    return () => {\n      const {\n        slides,\n        slots\n      } = getChildren(originalSlots, slidesRef, oldSlidesRef);\n      return h(Tag, {\n        ref: swiperElRef,\n        class: uniqueClasses(containerClasses.value)\n      }, [slots['container-start'], h(WrapperTag, {\n        class: 'swiper-wrapper'\n      }, [slots['wrapper-start'], renderSlides(slides), slots['wrapper-end']]), needsNavigation(props) && [h('div', {\n        ref: prevElRef,\n        class: 'swiper-button-prev'\n      }), h('div', {\n        ref: nextElRef,\n        class: 'swiper-button-next'\n      })], needsScrollbar(props) && h('div', {\n        ref: scrollbarElRef,\n        class: 'swiper-scrollbar'\n      }), needsPagination(props) && h('div', {\n        ref: paginationElRef,\n        class: 'swiper-pagination'\n      }), slots['container-end']]);\n    };\n  }\n\n};\nexport { Swiper };","import { h, ref, onMounted, onUpdated, onBeforeUpdate, computed, onBeforeUnmount, provide } from 'vue';\nimport { uniqueClasses } from '../components-shared/utils.js';\nconst SwiperSlide = {\n  name: 'SwiperSlide',\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    swiperRef: {\n      type: Object,\n      required: false\n    },\n    zoom: {\n      type: Boolean,\n      default: undefined\n    },\n    virtualIndex: {\n      type: [String, Number],\n      default: undefined\n    }\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    let eventAttached = false;\n    const {\n      swiperRef\n    } = props;\n    const slideElRef = ref(null);\n    const slideClasses = ref('swiper-slide');\n\n    function updateClasses(swiper, el, classNames) {\n      if (el === slideElRef.value) {\n        slideClasses.value = classNames;\n      }\n    }\n\n    onMounted(() => {\n      if (!swiperRef || !swiperRef.value) return;\n      swiperRef.value.on('_slideClass', updateClasses);\n      eventAttached = true;\n    });\n    onBeforeUpdate(() => {\n      if (eventAttached || !swiperRef || !swiperRef.value) return;\n      swiperRef.value.on('_slideClass', updateClasses);\n      eventAttached = true;\n    });\n    onUpdated(() => {\n      if (!slideElRef.value || !swiperRef || !swiperRef.value) return;\n\n      if (swiperRef.value.destroyed) {\n        if (slideClasses.value !== 'swiper-slide') {\n          slideClasses.value = 'swiper-slide';\n        }\n      }\n    });\n    onBeforeUnmount(() => {\n      if (!swiperRef || !swiperRef.value) return;\n      swiperRef.value.off('_slideClass', updateClasses);\n    });\n    const slideData = computed(() => ({\n      isActive: slideClasses.value.indexOf('swiper-slide-active') >= 0 || slideClasses.value.indexOf('swiper-slide-duplicate-active') >= 0,\n      isVisible: slideClasses.value.indexOf('swiper-slide-visible') >= 0,\n      isDuplicate: slideClasses.value.indexOf('swiper-slide-duplicate') >= 0,\n      isPrev: slideClasses.value.indexOf('swiper-slide-prev') >= 0 || slideClasses.value.indexOf('swiper-slide-duplicate-prev') >= 0,\n      isNext: slideClasses.value.indexOf('swiper-slide-next') >= 0 || slideClasses.value.indexOf('swiper-slide-duplicate-next') >= 0\n    }));\n    provide('swiperSlide', slideData);\n    return () => {\n      return h(props.tag, {\n        class: uniqueClasses(`${slideClasses.value}`),\n        ref: slideElRef,\n        'data-swiper-slide-index': props.virtualIndex\n      }, props.zoom ? h('div', {\n        class: 'swiper-zoom-container',\n        'data-swiper-zoom': typeof props.zoom === 'number' ? props.zoom : undefined\n      }, slots.default && slots.default(slideData.value)) : slots.default && slots.default(slideData.value));\n    };\n  }\n\n};\nexport { SwiperSlide };","<template>\n  <div class=\"said py-12\">\n    <v-container>\n      <div class=\"title pb-15\">\n        <h1 style=\"font-size: 50px; font-weight: 700\">قالوا عنا</h1>\n      </div>\n      <Swiper\n        :pagination=\"{ el: '.swiper-pagination', clickable: true }\"\n        :modules=\"modules\"\n        :slides-per-view=\"4\"\n        :space-between=\"35\"\n        class=\"pb-15 px-5\"\n        :navigation=\"{ prevIcon: '.swiper-prev', nextIcon: '.swiper-next' }\"\n        :autoplay=\"{\n          delay: 3000,\n          pauseOnMouseEnter: true,\n          disableOnInteraction: false,\n        }\"\n        :breakpoints=\"breakpoints\"\n        :loop=\"true\"\n      >\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card\n            class=\"py-5\"\n            style=\"\n              width: 100%;\n              border-radius: 30px;\n              box-shadow: 1px 1px 3px 3px #cecece1a;\n            \"\n          >\n            <v-card-title class=\"d-flex align-center py-5\" style=\"gap: 20px\"\n              ><span\n                ><svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M32.0587 18.3392C32.0587 22.448 30.4268 26.3886 27.5218 29.2945C24.6169 32.2003 20.6768 33.8334 16.568 33.8347C12.4583 33.8347 8.51698 32.2021 5.61102 29.2961C2.70506 26.3902 1.07251 22.4489 1.07251 18.3392C1.07251 14.2296 2.70506 10.2882 5.61102 7.38226C8.51698 4.4763 12.4583 2.84375 16.568 2.84375C20.6776 2.84375 24.6189 4.4763 27.5249 7.38226C30.4309 10.2882 32.0634 14.2296 32.0634 18.3392H32.0587Z\"\n                    fill=\"#E7AC6D\"\n                  />\n                  <path\n                    d=\"M35.9891 10.8182C35.9024 10.8106 35.815 10.8212 35.7325 10.8492C35.65 10.8773 35.5743 10.9221 35.5101 10.981C35.4459 11.0398 35.3946 11.1114 35.3596 11.1911C35.3245 11.2709 35.3064 11.357 35.3064 11.4441C35.3064 11.5312 35.3245 11.6174 35.3596 11.6971C35.3946 11.7768 35.4459 11.8484 35.5101 11.9073C35.5743 11.9661 35.65 12.011 35.7325 12.039C35.815 12.067 35.9024 12.0776 35.9891 12.0701H36.5938C36.6806 12.0776 36.768 12.067 36.8505 12.039C36.9329 12.011 37.0087 11.9661 37.0729 11.9073C37.1371 11.8484 37.1884 11.7768 37.2234 11.6971C37.2585 11.6174 37.2766 11.5312 37.2766 11.4441C37.2766 11.357 37.2585 11.2709 37.2234 11.1911C37.1884 11.1114 37.1371 11.0398 37.0729 10.981C37.0087 10.9221 36.9329 10.8773 36.8505 10.8492C36.768 10.8212 36.6806 10.8106 36.5938 10.8182H35.9891ZM32.8617 10.8182C32.7749 10.8106 32.6875 10.8212 32.6051 10.8492C32.5226 10.8773 32.4469 10.9221 32.3827 10.981C32.3185 11.0398 32.2672 11.1114 32.2321 11.1911C32.1971 11.2709 32.179 11.357 32.179 11.4441C32.179 11.5312 32.1971 11.6174 32.2321 11.6971C32.2672 11.7768 32.3185 11.8484 32.3827 11.9073C32.4469 11.9661 32.5226 12.011 32.6051 12.039C32.6875 12.067 32.7749 12.0776 32.8617 12.0701H33.4664C33.5532 12.0776 33.6406 12.067 33.723 12.039C33.8055 12.011 33.8813 11.9661 33.9455 11.9073C34.0097 11.8484 34.0609 11.7768 34.096 11.6971C34.1311 11.6174 34.1492 11.5312 34.1492 11.4441C34.1492 11.357 34.1311 11.2709 34.096 11.1911C34.0609 11.1114 34.0097 11.0398 33.9455 10.981C33.8813 10.9221 33.8055 10.8773 33.723 10.8492C33.6406 10.8212 33.5532 10.8106 33.4664 10.8182H32.8617ZM30.972 8.00252C30.972 8.16791 30.9058 8.32653 30.788 8.44347C30.6702 8.56042 30.5103 8.62612 30.3437 8.62612C30.1779 8.62488 30.0193 8.55864 29.9025 8.44183C29.7857 8.32501 29.7201 8.1671 29.7201 8.00252C29.7195 7.92063 29.7351 7.83941 29.7661 7.76351C29.7971 7.68761 29.8429 7.61852 29.9008 7.56017C29.9587 7.50183 30.0276 7.45537 30.1036 7.42346C30.1796 7.39156 30.2612 7.37482 30.3437 7.3742C30.4266 7.3742 30.5087 7.39049 30.5853 7.42212C30.6618 7.45375 30.7313 7.50011 30.7897 7.55852C30.8481 7.61693 30.8943 7.68623 30.9256 7.76243C30.9569 7.83864 30.9727 7.92024 30.972 8.00252ZM35.9797 16.7612C35.9803 16.8435 35.9645 16.9251 35.9332 17.0013C35.902 17.0775 35.8558 17.1468 35.7974 17.2052C35.739 17.2636 35.6695 17.31 35.5929 17.3416C35.5164 17.3733 35.4343 17.3896 35.3514 17.3896C35.2689 17.3889 35.1873 17.3722 35.1113 17.3403C35.0353 17.3084 34.9664 17.2619 34.9085 17.2036C34.8505 17.1452 34.8048 17.0761 34.7738 17.0002C34.7428 16.9243 34.7272 16.8431 34.7278 16.7612C34.7278 16.5967 34.7933 16.4387 34.9101 16.3219C35.027 16.2051 35.1856 16.1389 35.3514 16.1376C35.4339 16.1376 35.5156 16.1538 35.5918 16.1851C35.6681 16.2164 35.7373 16.2624 35.7957 16.3203C35.854 16.3782 35.9003 16.4469 35.9319 16.5226C35.9634 16.5983 35.9797 16.6793 35.9797 16.7612ZM34.7183 12.0701C34.5533 12.0738 34.3964 12.1423 34.2815 12.2607C34.1666 12.3792 34.1029 12.5381 34.1042 12.7031V13.3126C34.0933 13.4009 34.1013 13.4905 34.1276 13.5755C34.154 13.6606 34.1981 13.739 34.2571 13.8057C34.316 13.8723 34.3885 13.9257 34.4696 13.9623C34.5508 13.9989 34.6388 14.0178 34.7278 14.0178C34.8168 14.0178 34.9048 13.9989 34.9859 13.9623C35.0671 13.9257 35.1395 13.8723 35.1985 13.8057C35.2574 13.739 35.3016 13.6606 35.3279 13.5755C35.3543 13.4905 35.3623 13.4009 35.3514 13.3126V12.7031C35.352 12.6198 35.3361 12.5372 35.3045 12.4601C35.2729 12.383 35.2263 12.313 35.1674 12.2541C35.1085 12.1952 35.0384 12.1486 34.9613 12.117C34.8842 12.0854 34.8016 12.0695 34.7183 12.0701ZM34.7183 8.93792C34.5525 8.94164 34.3949 9.01078 34.2798 9.13025C34.1648 9.24973 34.1016 9.40985 34.1042 9.57569V10.1851C34.0933 10.2735 34.1013 10.3631 34.1276 10.4481C34.154 10.5331 34.1981 10.6116 34.2571 10.6782C34.316 10.7449 34.3885 10.7983 34.4696 10.8349C34.5508 10.8714 34.6388 10.8903 34.7278 10.8903C34.8168 10.8903 34.9048 10.8714 34.9859 10.8349C35.0671 10.7983 35.1395 10.7449 35.1985 10.6782C35.2574 10.6116 35.3016 10.5331 35.3279 10.4481C35.3543 10.3631 35.3623 10.2735 35.3514 10.1851V9.57097C35.352 9.48766 35.3361 9.40506 35.3045 9.32797C35.2729 9.25088 35.2263 9.18084 35.1674 9.12193C35.1085 9.06302 35.0384 9.01642 34.9613 8.98483C34.8842 8.95324 34.8016 8.93729 34.7183 8.93792ZM5.93364 11.7536C5.93301 11.8355 5.94865 11.9167 5.97965 11.9926C6.01065 12.0685 6.05641 12.1376 6.11431 12.1959C6.17222 12.2543 6.24114 12.3007 6.31714 12.3326C6.39314 12.3645 6.47472 12.3813 6.55724 12.3819C6.64015 12.3819 6.72225 12.3656 6.79879 12.334C6.87533 12.3023 6.94481 12.256 7.00322 12.1976C7.06163 12.1392 7.10781 12.0699 7.1391 11.9936C7.1704 11.9174 7.18619 11.8358 7.18556 11.7536C7.18556 11.5882 7.11936 11.4296 7.00153 11.3126C6.8837 11.1957 6.72388 11.13 6.55724 11.13C6.39142 11.1312 6.23281 11.1974 6.116 11.3143C5.99919 11.4311 5.93364 11.589 5.93364 11.7536ZM5.29115 3.61845C5.12716 3.62229 4.97117 3.69011 4.85652 3.80741L4.44551 4.22315C4.37939 4.27923 4.3256 4.3484 4.28752 4.42629C4.24943 4.50418 4.22788 4.58911 4.22422 4.67573C4.22055 4.76236 4.23486 4.8488 4.26623 4.92963C4.2976 5.01046 4.34536 5.08392 4.4065 5.14539C4.46765 5.20686 4.54085 5.25501 4.62151 5.28681C4.70217 5.31861 4.78854 5.33338 4.87518 5.33018C4.96182 5.32698 5.04687 5.30588 5.12496 5.26821C5.20305 5.23054 5.2725 5.17712 5.32894 5.1113L5.74467 4.69557C5.83505 4.60713 5.89664 4.49347 5.92139 4.36947C5.94614 4.24546 5.9329 4.11687 5.8834 4.00051C5.83389 3.88415 5.75043 3.78543 5.64392 3.71727C5.53742 3.6491 5.41282 3.61466 5.28642 3.61845H5.29115ZM3.21249 5.69238C3.05015 5.69744 2.89608 5.76516 2.78258 5.88135L2.36213 6.30653C2.29631 6.36297 2.24289 6.43242 2.20522 6.51051C2.16755 6.5886 2.14645 6.67365 2.14325 6.76029C2.14005 6.84693 2.15481 6.9333 2.18662 7.01396C2.21842 7.09462 2.26657 7.16782 2.32804 7.22897C2.38951 7.29011 2.46297 7.33787 2.5438 7.36924C2.62463 7.40061 2.71107 7.41492 2.7977 7.41125C2.88432 7.40759 2.96925 7.38604 3.04714 7.34795C3.12503 7.30987 3.19419 7.25607 3.25028 7.18996L3.66129 6.77423C3.75134 6.68606 3.81279 6.57285 3.83767 6.44931C3.86255 6.32576 3.8497 6.19759 3.8008 6.08145C3.75189 5.9653 3.66919 5.86654 3.56344 5.798C3.45768 5.72946 3.33376 5.69431 3.20776 5.6971L3.21249 5.69238ZM4.88014 5.69238C4.75576 5.69339 4.63447 5.73129 4.53165 5.80128C4.42883 5.87128 4.34909 5.97022 4.30255 6.08557C4.256 6.20092 4.24474 6.32748 4.27019 6.44924C4.29564 6.57099 4.35666 6.68245 4.44551 6.7695L4.85652 7.18523C4.91261 7.25135 4.98177 7.30514 5.05966 7.34323C5.13755 7.38131 5.22248 7.40286 5.3091 7.40653C5.39573 7.41019 5.48217 7.39589 5.563 7.36452C5.64383 7.33315 5.71729 7.28539 5.77876 7.22424C5.84023 7.1631 5.88838 7.08989 5.92018 7.00923C5.95199 6.92858 5.96675 6.84221 5.96355 6.75556C5.96035 6.66892 5.93925 6.58388 5.90158 6.50579C5.86391 6.4277 5.81049 6.35824 5.74467 6.3018L5.32894 5.88607C5.27047 5.8263 5.20066 5.77879 5.12359 5.74634C5.04653 5.71389 4.96376 5.69243 4.88014 5.69238ZM2.80148 3.61845C2.6771 3.61945 2.55581 3.65735 2.45299 3.72735C2.35017 3.79734 2.27043 3.89628 2.22389 4.01163C2.17735 4.12698 2.16609 4.25355 2.19154 4.37531C2.21699 4.49706 2.278 4.60852 2.36685 4.69557L2.78258 5.1113C2.83902 5.17712 2.90847 5.23054 2.98657 5.26821C3.06466 5.30588 3.1497 5.32698 3.23634 5.33018C3.32299 5.33338 3.40935 5.31861 3.49001 5.28681C3.57067 5.25501 3.64388 5.20686 3.70502 5.14539C3.76617 5.08392 3.81393 5.01046 3.8453 4.92963C3.87667 4.8488 3.89097 4.76236 3.88731 4.67573C3.88364 4.58911 3.86209 4.50418 3.82401 4.42629C3.78592 4.3484 3.73213 4.27923 3.66601 4.22315L3.25973 3.80741C3.20071 3.74707 3.13013 3.69923 3.0522 3.66676C2.97428 3.6343 2.88589 3.61786 2.80148 3.61845ZM2.17788 15.4857C2.17788 15.6503 2.24343 15.8082 2.36024 15.925C2.47705 16.0418 2.63566 16.1081 2.80148 16.1093C2.96812 16.1093 3.12794 16.0436 3.24577 15.9266C3.3636 15.8097 3.4298 15.6511 3.4298 15.4857C3.43043 15.4034 3.41464 15.3218 3.38335 15.2456C3.35205 15.1694 3.30587 15.1001 3.24746 15.0417C3.18906 14.9833 3.11958 14.9369 3.04303 14.9053C2.96649 14.8737 2.8844 14.8574 2.80148 14.8574C2.71896 14.858 2.63738 14.8747 2.56138 14.9066C2.48538 14.9385 2.41646 14.985 2.35856 15.0433C2.30065 15.1017 2.25489 15.1708 2.22389 15.2467C2.19289 15.3226 2.17726 15.4038 2.17788 15.4857ZM12.505 13.322V19.8414L12.694 20.0209C12.694 20.0209 14.9238 22.3122 16.9316 23.2712C17.4985 23.5499 18.1552 23.5499 18.7268 23.2712C19.1945 23.0492 19.4213 22.676 19.5489 22.5153C19.6717 22.3547 19.5725 22.3972 19.7048 22.3972C19.837 22.3972 19.7378 22.35 19.8607 22.5153C19.9882 22.676 20.215 23.0492 20.6874 23.2712C21.2543 23.5499 21.911 23.5499 22.4826 23.2712C24.4857 22.3122 26.7202 20.0209 26.7202 20.0209L26.9045 19.8367V13.322H25.6525V19.284C25.4541 19.4729 23.47 21.4146 21.9393 22.1516C21.7112 22.2388 21.4588 22.2388 21.2307 22.1516C21.0937 22.0854 21.0323 21.9909 20.8527 21.7547C20.6638 21.5185 20.2386 21.15 19.7048 21.15C19.1709 21.15 18.7457 21.5185 18.5615 21.7547C18.3725 21.9909 18.3158 22.0854 18.1836 22.1516C17.9554 22.2388 17.7031 22.2388 17.4749 22.1516C15.9395 21.4146 13.9554 19.4777 13.757 19.284V13.322H12.505Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M11.6264 12.7506C11.3601 12.8256 11.112 12.9544 10.8975 13.1291C10.683 13.3038 10.5066 13.5207 10.3792 13.7663C9.82178 14.7773 9.89265 16.1142 10.4265 17.2859C10.9603 18.4575 11.9099 19.3267 13.0437 19.2653C13.1297 19.2661 13.2149 19.2492 13.2941 19.2158C13.3733 19.1823 13.4448 19.1329 13.5042 19.0707C13.5635 19.0084 13.6095 18.9347 13.6392 18.854C13.6689 18.7733 13.6817 18.6874 13.6768 18.6015C13.672 18.5156 13.6496 18.4317 13.6109 18.3549C13.5723 18.278 13.5183 18.2099 13.4524 18.1548C13.3864 18.0997 13.3097 18.0587 13.2273 18.0344C13.1448 18.01 13.0582 18.0029 12.9728 18.0134C12.6044 18.037 11.9524 17.626 11.565 16.7662C11.1776 15.9111 11.1918 14.8907 11.48 14.371C11.6217 14.1112 11.7729 14.0025 11.9335 13.9647C12.0941 13.9222 12.2973 13.9411 12.5618 14.1065C12.6325 14.1498 12.711 14.1789 12.7928 14.1921C12.8746 14.2054 12.9581 14.2024 13.0386 14.1835C13.1191 14.1646 13.1949 14.1301 13.2618 14.0819C13.3287 14.0337 13.3853 13.9728 13.4284 13.9027C13.4715 13.8326 13.5003 13.7547 13.5131 13.6733C13.5259 13.5919 13.5224 13.5088 13.5029 13.4285C13.4834 13.3483 13.4483 13.2726 13.3995 13.2057C13.3507 13.1389 13.2892 13.0821 13.2185 13.0388C12.9859 12.8868 12.7251 12.7829 12.4517 12.7334C12.1782 12.6839 11.8976 12.6898 11.6264 12.7506ZM27.7786 12.7506C28.0459 12.8247 28.295 12.9532 28.5104 13.128C28.7258 13.3027 28.9028 13.52 29.0305 13.7663C29.5879 14.7773 29.5171 16.1095 28.9832 17.2811C28.4494 18.4575 27.4998 19.3267 26.366 19.2653C26.2835 19.2612 26.2026 19.2409 26.1282 19.2056C26.0537 19.1703 25.987 19.1208 25.9319 19.0597C25.8207 18.9364 25.7635 18.7739 25.7729 18.6079C25.7823 18.4418 25.8575 18.2859 25.982 18.1745C26.1066 18.063 26.2702 18.005 26.4369 18.0134C26.8054 18.037 27.4526 17.6213 27.8447 16.7662C28.2321 15.9111 28.2226 14.8907 27.9345 14.371C27.7927 14.1112 27.6321 14.0025 27.4762 13.9647C27.3156 13.9222 27.1124 13.9411 26.8479 14.1065C26.7778 14.1568 26.6981 14.1921 26.6137 14.2103C26.5294 14.2285 26.4422 14.2291 26.3576 14.2121C26.273 14.1951 26.1928 14.1608 26.1221 14.1115C26.0513 14.0621 25.9914 13.9987 25.9462 13.9252C25.901 13.8517 25.8714 13.7697 25.8593 13.6843C25.8472 13.5989 25.8528 13.5119 25.8758 13.4287C25.8988 13.3455 25.9387 13.268 25.9929 13.2009C26.0472 13.1338 26.1147 13.0786 26.1912 13.0388C26.4239 12.8868 26.6846 12.7829 26.9581 12.7334C27.2315 12.6839 27.5074 12.6898 27.7786 12.7506ZM16.5821 16.7237C16.4954 16.7161 16.408 16.7267 16.3255 16.7547C16.243 16.7828 16.1673 16.8276 16.1031 16.8865C16.0389 16.9454 15.9876 17.0169 15.9526 17.0967C15.9175 17.1764 15.8994 17.2625 15.8994 17.3496C15.8994 17.4367 15.9175 17.5229 15.9526 17.6026C15.9876 17.6823 16.0389 17.7539 16.1031 17.8128C16.1673 17.8716 16.243 17.9165 16.3255 17.9445C16.408 17.9726 16.4954 17.9831 16.5821 17.9756H16.8798C16.9665 17.9831 17.0539 17.9726 17.1364 17.9445C17.2189 17.9165 17.2946 17.8716 17.3588 17.8128C17.423 17.7539 17.4743 17.6823 17.5093 17.6026C17.5444 17.5229 17.5625 17.4367 17.5625 17.3496C17.5625 17.2625 17.5444 17.1764 17.5093 17.0967C17.4743 17.0169 17.423 16.9454 17.3588 16.8865C17.2946 16.8276 17.2189 16.7828 17.1364 16.7547C17.0539 16.7267 16.9665 16.7161 16.8798 16.7237H16.5821ZM22.5299 16.7237C22.4432 16.7161 22.3558 16.7267 22.2733 16.7547C22.1908 16.7828 22.1151 16.8276 22.0509 16.8865C21.9867 16.9454 21.9354 17.0169 21.9004 17.0967C21.8653 17.1764 21.8472 17.2625 21.8472 17.3496C21.8472 17.4367 21.8653 17.5229 21.9004 17.6026C21.9354 17.6823 21.9867 17.7539 22.0509 17.8128C22.1151 17.8716 22.1908 17.9165 22.2733 17.9445C22.3558 17.9726 22.4432 17.9831 22.5299 17.9756H22.8228C22.9096 17.9831 22.997 17.9726 23.0795 17.9445C23.1619 17.9165 23.2377 17.8716 23.3019 17.8128C23.3661 17.7539 23.4174 17.6823 23.4524 17.6026C23.4875 17.5229 23.5056 17.4367 23.5056 17.3496C23.5056 17.2625 23.4875 17.1764 23.4524 17.0967C23.4174 17.0169 23.3661 16.9454 23.3019 16.8865C23.2377 16.8276 23.1619 16.7828 23.0795 16.7547C22.997 16.7267 22.9096 16.7161 22.8228 16.7237H22.5299Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M26.895 18.0083C26.73 18.012 26.5731 18.0805 26.4582 18.199C26.3432 18.3174 26.2795 18.4763 26.2808 18.6414V23.6585C26.2808 27.3056 23.3565 30.2204 19.7047 30.2204C16.0529 30.2204 13.1333 27.3056 13.1333 23.6538V18.9532C13.1409 18.8664 13.1303 18.779 13.1022 18.6965C13.0742 18.6141 13.0293 18.5383 12.9705 18.4741C12.9116 18.4099 12.8401 18.3587 12.7603 18.3236C12.6806 18.2885 12.5945 18.2704 12.5074 18.2704C12.4203 18.2704 12.3341 18.2885 12.2544 18.3236C12.1746 18.3587 12.1031 18.4099 12.0442 18.4741C11.9854 18.5383 11.9405 18.6141 11.9125 18.6965C11.8844 18.779 11.8738 18.8664 11.8814 18.9532V23.6585C11.8814 27.9764 15.3773 31.4724 19.7047 31.4724C24.0321 31.4724 27.528 27.9764 27.528 23.6585V18.6414C27.5286 18.5581 27.5127 18.4755 27.4811 18.3984C27.4495 18.3213 27.4029 18.2512 27.344 18.1923C27.2851 18.1334 27.2151 18.0868 27.138 18.0552C27.0609 18.0236 26.9783 18.0077 26.895 18.0083ZM11.8719 27.4001C11.4468 27.4001 11.0547 27.5465 10.7712 27.7638C10.5158 27.9695 10.3011 28.221 10.1382 28.5055C9.82635 29.0063 9.60904 29.4646 9.28779 29.7338L5.55093 32.8518C5.05016 33.2298 4.40767 33.5841 3.84076 34.1179C3.51298 34.4159 3.25117 34.7791 3.07217 35.1843C2.89318 35.5895 2.80096 36.0276 2.80143 36.4706V38.0343C2.79389 38.1211 2.80447 38.2085 2.8325 38.2909C2.86053 38.3734 2.9054 38.4491 2.96426 38.5133C3.02312 38.5775 3.09469 38.6288 3.17442 38.6639C3.25414 38.6989 3.34029 38.7171 3.42739 38.7171C3.51449 38.7171 3.60064 38.6989 3.68037 38.6639C3.7601 38.6288 3.83167 38.5775 3.89053 38.5133C3.94939 38.4491 3.99426 38.3734 4.02229 38.2909C4.05032 38.2085 4.0609 38.1211 4.05335 38.0343V36.4753C4.0398 36.2004 4.09136 35.9262 4.20383 35.675C4.3163 35.4238 4.4865 35.2027 4.70057 35.0297C5.10686 34.647 5.71156 34.3022 6.31153 33.8392C6.31792 33.8346 6.32422 33.8299 6.33043 33.825L10.0815 30.6976C10.6862 30.1921 10.9602 29.559 11.2058 29.1622C11.2914 29.0111 11.4015 28.8754 11.5318 28.7607C11.6263 28.6898 11.6924 28.6567 11.8719 28.6567C11.9587 28.6643 12.0461 28.6537 12.1286 28.6257C12.211 28.5976 12.2868 28.5528 12.351 28.4939C12.4152 28.435 12.4664 28.3635 12.5015 28.2837C12.5366 28.204 12.5547 28.1179 12.5547 28.0308C12.5547 27.9437 12.5366 27.8575 12.5015 27.7778C12.4664 27.6981 12.4152 27.6265 12.351 27.5676C12.2868 27.5088 12.211 27.4639 12.1286 27.4359C12.0461 27.4078 11.9587 27.3925 11.8719 27.4001ZM18.4433 32.5637C18.2783 32.5674 18.1214 32.6359 18.0065 32.7543C17.8916 32.8728 17.8279 33.0317 17.8292 33.1967V39.2909C17.8183 39.3793 17.8263 39.4689 17.8527 39.5539C17.879 39.6389 17.9231 39.7174 17.9821 39.7841C18.041 39.8507 18.1135 39.9041 18.1946 39.9407C18.2758 39.9773 18.3638 39.9962 18.4528 39.9962C18.5418 39.9962 18.6298 39.9773 18.7109 39.9407C18.7921 39.9041 18.8645 39.8507 18.9235 39.7841C18.9824 39.7174 19.0266 39.6389 19.0529 39.5539C19.0793 39.4689 19.0873 39.3793 19.0764 39.2909V33.1967C19.077 33.1134 19.0611 33.0308 19.0295 32.9537C18.9979 32.8766 18.9513 32.8066 18.8924 32.7477C18.8335 32.6888 18.7634 32.6421 18.6863 32.6106C18.6092 32.579 18.5266 32.563 18.4433 32.5637Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M14.0688 21.1455V23.6588C14.0688 25.7658 14.6594 27.6791 15.6467 29.1011C16.6388 30.5231 18.075 31.4727 19.7048 31.4727C21.3347 31.4727 22.7756 30.5278 23.7677 29.1011C24.755 27.6838 25.3361 25.7658 25.3361 23.6588V21.1455H24.0842V23.6588C24.0842 25.5343 23.5551 27.2114 22.7331 28.3877C21.9158 29.5688 20.8528 30.2207 19.7048 30.2207C18.5569 30.2207 17.4939 29.5641 16.6766 28.3877C15.8546 27.2114 15.3255 25.5343 15.3208 23.6588V21.1455H14.0688Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M16.2607 22.709V24.901C16.2607 26.9561 16.5773 28.5292 17.1583 29.6536C17.7347 30.7732 18.6606 31.4724 19.7047 31.4724C20.7488 31.4724 21.6747 30.7732 22.2558 29.6536C22.8321 28.5292 23.1487 26.9608 23.1487 24.901V22.709H21.8967V24.901C21.8967 26.8238 21.5849 28.2269 21.1409 29.082C20.7015 29.9323 20.2244 30.2158 19.7047 30.2158C19.185 30.2158 18.7079 29.9323 18.2685 29.082C17.8245 28.2269 17.5127 26.8238 17.5127 24.901V22.709H16.2607Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6953 23.9608C19.5295 23.9645 19.3719 24.0336 19.2568 24.1531C19.1418 24.2726 19.0787 24.4327 19.0812 24.5986V30.5275C19.0703 30.6158 19.0783 30.7054 19.1047 30.7904C19.131 30.8755 19.1751 30.9539 19.2341 31.0206C19.293 31.0872 19.3655 31.1406 19.4466 31.1772C19.5278 31.2138 19.6158 31.2327 19.7048 31.2327C19.7938 31.2327 19.8818 31.2138 19.9629 31.1772C20.0441 31.1406 20.1165 31.0872 20.1755 31.0206C20.2344 30.9539 20.2786 30.8755 20.3049 30.7904C20.3313 30.7054 20.3393 30.6158 20.3284 30.5275V24.5986C20.3296 24.5148 20.3142 24.4317 20.2829 24.3541C20.2516 24.2765 20.205 24.2059 20.1461 24.1464C20.0871 24.087 20.0168 24.04 19.9394 24.0081C19.862 23.9762 19.7791 23.9601 19.6953 23.9608ZM20.9473 30.5369C20.7823 30.5406 20.6254 30.6091 20.5104 30.7276C20.3955 30.846 20.3318 31.0049 20.3331 31.1699V39.2862C20.3222 39.3745 20.3302 39.4641 20.3566 39.5491C20.3829 39.6342 20.4271 39.7126 20.486 39.7793C20.545 39.846 20.6174 39.8993 20.6986 39.9359C20.7797 39.9725 20.8677 39.9914 20.9567 39.9914C21.0457 39.9914 21.1337 39.9725 21.2148 39.9359C21.296 39.8993 21.3684 39.846 21.4274 39.7793C21.4864 39.7126 21.5305 39.6342 21.5568 39.5491C21.5832 39.4641 21.5912 39.3745 21.5803 39.2862V31.1699C21.5809 31.0866 21.565 31.004 21.5334 30.9269C21.5018 30.8499 21.4552 30.7798 21.3963 30.7209C21.3374 30.662 21.2673 30.6154 21.1903 30.5838C21.1132 30.5522 21.0306 30.5363 20.9473 30.5369ZM27.5375 27.4C27.3709 27.4 27.2111 27.4662 27.0933 27.584C26.9754 27.7019 26.9092 27.8617 26.9092 28.0283C26.9092 28.195 26.9754 28.3548 27.0933 28.4726C27.2111 28.5905 27.3709 28.6567 27.5375 28.6567C27.7171 28.6567 27.7879 28.6897 27.8777 28.7606C27.9722 28.8315 28.0808 28.9637 28.2084 29.1622C28.4493 29.559 28.7233 30.1968 29.328 30.6975L33.0791 33.825C33.0853 33.8298 33.0916 33.8345 33.098 33.8391C33.6979 34.3021 34.3026 34.647 34.7089 35.0296C34.9215 35.2026 35.0904 35.4232 35.202 35.6735C35.3136 35.9238 35.3648 36.1968 35.3514 36.4705V38.039C35.3439 38.1257 35.3544 38.2131 35.3825 38.2956C35.4105 38.3781 35.4554 38.4538 35.5142 38.518C35.5731 38.5822 35.6447 38.6335 35.7244 38.6685C35.8041 38.7036 35.8903 38.7217 35.9774 38.7217C36.0645 38.7217 36.1506 38.7036 36.2304 38.6685C36.3101 38.6335 36.3816 38.5822 36.4405 38.518C36.4994 38.4538 36.5442 38.3781 36.5723 38.2956C36.6003 38.2131 36.6109 38.1257 36.6033 38.039V36.4705C36.6033 35.4359 36.1356 34.6517 35.5687 34.1179C35.0018 33.584 34.3593 33.2344 33.8586 32.847L30.1264 29.7385C29.7957 29.4645 29.5831 29.0063 29.2713 28.5055C29.1084 28.221 28.8937 27.9694 28.6383 27.7638C28.3196 27.5286 27.9336 27.398 27.5375 27.4ZM19.6953 4.55839C17.9804 4.55839 16.4592 4.79461 15.3018 5.19617C14.7773 5.36486 14.2842 5.61863 13.842 5.94732C13.4403 6.23099 13.1642 6.65946 13.072 7.14255L12.198 13.2321L12.9869 13.9218C17.3796 12.7048 22.0205 12.7048 26.4132 13.9218L27.2163 13.3218C27.2163 11.1723 26.9565 9.03696 26.2715 6.85909C25.988 5.97566 25.1187 5.48434 23.9944 5.12058C22.5982 4.71569 21.1488 4.52927 19.6953 4.55839ZM19.6953 5.81031C21.3016 5.81031 22.6574 6.00873 23.6117 6.31108C24.5566 6.61816 25.0195 7.05751 25.0762 7.23231C25.6431 9.02751 25.8038 10.7991 25.8557 12.5943C21.8135 11.616 17.5961 11.616 13.5538 12.5943L14.3097 7.32207C14.3192 7.26065 14.3853 7.1142 14.6168 6.93468C14.9525 6.69393 15.3239 6.50742 15.7175 6.38195C16.6907 6.0418 18.0938 5.81031 19.6953 5.81031Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                  <path\n                    d=\"M19.6056 8.94755C17.4608 8.96748 15.3296 9.29034 13.2752 9.90656C13.1894 9.9234 13.108 9.95797 13.0363 10.0081C12.9646 10.0581 12.9042 10.1226 12.8588 10.1974C12.8135 10.2722 12.7843 10.3556 12.773 10.4423C12.7618 10.5291 12.7688 10.6172 12.7935 10.7011C12.8183 10.7849 12.8603 10.8627 12.9169 10.9294C12.9734 10.9961 13.0433 11.0503 13.1219 11.0885C13.2006 11.1266 13.2864 11.1479 13.3738 11.1511C13.4612 11.1542 13.5483 11.139 13.6295 11.1065C17.585 9.88928 21.8152 9.88928 25.7707 11.1065C25.8516 11.1403 25.9386 11.1568 26.0263 11.155C26.1139 11.1532 26.2001 11.133 26.2795 11.0959C26.3589 11.0587 26.4296 11.0053 26.4871 10.9392C26.5447 10.8731 26.5877 10.7957 26.6135 10.7119C26.6394 10.6282 26.6474 10.54 26.6371 10.4529C26.6268 10.3659 26.5984 10.282 26.5537 10.2066C26.509 10.1312 26.4491 10.0659 26.3777 10.0151C26.3063 9.96424 26.2251 9.92888 26.1392 9.91129C24.0227 9.26128 21.8197 8.93633 19.6056 8.94755Z\"\n                    fill=\"#1A1A1A\"\n                  />\n                </svg> </span\n              >احمد محمد</v-card-title\n            >\n            <v-card-text style=\"font-size: 16px; font-weight: 400\"\n              >هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد\n              هذا النص من مولد النص العربى.</v-card-text\n            >\n          </v-card>\n        </swiper-slide>\n        <div class=\"swiper-prev\"></div>\n        <div class=\"swiper-next\"></div>\n        <div class=\"swiper-pagination\"></div>\n      </Swiper>\n    </v-container>\n  </div>\n</template>\n\n<script setup>\nimport { Swiper, SwiperSlide } from \"vue-awesome-swiper\";\nimport { Pagination, Navigation, Autoplay } from \"swiper\";\nimport { ref } from \"vue\";\n\nconst modules = [Pagination, Navigation, Autoplay];\n\nconst breakpoints = ref({\n  0: {\n    slidesPerView: 1,\n  },\n  580: {\n    slidesPerView: 2,\n  },\n  767: {\n    slidesPerView: 3,\n  },\n  1280: {\n    slidesPerView: 4,\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.swiper-button-next,\n.swiper-button-prev {\n  width: 35px;\n  height: 35px;\n  border: 2px solid rgb(95, 95, 95);\n  border-radius: 50%;\n  background-color: white;\n  &::after {\n    top: 43%;\n    font-size: 18px;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--mainColor);\n    font-weight: 900;\n  }\n}\n.swiper-pagination-bullet {\n  width: 8px;\n  height: 8px;\n}\n.swiper-button-prev {\n  right: 0 !important;\n}\n.swiper-button-next {\n  left: 0 !important;\n}\n.img-parent:hover {\n  .quick-view-btn {\n    opacity: 1 !important;\n  }\n}\n\n// Media Queries\n@media (max-width: 580px) {\n  .img-parent {\n    height: 250px !important;\n  }\n  .swiper-button-next,\n  .swiper-button-prev {\n    top: 44%;\n  }\n}\n</style>\n","import script from \"./SaidUS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SaidUS.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SaidUS.vue?vue&type=style&index=0&id=0f999195&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"our-partners py-15\">\n    <v-container>\n      <div class=\"title pb-15\">\n        <h1 style=\"font-size: 60px; font-weight: 700\">شركاؤنا</h1>\n      </div>\n      <Swiper\n        :pagination=\"{ el: '.swiper-pagination', clickable: true }\"\n        :modules=\"modules\"\n        :slides-per-view=\"3\"\n        :space-between=\"35\"\n        class=\"pb-5 px-5\"\n        :navigation=\"{ prevIcon: '.swiper-prev', nextIcon: '.swiper-next' }\"\n        :breakpoints=\"breakpoints\"\n        :loop=\"true\"\n      >\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا-1.svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا-2.svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا-3.svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا (1).svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا (2).svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا (3).svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا (4).svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <swiper-slide>\n          <v-card elevation=\"0\">\n            <img class=\"w-100\" src=\"@/assets/images/شركائنا (5).svg\" alt=\"\" />\n          </v-card>\n        </swiper-slide>\n        <div class=\"swiper-prev\"></div>\n        <div class=\"swiper-next\"></div>\n        <div class=\"swiper-pagination\"></div>\n      </Swiper>\n    </v-container>\n\n    <div class=\"btn-up px-15 py-15 d-flex align-center justify-end\">\n      <img\n        src=\"@/assets/images/up.svg\"\n        alt=\"\"\n        style=\"cursor: pointer\"\n        @click=\"$router.push({ name: 'home' })\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Swiper, SwiperSlide } from \"vue-awesome-swiper\";\nimport { Pagination, Navigation, Autoplay } from \"swiper\";\nimport { ref } from \"vue\";\n\nconst modules = [Pagination, Navigation, Autoplay];\n\nconst breakpoints = ref({\n  0: {\n    slidesPerView: 1,\n  },\n  580: {\n    slidesPerView: 2,\n  },\n  767: {\n    slidesPerView: 3,\n  },\n  990: {\n    slidesPerView: 3,\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.swiper-button-next,\n.swiper-button-prev {\n  width: 35px;\n  height: 35px;\n  border: 2px solid rgb(95, 95, 95);\n  border-radius: 50%;\n  background-color: white;\n  &::after {\n    top: 43%;\n    font-size: 18px;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--mainColor);\n    font-weight: 900;\n  }\n}\n.swiper-pagination-bullet {\n  width: 8px;\n  height: 8px;\n}\n.img-parent:hover {\n  .quick-view-btn {\n    opacity: 1 !important;\n  }\n}\n\n// Media Queries\n.swiper-button-next,\n.swiper-button-prev {\n  top: 50%;\n}\n</style>\n","import script from \"./OurPartners.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OurPartners.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./OurPartners.vue?vue&type=style&index=0&id=0c6680c0&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementVNode","src","_imports_0","alt","style","_imports_1","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_v_container","_component_v_row","_component_v_col","cols","_hoisted_4","_hoisted_5","_hoisted_6","_component_v_btn","elevation","_hoisted_7","script","__exports__","render","sm","md","lg","_component_router_link","to","_imports_2","_imports_3","_component_v_card","_component_v_card_title","_component_v_card_text","_hoisted_8","_hoisted_9","width","height","viewBox","fill","xmlns","d","color","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","id","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","isObject","obj","constructor","Object","extend","target","keys","forEach","key","length","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","getWindow","win","window","makeReactive","proto","__proto__","defineProperty","get","set","value","Dom7","Array","items","super","arrayFlat","arr","res","el","isArray","push","arrayFilter","prototype","filter","call","arrayUnique","uniqueArray","i","indexOf","qsa","selector","context","a","$","html","trim","toCreate","tempParent","innerHTML","nodeType","addClass","classes","classNames","map","c","split","classList","add","removeClass","remove","toggleClass","className","toggle","hasClass","contains","attr","attrs","arguments","getAttribute","attrName","removeAttr","removeAttribute","transform","transition","duration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","j","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","dom7proxy","splice","trigger","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","index","result","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","els","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","fn","noTrigger","shortcut","name","eventHandler","Methods","methodName","writable","deleteProps","object","nextTick","delay","now","currentStyle","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","webkitTransform","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","o","slice","isNode","node","HTMLElement","noExtend","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","__swiper__","setCSSProperty","varName","varValue","setProperty","animateCSSModeScroll","swiper","targetPosition","side","startPosition","translate","time","startTime","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","progress","Math","max","min","easeProgress","cos","PI","currentPosition","scrollTo","overflow","support","deviceCached","browser","calcSupport","smoothScroll","documentElement","touch","DocumentTouch","passiveListener","supportsPassive","opts","gestures","getSupport","calcDevice","platform","ua","device","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","iPadScreens","os","getDevice","overrides","calcBrowser","isSafari","toLowerCase","isWebView","test","getBrowser","Resize","emit","observer","animationFrame","resizeHandler","destroyed","initialized","createObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","removeObserver","unobserve","orientationChangeHandler","resizeObserver","Observer","extendParams","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","init","observeParents","containerParents","$el","observeSlideChildren","$wrapperEl","destroy","disconnect","priority","self","eventsListeners","method","once","onceHandler","__emitterProxy","onAny","eventsAnyListeners","offAny","eventsArray","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","Number","isNaN","assign","size","updateSlides","getDirectionLabel","property","getDirectionPropertyValue","label","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","marginRight","centeredSlides","cssMode","gridEnabled","grid","rows","slideSize","initSlides","shouldResetSlideSize","slidesPerView","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","floor","swiperSlideSize","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","updateAutoHeight","activeSlides","setTransition","getSlideByIndex","visibleSlides","ceil","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","autoHeight","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getSwiperTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transitionEmit","direction","step","transitionStart","slideTo","initial","Error","indexAsNumber","isValidNumber","isFinite","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","t","_immediateVirtual","_swiperImmediateVirtual","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","perGroup","slidesPerGroupAuto","slidesPerViewDynamic","increment","loopPreventsSlide","loopFix","_clientLeft","rewind","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","nextSnap","slideToIndex","loopCreate","$selector","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","loopedSlidesLimit","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","touchEventsTarget","cursor","unsetGrabCursor","closestElement","base","__closestFrom","assignedSlot","getRootNode","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","type","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","grabCursor","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","stopIndex","groupSize","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl","onResize","setBreakpoint","autoplay","running","paused","run","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","dummyEventAttached","dummyEventListener","touchEvents","domMethod","swiperMethod","start","passiveListeners","passive","move","end","cancel","updateOnWindowResize","attachEvents","bind","detachEvents","isGridEnabled","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointOnlyParams","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","prepareClasses","prefix","resultClasses","item","addClasses","suffixes","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","isPicture","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","update","currentSrc","wasLocked","lastSlideIndex","lastSlideRightEdge","initialSlide","createElements","url","uniqueNavElements","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","eventsEmitter","images","extendedDefaults","Swiper","swipers","newParams","modules","__modules__","mod","swiperParams","defaults","passedParams","eventName","velocity","desktop","touchEventsTouch","touchEventsDesktop","clickTimeout","velocities","setProgress","cls","getSlideClasses","slideEl","updates","view","exact","spv","breakLoop","slideInView","translateValue","translated","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","getWrapperSelector","getWrapper","wrapper","deleteInstance","cleanStyles","extendDefaults","newDefaults","installModule","use","module","m","prototypeGroup","protoMethod","createElementIfNotDefined","checkProps","element","Navigation","getEl","toggleEl","disabled","disabledClass","tagName","lockClass","$nextEl","$prevEl","onPrevClick","onNextClick","hideOnClick","hiddenClass","navigationDisabledClass","_s","targetEl","pagination","clickable","isHidden","classesToSelector","Pagination","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","$bulletEl","position","total","paginationType","firstIndex","midIndex","suffix","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","progressbarDirection","scale","scaleX","scaleY","paginationHTML","numberOfBullets","Autoplay","timeout","$activeSlideEl","autoplayResult","reverseDirection","stopOnLastSlide","stop","pause","waitForTransition","onTransitionEnd","onVisibilityChange","visibilityState","onMouseEnter","disableOnInteraction","onMouseLeave","attachMouseEvents","pauseOnMouseEnter","detachMouseEvents","needsNavigation","needsPagination","needsScrollbar","scrollbar","uniqueClasses","unique","paramsList","getParams","splitEvents","rest","allowedParams","plainObj","mountSwiper","paginationEl","scrollbarEl","calcLoopedSlides","slidesPerViewParams","renderLoop","swiperRef","modifiedSlides","duplicateSlide","h","blankSlide","getChangedParams","oldParams","oldChildren","getKey","addKey","oldChildrenKeys","childrenKeys","watchParams","newKeys","oldKeys","newKey","oldKey","getChildren","originalSlots","slidesRef","oldSlidesRef","slots","getSlidesFromElements","slotName","vnode","isFragment","updateSwiper","changedParams","updateParams","currentParams","thumbs","needThumbsInit","needControllerInit","needPaginationInit","needScrollbarInit","needNavigationInit","includes","controller","control","destroyModule","newValue","lazy","load","renderVirtual","virtualData","from","updateOnVirtualData","parallax","tag","String","default","wrapperTag","Boolean","a11y","coverflowEffect","cubeEffect","fadeEffect","flipEffect","creativeEffect","cardsEffect","hashNavigation","keyboard","mousewheel","zoom","emits","setup","_ref","Tag","WrapperTag","containerClasses","ref","breakpointChanged","initializedRef","swiperElRef","oldPassedParamsRef","nextElRef","prevElRef","paginationElRef","scrollbarElRef","onBeforeBreakpoint","_len","_key","_beforeBreakpoint","_containerClasses","SwiperCore","extendWith","cache","renderExternal","renderExternalUpdate","renderSlides","onUpdated","newPassedParams","provide","watch","onMounted","onBeforeUnmount","SwiperSlide","required","virtualIndex","eventAttached","slideElRef","slideClasses","updateClasses","onBeforeUpdate","slideData","computed","isActive","isDuplicate","isPrev","isNext"],"sourceRoot":""}